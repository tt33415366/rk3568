commit a40647719bc754dee9ad69006424a806b7332d59
Author: Kever Yang <kever.yang@rock-chips.com>
Date:   Fri Apr 22 16:18:31 2022 +0800

    phy: phy-rockchip-snps-pcie3: Update calibration controls
    
    This update fix link fail because of RX signal.
    
    Signed-off-by: Kever Yang <kever.yang@rock-chips.com>
    Change-Id: I7380f9ff0dfb351618fc09e543f676968b1f3ec9

commit 51e54266dc2cc3f565dcf003de28476dd0f7abe6
Author: Huang zhibao <hzb@rock-chips.com>
Date:   Wed Apr 20 11:05:48 2022 +0800

    arm64: dts: rockchip: rk3568-nvr-demo-v10: fix pcie3.0 config
    
    Signed-off-by: Huang zhibao <hzb@rock-chips.com>
    Change-Id: I6b1654ceb5b5993ccc5c06ea2fc39ecc83bdf870

commit 76cd0027379c6b302d201395cf3289d652e66ba8
Author: William Wu <william.wu@rock-chips.com>
Date:   Mon Apr 25 10:16:38 2022 +0800

    usb: dwc2: hcd: only allow to write packet into TxFIFO in slave mode
    
    The dwc2_queue_transaction() do data transfer for DMA
    mode if both the params.host_dma and chan->qh are true.
    In a test-case with an otg cable hot plug stress test
    in DMA mode, if the chan->qh is NULL, it is possible to
    do dwc2_hc_write_packet() which should only be called
    in Slave mode and cause a crash:
    
    [  633.852937] usb 1-1: reset high-speed USB device number 71 using dwc2
    [  633.853115] Unable to handle kernel read from unreadable memory at virtual address 0000000000000000
    ...
    [  633.974040] Call trace:
    [  633.974289]  dwc2_hc_write_packet.isra.6+0xfc/0x128
    [  633.974734]  dwc2_queue_transaction+0xc4/0x1f0
    [  633.975142]  dwc2_hcd_queue_transactions+0x10c/0x4b8
    [  633.975595]  dwc2_release_channel+0x12c/0x2a8
    [  633.975992]  dwc2_complete_non_periodic_xfer.isra.5+0x2c/0x48
    [  633.976514]  dwc2_hc_xfercomp_intr+0x370/0x488
    [  633.976921]  dwc2_hc_n_intr+0x2c8/0x840
    [  633.977282]  dwc2_handle_hcd_intr+0x424/0x7e0
    [  633.977677]  _dwc2_hcd_irq+0x10/0x18
    [  633.978018]  usb_hcd_irq+0x2c/0x48
    
    Change-Id: I33f7976710d6cdceb1b4758655dba7890488585d
    Signed-off-by: William Wu <william.wu@rock-chips.com>

commit d1d1ad90afcc6647a7a99431761e0aa213066669
Author: Chen Shunqing <csq@rock-chips.com>
Date:   Thu Apr 14 09:04:15 2022 +0000

    power: rk817_battery: fix battery not update after resume
    
    Signed-off-by: Chen Shunqing <csq@rock-chips.com>
    Change-Id: I305a6957d0e5e324cf6d5dee204d5f54de524336

commit 0b3e4066fe9037b7439c43fdbb8706d0f2618dc3
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Fri Apr 22 16:21:37 2022 +0800

    drm/rockchip: ebc_dev: release version v4.06
    
    1.fixed mirror panic
    2.user can disable rk logo by dts define is no use
    
    &ebc_dev {
        panel,disable_logo = <1>;
    };
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I02d070f3aa3c45fed47908aa3ae98f58dbf78e31

commit 26e2a4616e8f02f45dc5d7c18a6f070d09207239
Author: Elaine Zhang <zhangqing@rock-chips.com>
Date:   Fri Apr 22 11:14:33 2022 +0800

    ARM: dts: rockchip: rk3288: modify npll to 500M
    
    When NPLL is used for GMAC 125M and 50M, 500M has better PLL parameters
    than 1000M and 1250M, and jitter is smaller and more friendly for GMAC.
    
    Change-Id: I379d89480a93b930c78d84c3e52b97873d962284
    Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>

commit 205f26a6fc871f417b0d5dc4b74b72f177fef4ac
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Tue Apr 19 20:00:08 2022 +0800

    drm/rockchip: ebc_dev: release version v4.05
    
    add framecontrol under overlay mode to support system buf update
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I7837f655a1bc845cae4ab8d58ed28178a6da90ef

commit 1471cd1e68f63c59c64fec44236da84e1b6adbba
Author: Andy Yan <andy.yan@rock-chips.com>
Date:   Thu Feb 24 20:45:53 2022 +0800

    drm/rockchip: vop2: Support skip reference fb
    
    It support skip reference fb at vop driver by
    adding add skip-ref-fb at vop dt node.
    
    Change-Id: I7a0a91d905ba4907f8f0720e1997e9ee9c5c65c7
    Signed-off-by: Andy Yan <andy.yan@rock-chips.com>

commit 12b5b3c4d3b18aab56cf0dd3c29c58655990e036
Author: Liang Chen <cl@rock-chips.com>
Date:   Sun Feb 27 10:16:25 2022 +0800

    arm64: dts: rockchip: px30s: adjust opp-table by pvtm
    
    Change-Id: I87967427965e6723a3f13428ba3803100218700d
    Signed-off-by: Liang Chen <cl@rock-chips.com>

commit 2cb658339a1e631868b167a430432280f5ba0a97
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Thu Apr 14 11:38:22 2022 +0800

    drm/rockchip: ebc_dev: release version v4.04
    
    1.suspend logo update use part mode
    2.optimize code
    3.update system buf only when ebc not busy under overlay mode
    4.make system process same as normal under overlay mode
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I5d81319b49749a72bc514d3fd14cb678b63f9949

commit 1e39451160c063efd60725cdb6af0b720f436cfa
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Tue Apr 12 11:06:05 2022 +0800

    drm/rockchip: ebc_dev: release version v4.03
    
    1.add ioctl to get overlay status
    2.fix fresh uncompletely under overlay mode
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I3587baa284043d0d97890ef6401dfd1b0b589187

commit 74fbd2fe5d3a368b8693ebdd8bc710c0a2fcf1a5
Author: Steven Liu <steven.liu@rock-chips.com>
Date:   Tue Apr 12 15:06:05 2022 +0800

    firmware: rockchip_sip: fix sip_smc_get_amp_info return
    
    Signed-off-by: Steven Liu <steven.liu@rock-chips.com>
    Change-Id: Icdb0b9bd5edfebd0bc67c4828efb5aa444cf4433

commit dc61b94bc26a90ebe533766ace99d99b7da135e0
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Sat Apr 9 15:29:43 2022 +0800

    drm/rockchip: ebc_dev: release version v4.02
    
    1.overlay need enable always when hardwrite, to fix hardwrite delay
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: Ie6bf7f54739d04cb02f8da69256f8541f2e8173f

commit 89622c4d4906e971fabb873d069fc20581d1541b
Author: Sandy Huang <hjc@rock-chips.com>
Date:   Fri Mar 25 14:55:18 2022 +0800

    drm/rockchip: vop2: remove linear format support for rk356x cluster
    
    Signed-off-by: Sandy Huang <hjc@rock-chips.com>
    Change-Id: I0166d677174857e120b7ba7e7f74f91705d24a97

commit 32c35dd1dabe1a63f1b3c754b46787888e4248c6
Author: Elaine Zhang <zhangqing@rock-chips.com>
Date:   Thu Mar 17 09:26:46 2022 +0800

    rtc: rtc-rk630: update rtc driver
    
    Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
    Change-Id: Id77eb4afbbf386198122a96a628c30af5e4d5143

commit c5051a8a2dda451450102b22b83e9403545db975
Author: Elaine Zhang <zhangqing@rock-chips.com>
Date:   Thu Mar 17 09:25:39 2022 +0800

    mfd: rk630: remove irq
    
    Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
    Change-Id: Icaeb782a719989aae69dba1143085645e3429cc7

commit a259a8f8184b4070a8d7046d7028d144d9565d2f
Author: Yiqing Zeng <zack.zeng@rock-chips.com>
Date:   Wed Aug 11 15:47:10 2021 +0800

    ARM: configs: rv1126_defconfig: enable imx335 and imx415
    
    Signed-off-by: Yiqing Zeng <zack.zeng@rock-chips.com>
    Change-Id: I80250524ac64cdd3d45ffb640dc110dfec6f54fd

commit 9e3bb05cbf1bb7a5ce81d92b8924cb311bed5bec
Author: David Wu <david.wu@rock-chips.com>
Date:   Mon Apr 11 16:11:48 2022 +0800

    ARM: dts: rockchip: rk3288-evb: Change rgmii clock mode from input to output for gmac
    
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Change-Id: Ia73346adb607744bd037c7b255ba1647678ad77c

commit 67a80952ca5ed857f1c8dd46261ddfabe9c252f0
Author: Yiqing Zeng <zack.zeng@rock-chips.com>
Date:   Wed Aug 11 14:39:36 2021 +0800

    ARM: dts: rockchip: rv1126-evb-v10: support imx415/imx335 compatible with os04a10
    
    Signed-off-by: Yiqing Zeng <zack.zeng@rock-chips.com>
    Change-Id: I6518658e928095ece509a41f32ebf14d977cb9b5

commit ea77f1f34b6bc8566e37d57fc37be8944bae15a1
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Fri Apr 8 11:55:13 2022 +0800

    drm/rockchip: ebc_dev: release version v4.01
    
    disabled new frame waiting time default
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: Ic456f53b47a7382448c41dcd14e8e6ed11aaaec1

commit 7140318b64a567906d3d51ff196b3db64061d42d
Author: Alex Wang <alex.wang@rock-chips.com>
Date:   Thu Apr 7 15:23:34 2022 +0800

    arm64: dts: rockchip: add rk3566-box-demo-v10-android9 rk3568-evb1-ddr4-v10-android9 for 356X Android9
    
    Change-Id: I9dbc836d3ec8d0bde15c59ee8715877473681744
    Signed-off-by: Alex Wang <alex.wang@rock-chips.com>

commit ac3f04e2724bbc682ffe3641139bedde8016b7da
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Mon Apr 4 00:56:50 2022 +0800

    drm/rockchip: ebc_dev: release version 4.00
    
    1.restructing code: overlay mode quick change, improve part mode
    framecontrol
    2.not support Y8 buffer now, will support for later versions
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I84f7cb8af13ff6da9682da6f90cfd9e740f97df8

commit 7fd99518de25771e755d17b73d32ff7f110590ad
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Thu Apr 7 10:30:54 2022 +0800

    drm/rockchip: ebc_dev: tps65185: clear shadow when resume
    
    to fix power failed on some panels
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: Ib0ce6fbe0a0e14d3e88666a8828c3c517589513f

commit 0f7e0ac36b285a1c7facfd7d87304123da4ac3fe
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Sat Apr 2 11:47:20 2022 +0800

    drm/bridge: rk630: Support CVBS GB signal test
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: I8ac0b06147f485d66b9612fbf46e811fcd28ab9b

commit 252021344b98a452af9bcc8be9e69f15efb2c5a1
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Fri Apr 1 16:43:07 2022 +0800

    crypto: rockchip: v2: pka: Optimize poll time
    
    The most time-consuming operation is the RSA private
     key EXP_MOD operation, which sets the poll time separately.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I6307e6134e99dbdfbe2ce75539ba8bed1a703f43

commit 6a27899ba111471a9bb28bb863aa7e310c4204d5
Author: Tao Huang <huangtao@rock-chips.com>
Date:   Tue Mar 29 16:57:34 2022 +0800

    crypto: rockchip: Add missing include of rk_crypto_v2_pka.h
    
    drivers/crypto/rockchip/rk_crypto_v2_pka.c:615:6: warning: no previous prototype for rk_pka_set_crypto_base [-Wmissing-prototypes]
    drivers/crypto/rockchip/rk_crypto_v2_pka.c:629:5: warning: no previous prototype for rk_pka_expt_mod [-Wmissing-prototypes]
    
    Signed-off-by: Tao Huang <huangtao@rock-chips.com>
    Change-Id: Ifd4335f6355ca173e391851bca536cb63ee7d5f5

commit ffc067452b34b49255b4080b64b10c2cb4609080
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Tue Mar 22 19:53:14 2022 +0800

    media: rockchip: cif: fix set fmt crash when no sensor registered
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: Ia44c94b0f00b63e224efc5a4135b3253c46ea2ba

commit 636b7c4cc5814dc5152b5239091e16b63d10a104
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Mon Feb 28 11:04:46 2022 +0800

    media: rockchip: cif: fix dvp dev frame status clr issue
    
    when frame number reach 0xfffe or 0xfffd, should clear it,
    but should not clear frame x ready state, otherwise cause
    split preview when frame number reach 0xfffe or 0xfffd;
    so fix it.
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I180b3871c874578e877e25a2ae95e4881e4925f9

commit 8dfb490b676565b2757d94a0685e1f9f7a77f525
Author: Binyuan Lan <lby@rock-chips.com>
Date:   Mon Mar 28 14:01:13 2022 +0000

    ASoC: rockchip: rk817-codec: Add version recognition and set up different PLL configurations
    
    Signed-off-by: Binyuan Lan <lby@rock-chips.com>
    Change-Id: I0209db73994e428b25e9cba4417f0f3dd98fb3dc

commit de863fc505efd297c110debaf9a64c89183b3cb0
Author: Liang Chen <cl@rock-chips.com>
Date:   Tue Mar 15 10:07:59 2022 +0800

    soc: rockchip: power-domain: keep pd_gpu always on for px30s
    
    Change-Id: Ieb81bdd80aaabb24d490c13be147cb3e1a1417dd
    Signed-off-by: Liang Chen <cl@rock-chips.com>

commit 0a77c011e59999a22033ec6c2d91394cf2c6059b
Author: Yifeng Zhao <yifeng.zhao@rock-chips.com>
Date:   Tue Mar 29 16:33:02 2022 +0800

    soc: rockchip: vendor storage: add HDCP_14_HDMIRX_ID
    
    Modify SENSOR_CALIBRATION_ID from 13 to 14 and add
    SENSOR_CALIBRATION_ID.
    
    Signed-off-by: Yifeng Zhao <yifeng.zhao@rock-chips.com>
    Change-Id: Id10be9960c1d7015edebaa7ccf646d8f16cf1d15

commit 21f3c32fe3fb6b0bd7cf86bbe4da7de0cf7820c7
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Fri Mar 4 09:10:15 2022 +0800

    crypto: rockchip: v3: add crypto version check
    
    Add automatic check, can be automatically trimmed according
     to the register supported algorithm.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ie807cba240389466be1d1f177bbc9b35a47efecb

commit 0e7dce8342cf12baaa04591b5bbee811a0eeb035
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Thu Mar 3 16:02:45 2022 +0800

    crypto: rockchip: v3: add crypto V3 support
    
    Add a new generation of Crypto IP drivers and add
     multithreaded cipher/hash support.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Iaefda28a1efc9c5af29b71cd3453d108b6e9260a

commit 5d090b89226e30caefedeecfdd8c45de397ca231
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Thu Mar 3 15:58:35 2022 +0800

    crypto: rockchip: v2: move common skcipher/ahash function to utils
    
    Crypto V2 and Crypto V3 have a lot of code to reuse, so simplify
     the code before importing Crypto V3.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ifcd5314a78c56b8db5d2444863172aeceab310d0

commit 429d8089fba8c5e9f0e185d983fea7923473713e
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Wed Mar 23 21:28:01 2022 +0800

    crypto: rockchip: v2: akcipher: add mutex for multi-threaded support
    
    Add mutex to prevent multi-threaded concurrency from competing.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ia9a0dad65b47168c4588cf64eaa93e0d2566e17e

commit 4ded64c1daab62372e90758cfa64f0ff7ba48976
Author: Jon Lin <jon.lin@rock-chips.com>
Date:   Tue Mar 29 17:06:24 2022 +0800

    drivers: rkflash: Support new devices
    
    GD5F1GM7UxG, GD25Q64C, PY25Q128H
    
    Change-Id: Iee89a02153de1335677169f2b5e0488b2539c428
    Signed-off-by: Jon Lin <jon.lin@rock-chips.com>

commit f2da1e38ac772ffa94c10c03555c934b88ef3ec4
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Tue Mar 29 08:55:35 2022 +0800

    media: i2c: nvp6188: add quick stream support
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I38248a754512959751269124d4adaf273447290d

commit 4c102beb68c7704c229e0ec29cdbcd2e760fabb0
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Mon Mar 28 08:29:59 2022 +0000

    arm64: dts: rockchip: rk3326-evb-lp3-v11-avb: add dw9714 config
    
    add vcm dw9714 config for ov5695 module
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I347ebe97cb67d5b0cad320c9de07456457434d7d

commit 3b6b6c725c717774ddaae689e283e99c7a2d48b0
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Mon Mar 28 08:29:27 2022 +0000

    arm64: dts: rockchip: rk3326-evb-lp3-v10-avb: add dw9714 config
    
    add vcm dw9714 config for ov5695 module
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I8ac4bf6979feddd9dc474afc0fd093175bb0f27e

commit 5103c1b52dac6409dc03bf95e875a90e0af73312
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Mon Mar 28 08:24:48 2022 +0000

    arm64: dts: rockchip: px30-evb-ddr3-v10: add dw9714 config
    
    add vcm dw9714 config for ov5695 module
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I0bc78a6ac4e5eb321c5b349fd77256e72a26bd44

commit 8d2fdeb6c4d4067e5f3d7a644f5d0aa96cc6ce8e
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Wed Mar 23 16:20:39 2022 +0800

    media: i2c: nvp6158: get init status before start workqueue
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I15b7e97ec1db77848fdb08a83fe6e9162d063067

commit c0a5e28d6caab207849bf53b79f31801cbb97e31
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Thu Nov 11 15:54:49 2021 +0800

    media: rockchip: cif: mipi/dvp dev irq not effect another
    
    currently, any interrupt of mipi/dvp dev will
    enter irq of both interface, it's not needed;
    so modify the judgment logic that do not goto
    irq function of stopped dev.
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: Ie3cbcc2aef0eaa69aa84d7873280b79592a86a0d

commit fd53627a358f0086e7e3e7600423b6a847a29329
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Fri Nov 12 01:02:35 2021 +0000

    media: i2c: nvp6324: add workqueue support
    
    add workqueue to detect ahd state
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: Iff9cee96b4b442b7e1e9cc44ca99027252bbbe16

commit 9fcac60abd79ef2c80490777fb5f23030c86bddb
Author: Wu Liangqing <wlq@rock-chips.com>
Date:   Sat Mar 5 15:13:54 2022 +0800

    rtc: hym8563: align the alarm time settings
    
    Signed-off-by: Wu Liangqing <wlq@rock-chips.com>
    Change-Id: I59bacd5ef31f67af52313106382ca33734046c72

commit 18acf5c5592717b1d745fea682764e6198dd35dc
Author: Guillaume Tucker <guillaume.tucker@collabora.com>
Date:   Fri Nov 6 09:06:31 2020 +0000

    UPSTREAM: rtc: hym8563: enable wakeup when applicable
    
    Enable wakeup in the hym8563 driver if the IRQ was successfully
    requested or if wakeup-source is set in the devicetree.
    
    As per the description of device_init_wakeup(), it should be enabled
    for "devices that everyone expects to be wakeup sources".  One would
    expect this to be the case with a real-time clock.
    
    Tested on rk3288-rock2-square, which has an IRQ configured for the
    RTC.  As a result, wakeup was enabled during driver initialisation.
    
    Change-Id: I1e0c3f99d38c84ba7e6c15bf8919a3f30289e7ae
    Fixes: dcaf03849352 ("rtc: add hym8563 rtc-driver")
    Reported-by: kernelci.org bot <bot@kernelci.org>
    Signed-off-by: Guillaume Tucker <guillaume.tucker@collabora.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/1ea023e2ba50a4dab6e39be93d7de3146af71a60.1604653374.git.guillaume.tucker@collabora.com
    Signed-off-by: Tao Huang <huangtao@rock-chips.com>
    (cherry picked from commit c56ac7a0f468ceb38d24db41f4446d98ab94da2d)

commit 1e0166ad69de4aadae3a83a4a7f58a115294c7b8
Author: Wu Liangqing <wlq@rock-chips.com>
Date:   Sat Dec 4 16:04:04 2021 +0800

    rtc: hym8563: fix rtc init time error
    
    Fixes: 815c9a084e62 ("rtc: hym8563: set init time")
    Change-Id: Ic303169494007bc22a374ba11a2b553de22f747b
    Signed-off-by: Wu Liangqing <wlq@rock-chips.com>

commit 83bd38a8d814f1f5a0dbf2913bdb104fb6f941b7
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Thu Mar 24 15:55:12 2022 +0800

    arm64: dts: rockchip: rk3399-sapphire-excavator-edp: rm gc2145 configs
    
    gc2145 module is unused in rk3399 sapphire excavator board,
    so remove it's configs
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: Ibe50d8c1fa382052872d1363fd4d2dd8039c7dc1

commit 9785840985e0cdf3a993ec0799fb3e6401d236b0
Author: Yiqing Zeng <zack.zeng@rock-chips.com>
Date:   Tue Mar 15 11:48:16 2022 +0800

    media: rockchip: cif: support stream 1/2/3 reset for hotplug
    
    Signed-off-by: Yiqing Zeng <zack.zeng@rock-chips.com>
    Change-Id: Icd10ec6fc7d09c7f3323a8f5834abb652c52ac52

commit 6c681c2f38bb631b3254d968b4cca57c92fd0652
Author: Su Yuefu <yuefu.su@rock-chips.com>
Date:   Tue Jul 13 16:42:09 2021 +0800

    media: i2c: add sc2355 sensor driver
    
    Signed-off-by: Su Yuefu <yuefu.su@rock-chips.com>
    Change-Id: I5474cebbfb2f8502aa950aafe6f846d17d5ead54

commit b818ef4e522d198573ddcb5f480889e44dd10465
Author: Sugar Zhang <sugar.zhang@rock-chips.com>
Date:   Mon Mar 21 17:25:57 2022 +0800

    rk: scripts/mkimg: Clean out directory before repack fit image
    
    Also support fit boot.img is symlink.
    
    Change-Id: I1d2ebea389d0d8a2cbf19dee56832dd087c2c858
    Signed-off-by: Sugar Zhang <sugar.zhang@rock-chips.com>
    Signed-off-by: Tao Huang <huangtao@rock-chips.com>

commit 8c942affde36e18084d4b50cd5251f1ff0712c90
Author: Yanchao Hu <yanchao.hu@rock-chips.com>
Date:   Fri Mar 18 15:42:54 2022 +0800

    mfd: rk630: Add rk630-codec mfd_cell
    
    Fix rk630_codec probe fail
    
    Signed-off-by: Yanchao Hu <yanchao.hu@rock-chips.com>
    Change-Id: Ib6e76a0ee0c31164b3d4878684b341966d93ea8d

commit 97719576c437d2ecb56cd4cc79e0c280b0f2936d
Author: David Wu <david.wu@rock-chips.com>
Date:   Fri Mar 18 21:02:05 2022 +0800

    net: phy: rk630phy: Differentiate the PHYs of S40 and T22
    
    At present, it is the best way to distinguish by address,
    the two configure different registers during the initialization process.
    
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Change-Id: I2bbb0cfb6f2e33e25406b7d28ac22e5e035f64e3

commit fd7c0e201231c7e4f0e32be4c7a792faf8f4ea09
Author: David Wu <david.wu@rock-chips.com>
Date:   Fri Mar 18 17:41:10 2022 +0800

    net: phy: rk630phy: Use falling edge instead of rising edge
    
    The default voltage is high, so it is more appropriate to
    use a falling edge.
    
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Change-Id: I74a9ae7e0a2432c4050f2d305aeaa8d9f4f31e62

commit fb86ecb0a11adbb01c6752c350503f22f9336a73
Author: David Wu <david.wu@rock-chips.com>
Date:   Fri Mar 18 17:19:50 2022 +0800

    net: phy: rk630phy: Remove unused code
    
    Now adjust the voltage through BGS, so don't need this part
    of the code.
    
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Change-Id: Ia915cd0b2a3ac96386f96aee6204e477c3188f2a

commit 075cd51068cae671588cd507baadaeecf3db0735
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Fri Mar 18 20:46:21 2022 +0800

    Revert "media: rockchip: isp: dynamic memory alloc for params and stats function"
    
    This reverts commit 57bacabe6e98c4edfab40fd20c6e31f06f00feba.
    
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>
    Change-Id: I97801770b8ed4e618bf99c4ab72c3c3d80c81d82

commit 7bf73ec341f155f5f785af673a3a4a5d391ace59
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Fri Mar 18 16:16:15 2022 +0800

    crypto: rockchip: modify RK_DMA_ALIGNMENT from 64byte to 128byte
    
    For SHA384/SHA512, the data length must be 128 bytes alignment.
    Otherwise, the calculation results will be incorrect.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: If3b16a62d0eaf842ccc8bf954a489508b232a4b3

commit c76af1e5d894e552a93178d3b71e551b289ff3af
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Mon Feb 28 15:10:18 2022 +0800

    media: rockchip: isp: add cgc config
    
    Change-Id: I235207147a7c4bd14c195d5bb53dec5992a1c3c3
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 35d85e04c36b6140b3b05bbac875450e902919d4
Author: Wyon Bi <bivvy.bi@rock-chips.com>
Date:   Fri Mar 18 14:28:20 2022 +0800

    drm/bridge: analogix_dp: Update config for SI test
    
    Tested on RK3399.
    
    Signed-off-by: Wyon Bi <bivvy.bi@rock-chips.com>
    Change-Id: Ia477ff40c8efacf4699884a34befc303f40fbb5d

commit d005a0fbdb6370d2215e4fbc4fac6aae267c05cf
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Fri Mar 11 15:26:13 2022 +0800

    drm/rockchip: ebc_dev: release version v3.05
    
    optimize the ghosting under overlay mode
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I069581d02533aca4fa5dc5f7c867c84d29cc12e4

commit 65b7733db7c4b3eb5ebe2542903ac30e2b15fe33
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Tue Mar 15 09:28:34 2022 +0800

    crypto: rockchip: cryptodev_linux: move user header to uapi/linux
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ie2cb4600a109fd2830b81ddae99b3182ae91f780

commit 6c9c379a5c26d260189eda18d502a215f239e11c
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Mon Mar 7 11:14:40 2022 +0800

    crypto: rockchip: cryptodev_linux: add rsa support
    
    Add new ioctl cmd RIOCCRYPT_RSA_CRYPT for rsa encrypt/decrypt.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: If92e1a71b1ce4fcf6b414736cf6405a1d7b6334c

commit 2b99eff65bd7aa96cf7576d76a7bbdf8bcde707e
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Fri Mar 11 15:04:20 2022 +0800

    crypto: rockchip: v2: akcipher: prevent input data overflow
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I39442e8e8ad1897b454da451090fbe867d6b26d6

commit 803d46b245aa8d184a12fa48af2d2c8b1551bcb8
Author: Damon Ding <damon.ding@rock-chips.com>
Date:   Tue Jan 4 18:48:18 2022 +0800

    FROMLIST: pwm: gpio: Add a generic gpio based PWM driver
    
    This patch adds a bit-banging gpio PWM driver. It makes
    use of hrtimers, to allow nano-second resolution, though
    it obviously strongly depends on the switching speed of
    the gpio pins, hrtimer and system load.
    
    Each pwm node can have 1 or more "pwm-gpio" entries,
    which will be treated as pwm's as part of a pwm chip.
    
    Link: https://patchwork.ozlabs.org/project/linux-pwm/patch/1445895161-2317-8-git-send-email-o.schinagl@ultimaker.com/
    Signed-off-by: Olliver Schinagl <oliver@schinagl.nl>
    Signed-off-by: Damon Ding <damon.ding@rock-chips.com>
    Change-Id: Ibdb28eca3239a3a8503c947667117a9b0e9427b9

commit 2215c65689a557d1b5af344685b6566973895ad2
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Wed Mar 16 09:44:07 2022 +0800

    arm64: dts: rockchip: rk630: Fix efuse compatible
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: Id1293a4d336bf3b345ecaca62206e4d31cd00814

commit 5465972a5229854b6317dfda13dcc024ef927420
Author: William Wu <william.wu@rock-chips.com>
Date:   Tue Mar 15 16:40:11 2022 +0800

    USB: quirks: Add NO_LPM quirk for Lexar Flash drive
    
    LPM on the device appears to cause xHCI host controllers
    to reset the usb device when run at USB 2.0 high speed,
    then the device will enter suspend and unable to exit.
    
    Change-Id: I185cfe2c01f6de20463b041bdf4dac54978f1ada
    Signed-off-by: William Wu <william.wu@rock-chips.com>

commit 4520274716c8256733ea911ffc80708a427600b5
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Wed Feb 23 19:35:44 2022 +0800

    ARM: configs: rockchip_defconfig enable CONFIG_VIDEO_GC8034
    
    ov13850 module is not enough, add gc8034 module support
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I4b9f8067cad60c9c62a3d8ee02b101c6d2b9ead1

commit 749a6521a9b2c02ca797a4b80ef6fba335c74127
Author: Yanchao Hu <yanchao.hu@rock-chips.com>
Date:   Tue Mar 15 14:14:44 2022 +0800

    arm64: dts: rockchip: rk630-rk3568-ddr3-v10: Add rk630_sound node
    
    Signed-off-by: Yanchao Hu <yanchao.hu@rock-chips.com>
    Change-Id: I341cc2f85fed23c88b425e8f559f11ce92277539

commit 67485f3fff0e4f972b6ce17f923e9878e24803ed
Author: Damon Ding <damon.ding@rock-chips.com>
Date:   Fri Dec 31 15:37:52 2021 +0800

    media: uapi: Add format MEDIA_BUS_FMT_RGB565_1X24_CPADLO
    
    Bus-format shows below:
            R[D3~D7] G[D10~D15] B[D19~D23]
    
    Signed-off-by: Damon Ding <damon.ding@rock-chips.com>
    Change-Id: I34dc2796c5041749379b3f51420c8fc388f20ebe

commit 63bcdc8fb8598f64e39024606b9aaf11759647ba
Author: Tao Huang <huangtao@rock-chips.com>
Date:   Tue Mar 15 14:56:41 2022 +0800

    dt-bindings: display: media-bus-format: include uapi/linux/media-bus-format.h directly
    
    Signed-off-by: Tao Huang <huangtao@rock-chips.com>
    Change-Id: Ifb9dfa7a0ddbdae804eb570f2af714ed5d623446

commit f282b415467b2e1a0609b781a486811ffe59b7d3
Author: David Wu <david.wu@rock-chips.com>
Date:   Sat Mar 12 21:04:54 2022 +0800

    arm64: dts: rockchip: rk630-rk3568: Enable rk630 macphy support
    
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Change-Id: Ie32b85f67daa3672c1c16995e70af8ad760bef09

commit 8896134fda68c5e73c6d782d46d26f0e1b34746a
Author: David Wu <david.wu@rock-chips.com>
Date:   Mon Mar 14 22:22:44 2022 +0800

    arm64: dts: rockchip: rk630: Add macphy node
    
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Change-Id: I24966acb6358e9e9170d389a17ac0305cf1f527d

commit cd8d7bd5c7f7792d56ac04b592853703ac3873e9
Author: Yanchao Hu <yanchao.hu@rock-chips.com>
Date:   Mon Mar 14 16:00:59 2022 +0800

    arm64: dts: rockchip: rk630: Add rk630_codec node
    
    Signed-off-by: Yanchao Hu <yanchao.hu@rock-chips.com>
    Change-Id: I48cda7577141515e46f393431d1d32502b550e70

commit 1cf268ab2dddb0991c03b0db5a8d00d3ee568e7b
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Mon Mar 14 16:01:25 2022 +0800

    arm64: rockchip_defconfig: Enable CONFIG_RK630_PHY
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: Ie84bce4e4081efd0c1d7317ed76db7b8167a8e1c

commit 28661369d75f0a2aae68cb1ff77ee41d1ec1c1d6
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Wed Mar 9 10:16:49 2022 +0800

    media: rockchip: isp: add version to querycap
    
    Change-Id: Idb3fc5e57d5ecf0ea8dfe82bc7072998f2472940
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 98cb7b3067672830cd6e339cab316a11e72a959b
Author: Steven Liu <steven.liu@rock-chips.com>
Date:   Fri Mar 11 11:21:26 2022 +0800

    mfd: rk630: add pinctrl regmap
    
    Signed-off-by: Steven Liu <steven.liu@rock-chips.com>
    Change-Id: Ia4aa4b4b5f8954ca39753f4f168610091bdc502e

commit a8ab15fdb11e2bd302caf7b39e196698229af716
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Sat Mar 12 16:44:12 2022 +0800

    nvmem: rk628-efuse: Fix rk630 efuse clk enable/disable
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: Ie876e46645d3c7fd843ecb78200c958859edb89d

commit 85bf366b255873018f70e0654945182f4ddf86d6
Author: David Wu <david.wu@rock-chips.com>
Date:   Sat Mar 12 20:59:23 2022 +0800

    mfd: rk630: Set phy clock from ref clock
    
    The phy clock is the same as the input clock of rk630, so
    use this clock for configuration.
    
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Change-Id: Ie5c0e58958a1fdd9e264d861295d64e4ccb483cb

commit ac993b44ea1736fbf73115d9e0d34a74c51c686f
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Sat Mar 12 11:15:12 2022 +0800

    arm64: rockchip_linux_defconfig: Enable rk630
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: Ic4f963fe599c4efda3e5fe91fa1394cad2e36d6e

commit 1a4837ba639a8f2bdf47e8b20c56dc42206524d7
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Sat Mar 12 11:01:17 2022 +0800

    mfd: rk630: Disable rtc output clamp
    
    If rtc output clamp is enabled, rtc regs can't be accessed,
    RK630 irq add will failed.
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: I7e9de652b64f2c3c87ecc0af0fb5f9b5906f7db3

commit 87d9525b3da144f2d5b70ba1c2efb25f4dfe55a5
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Sat Mar 12 09:44:58 2022 +0800

    arm64: dts: rockchip: rk630-rk3568-ddr3-v10: Fix rk630 cfg error
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: I14b2158de3f77e6d60870de8fc4c1ea1f049d925

commit 55e65dae159495725629410bdb6f2d1938d7435b
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Tue Mar 8 16:04:48 2022 +0800

    drm/rockchip: ebc_dev: release version v3.04
    
    enter overlay mode no waiting
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I1369695f4af88cb81f648c14b32fb77e5e5c1db6

commit 166aca8472c9d5ef219b6459e9eff22105426c9f
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Tue Dec 28 14:24:12 2021 +0800

    media: rockchip: isp/ispp to version v1.8.0
    
    Change-Id: Ibabaa8c0f7dfb9f6ad6e75a0f556d8d28a1a13aa
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit b979cf8835a4d742529617bf70324526d9978608
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Wed Feb 9 15:21:52 2022 +0800

    media: rockchip: isp: add csm params config for isp21
    
    Change-Id: I87732e4f6ce0bcc936e919ed82b2dad62ec25639
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit d540588b6642643da0a53b59742ac646cd14f94f
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Sat Feb 19 11:29:51 2022 +0800

    media: rockchip: isp: 3a params config first for isp21
    
    Change-Id: Ib8b04ba027527c159bc15e5d757eed055256f740
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit a96106bf1d01aa582fa63f17149ebcf01696b62a
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Sat Feb 19 11:25:58 2022 +0800

    media: rockchip: isp: fix bigmode for multi device for isp21
    
    Change-Id: If9b82e58081c1c09f0a0d387e7cafeed86d25f05
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 506945944d8babb31e6b5bc89d1d204f263a3268
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Fri Jan 28 10:33:17 2022 +0800

    media: rockchip: isp: increase v4l2 events length
    
    Change-Id: I30638c25cd51b64875c0fbe6383b879ed8ab8fb2
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 2cd1109f46c738bd9bc09f94f74db903cf832d46
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Wed Jan 26 16:37:09 2022 +0800

    media: rockchip: isp: fix awb raw data config for multi device
    
    Change-Id: I295dcda2a0f7e1ccc40f3e9f1b9838e655238584
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 57bacabe6e98c4edfab40fd20c6e31f06f00feba
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Sat Nov 27 17:15:55 2021 +0800

    media: rockchip: isp: dynamic memory alloc for params and stats function
    
    Change-Id: Iecc3391295e264ac6569c2ace257a023bfa3ed9e
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 043ff868f879c034cb6e7c57acfa347d9b69092e
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Fri Nov 19 16:23:04 2021 +0800

    media: rockchip: isp: fix rawhist weight config error for multi deivce
    
    rawhist weight reg will be automatically incremented by each write.
    
    Change-Id: I531d8a03dda804039237d3400d77127b070c11e9
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 67e2b460c0778d4d78c20a66720cc50d61be6333
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Fri Nov 12 14:07:27 2021 +0800

    media: rockchip: isp: fix first frame abnormal
    
    Change-Id: Ie0046cdca76064b11642accf57b303328787536b
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 675786af15f81126c28fd9f0c1eefba975517f8e
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Fri Nov 12 14:42:42 2021 +0800

    media: rockchip: isp: useless version return -EINVAL
    
    fix crash for CPU_XXX no define
    
    Change-Id: I4577c7b33823c258b0166378e96d0394b81f570e
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 0b1fb9778fc1635e4e262f7bcb642b389fc09399
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Fri Nov 19 10:02:32 2021 +0800

    media: rockchip: isp: fix first params config two times for readback mode
    
    Change-Id: Ia6209e60fc75a039ca06d1aa0d5d64e4c9515b9e
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit d3dd2eea0389c917818fcada42f5788d87b73494
Author: Cai YiWei <cyw@rock-chips.com>
Date:   Tue Oct 26 16:13:48 2021 +0800

    media: rockchip: isp: adjust params common api
    
    Change-Id: I5d2961496ec445bea3c3592050d9ef0bd35778c1
    Signed-off-by: Cai YiWei <cyw@rock-chips.com>

commit 101a69d8c25fcd2cc9141690ba1d3a5598862c6a
Author: Su Yuefu <yuefu.su@rock-chips.com>
Date:   Thu Oct 28 20:44:08 2021 +0800

    media: i2c: add sc530ai sensor driver
    
    Signed-off-by: Su Yuefu <yuefu.su@rock-chips.com>
    Change-Id: I5dc9036695137bfbf0f4c33ff3b4d14c0356795d

commit 3a33a3c95382b7d6a7caedb0409656062bf1a892
Author: Steven Liu <steven.liu@rock-chips.com>
Date:   Wed Mar 9 17:42:40 2022 +0800

    mfd: rk630: update pinctrl iomux select
    
    Signed-off-by: Steven Liu <steven.liu@rock-chips.com>
    Change-Id: Ifdef9505fc74ed34fb69540a3d52765ad70538e5

commit 2ce635afa37e01d5d021384b3c67c56adbc0ad64
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Wed Mar 9 09:58:51 2022 +0000

    arm64: dts: rockchip: rk3566-evb2: enable csi2_dphy0 for gc8034
    
    For ov5695 has been stop production, so replace
     ov5695 module config with gc8034
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I06aa7d18a82f11a98e6c8bee40a1dd9d5ae60e66

commit 19f0cc15dc270b9c9e1b3f1dd9ef4641d46982fa
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Tue Mar 8 17:39:20 2022 +0800

    arm64: dts: rockchip: rk630-rk3568-ddr3-v10: Add rk630 node
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: Ifbf1e996886123aec8718f42388609f1373cddad

commit 9a215bcd12a7a50c0d698d054b3fe2cc731dc4df
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Tue Mar 8 16:17:29 2022 +0800

    arm64: dts: rockchip: Add dtsi file for rk630
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: I3474d89b48ddabe1eca93ee0236d089b1dd2e554

commit cbda874920a11d1e3e2af98faaaef9289f6e6a5f
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Tue Mar 8 18:07:14 2022 +0800

    mfd: rk630: Add rk630 ref clk
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: Ie3ad8834ab5d0f25eeb8bdf52445f726192c0161

commit 25f1fa27d7a96b574064d6198008ec6c052d3a1f
Author: Yanchao Hu <yanchao.hu@rock-chips.com>
Date:   Tue Mar 8 15:17:38 2022 +0800

    arm64: dts: rockchip: add RK630 evaluation board devicetree
    
    Signed-off-by: Yanchao Hu <yanchao.hu@rock-chips.com>
    Change-Id: I9c8512b42c66fc34fa7de036ad6fe9608eaac729

commit 3a8585d0271e035b274c2bc198d5d9b9bb10d0c2
Author: Tao Huang <huangtao@rock-chips.com>
Date:   Wed Mar 9 15:20:01 2022 +0800

    scripts/gcc-wrapper.py: ignore vfs.c:1260
    
    Signed-off-by: Tao Huang <huangtao@rock-chips.com>
    Change-Id: I15cddb01a5683c758a6849954b39efd0e9eb76b9

commit 3c7840d0016e9506ec5f8f6f5cb54b777ed87285
Merge: d7767e63b49f b33f661bba23
Author: Tao Huang <huangtao@rock-chips.com>
Date:   Tue Mar 8 16:51:11 2022 +0800

    Merge tag 'ASB-2022-03-05_4.19-stable' of https://android.googlesource.com/kernel/common
    
    https://source.android.com/security/bulletin/2022-03-01
    CVE-2020-29368
    CVE-2021-39685
    CVE-2021-39686
    CVE-2021-39698
    CVE-2021-3655
    
    * tag 'ASB-2022-03-05_4.19-stable': (763 commits)
      Linux 4.19.232
      tty: n_gsm: fix encoding of control signal octet bit DV
      xhci: Prevent futile URB re-submissions due to incorrect return value.
      xhci: re-initialize the HC during resume if HCE was set
      usb: dwc3: gadget: Let the interrupt handler disable bottom halves.
      usb: dwc3: pci: Fix Bay Trail phy GPIO mappings
      USB: serial: option: add Telit LE910R1 compositions
      USB: serial: option: add support for DW5829e
      tracefs: Set the group ownership in apply_options() not parse_options()
      USB: gadget: validate endpoint index for xilinx udc
      usb: gadget: rndis: add spinlock for rndis response list
      Revert "USB: serial: ch341: add new Product ID for CH341A"
      ata: pata_hpt37x: disable primary channel on HPT371
      iio: adc: men_z188_adc: Fix a resource leak in an error handling path
      tracing: Have traceon and traceoff trigger honor the instance
      fget: clarify and improve __fget_files() implementation
      memblock: use kfree() to release kmalloced memblock regions
      Revert "drm/nouveau/pmu/gm200-: avoid touching PMU outside of DEVINIT/PREOS/ACR"
      gpio: tegra186: Fix chip_data type confusion
      tty: n_gsm: fix proper link termination after failed open
      ...
    
    Change-Id: I11cf0e2c1fd1318f0985f4783cce8dd4b7c8ae1d

commit d7767e63b49f28cac923f14e9f9dfe235d1396fa
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Tue Mar 1 18:12:38 2022 +0800

    drm/rockchip: ebc_dev: release version v3.03
    
    overlay start only when overlay is enabled
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: Ic498d4df85f8f490a42a432ab40b780f54257d85

commit 1646103d4f8c3210be442964f4e6577eeb2b5671
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Mon Mar 7 11:35:46 2022 +0800

    mfd: rk630: add efuse regmap
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: Ia1c654c47c7f3b98aba4fef1defb13edc05f6d88

commit 8bf9e48dfde18fd05cbd68de6356523e312a345b
Author: Algea Cao <algea.cao@rock-chips.com>
Date:   Mon Mar 7 18:35:16 2022 +0800

    nvmem: rk628-efuse: Support rk630 efuse
    
    Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
    Change-Id: I49e3b890d9fa98f569c36050c8ce830e85924923

commit 2f84e142442086d95674ebdb06bd86df8dee48d5
Author: Weixin Zhou <zwx@rock-chips.com>
Date:   Thu Mar 5 14:56:47 2020 +0800

    nvmem: rk628-efuse: add rk628 efuse driver
    
    Change-Id: I1b379fb75ba65f5628653ce114d1d440e9a95ec9
    Signed-off-by: Weixin Zhou <zwx@rock-chips.com>

commit 02bfca068937fa03973fcdb59a2f153cbdf5221b
Author: Elaine Zhang <zhangqing@rock-chips.com>
Date:   Tue Mar 8 11:46:08 2022 +0800

    clk: rockchip: px30: mark clk_rtc32k_pmu as critical
    
    Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
    Change-Id: I6f85ebd3bea1918b6938276295780f41a4ac197e

commit 09145f10d94216fbe7dc77910fa11caf8266b728
Author: Sandy Huang <hjc@rock-chips.com>
Date:   Mon Mar 7 17:21:55 2022 +0800

    drm/rockchip: vop: init win axi read id for px30
    
    Signed-off-by: Sandy Huang <hjc@rock-chips.com>
    Change-Id: Ic2752ad9472b2b5658a24c18525947da621f367c

commit 93df7b6fa925eadfd85393920d18b2f3c3e08973
Author: Liang Chen <cl@rock-chips.com>
Date:   Tue Mar 1 17:25:15 2022 +0800

    clk: scmi: initialize driver earlier when CONFIG_ARCH_ROCKCHIP=y
    
    Make sure scmi_clk_cpu is ready when initialize cpufreq driver.
    
    Change-Id: I8c0d0f59480127b4c98d9bdeb8be6080a1fc3dfd
    Signed-off-by: Liang Chen <cl@rock-chips.com>

commit 70fd22cb4bb1632cf8f3e5a8ebb634b0649e44e1
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Fri Mar 4 11:05:27 2022 +0800

    crypto: rockchip: fix dma_map_sg/dma_unmap_sg not paired when using dma_fd
    
    dma_fd buffer has been mapped by cryptodev and does not need to
     be mapped again.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ic28bebe3b169dfc4cb1fde4457122277f32294bf

commit 51e2a8f069295a872cf44eb2536f3e33eecdf0ca
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Fri Feb 25 14:20:21 2022 +0800

    crypto: rockchip: cryptodev_linux: added non-multithreaded protection
    
    CRYPTO V1/V2 do not support multi-threading, so it is necessary
     to add a hold mechanism in Cryptodev to prevent abnormal consequences
     caused by multi-threading calls.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ifd5ff6b102c81c8ac44c16f9689d5219c7fa5a56

commit dd7f6478651738d1340034878bc46da6cf6e4ae6
Author: Yu Qiaowei <cerf.yu@rock-chips.com>
Date:   Thu Mar 3 20:05:23 2022 +0800

    video: rockchip: rga3: Remove iommu_api that does not support GKI
    
    Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
    Change-Id: Ie90b87aa84758644a4696e59a63c48d2fbb8e7b2

commit 4c3a12c9c4edfcd636cd0c60d0ba187bb683d96b
Author: Yu Qiaowei <cerf.yu@rock-chips.com>
Date:   Thu Mar 3 11:33:08 2022 +0800

    video: rockchip: rga3: Fix hardware support format
    
    1. RGA3 support ARGB/ABGR8888 input.
    2. RGA3 support YUV420 packed output.
    
    Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
    Change-Id: I7680ed7b0218998f67e0d1ed40cc2ad3690b8572

commit 16e812f5a20b0be4a0eb1d96392dfebf89ac96b7
Author: Yu Qiaowei <cerf.yu@rock-chips.com>
Date:   Thu Mar 3 11:27:27 2022 +0800

    video: rockchip: rga3: update rga_debugger
    
    1. Add 'debug' mode in debug node.
    2. Fix compilation error when procfs is enabled.
    
    Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
    Change-Id: I88bdcad127a726a6b2618d54c2c3958a663bc6d7

commit 1258f08695f93c36d3748f48f120d9326db16b88
Author: Zou Wei <zou_wei@huawei.com>
Date:   Wed May 12 14:45:55 2021 +0800

    UPSTREAM: drm/bridge: lt9611: Add missing MODULE_DEVICE_TABLE
    
    This patch adds missing MODULE_DEVICE_TABLE definition which generates
    correct modalias for automatic loading of this driver when it is built
    as an external module.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zou Wei <zou_wei@huawei.com>
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1620801955-19188-1-git-send-email-zou_wei@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Guochun Huang <hero.huang@rock-chips.com>
    Change-Id: I6974f900b393538e313a313e2edb66e4281cfd3a
    (cherry picked from commit 8d0b1fe81e18eb66a2d4406386760795fe0d77d9)

commit 458c70122a3083b22620cebe8e7fe24f0f3b95b5
Author: Vinod Koul <vkoul@kernel.org>
Date:   Fri Aug 28 13:12:50 2020 +0530

    UPSTREAM: drm/bridge: Fix the dsi remote end-points
    
    DSI end-points are supposed to be at node 0 and node 1 as per binding.
    So fix this and use node 0 and node 1 for dsi.
    
    Reported-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Fixes: 23278bf54afe ("drm/bridge: Introduce LT9611 DSI to HDMI bridge")
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200828074251.3788165-1-vkoul@kernel.org
    Signed-off-by: Guochun Huang <hero.huang@rock-chips.com>
    Change-Id: I5e97fbc5e24b6d23cdb59156b8f5a3d953fe1445
    (cherry picked from commit 85a51673660d43a3f4543f4623f747dc9a51d35b)

commit 815e3255b6185604679cdfffeafa658cdc3328e6
Author: Vinod Koul <vkoul@kernel.org>
Date:   Thu Jul 23 22:04:42 2020 +0530

    UPSTREAM: drm/bridge: Introduce LT9611 DSI to HDMI bridge
    
    Lontium Lt9611 is a DSI to HDMI bridge which supports two DSI ports and
    I2S port as an input and HDMI port as output
    
    Change-Id: Iae830d6208c111f1a546c390a6ee62fd609fd701
    Co-developed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Co-developed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Tested-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org> # fix lt9611_bridge_mode_valid
    Link: https://patchwork.freedesktop.org/patch/msgid/20200723163442.1280414-4-vkoul@kernel.org
    Signed-off-by: Guochun Huang <hero.huang@rock-chips.com>
    (cherry picked from commit 23278bf54afe180967069bdc8c0f1c7a365fc63e)

commit b33f661bba238c2eb75ff8f4ffd8a33969d6706c
Merge: 930ed74bde67 d5b90e6e0322
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Wed Mar 2 15:29:10 2022 +0100

    Merge 4.19.232 into android-4.19-stable
    
    Changes in 4.19.232
            cgroup/cpuset: Fix a race between cpuset_attach() and cpu hotplug
            vhost/vsock: don't check owner in vhost_vsock_stop() while releasing
            parisc/unaligned: Fix fldd and fstd unaligned handlers on 32-bit kernel
            parisc/unaligned: Fix ldw() and stw() unalignment handlers
            sr9700: sanity check for packet length
            USB: zaurus: support another broken Zaurus
            ping: remove pr_err from ping_lookup
            net: __pskb_pull_tail() & pskb_carve_frag_list() drop_monitor friends
            tipc: Fix end of loop tests for list_for_each_entry()
            gso: do not skip outer ip header in case of ipip and net_failover
            openvswitch: Fix setting ipv6 fields causing hw csum failure
            drm/edid: Always set RGB444
            net/mlx5e: Fix wrong return value on ioctl EEPROM query failure
            configfs: fix a race in configfs_{,un}register_subsystem()
            RDMA/ib_srp: Fix a deadlock
            tty: n_gsm: fix proper link termination after failed open
            gpio: tegra186: Fix chip_data type confusion
            Revert "drm/nouveau/pmu/gm200-: avoid touching PMU outside of DEVINIT/PREOS/ACR"
            memblock: use kfree() to release kmalloced memblock regions
            fget: clarify and improve __fget_files() implementation
            tracing: Have traceon and traceoff trigger honor the instance
            iio: adc: men_z188_adc: Fix a resource leak in an error handling path
            ata: pata_hpt37x: disable primary channel on HPT371
            Revert "USB: serial: ch341: add new Product ID for CH341A"
            usb: gadget: rndis: add spinlock for rndis response list
            USB: gadget: validate endpoint index for xilinx udc
            tracefs: Set the group ownership in apply_options() not parse_options()
            USB: serial: option: add support for DW5829e
            USB: serial: option: add Telit LE910R1 compositions
            usb: dwc3: pci: Fix Bay Trail phy GPIO mappings
            usb: dwc3: gadget: Let the interrupt handler disable bottom halves.
            xhci: re-initialize the HC during resume if HCE was set
            xhci: Prevent futile URB re-submissions due to incorrect return value.
            tty: n_gsm: fix encoding of control signal octet bit DV
            Linux 4.19.232
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I7604e43e0d2cc019835f0508e0a0e5116d72bc85

commit d5b90e6e03226032e30492682255088174bcc321
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Mar 2 11:38:19 2022 +0100

    Linux 4.19.232
    
    Link: https://lore.kernel.org/r/20220228172207.090703467@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jeffrin Jose T <jeffrin@rajagiritech.edu.in>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Slade Watkins <slade@sladewatkins.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28ca082153794cf5c98e7bb93d7f30f8ba46bec4
Author: daniel.starke@siemens.com <daniel.starke@siemens.com>
Date:   Thu Feb 17 23:31:17 2022 -0800

    tty: n_gsm: fix encoding of control signal octet bit DV
    
    commit 737b0ef3be6b319d6c1fd64193d1603311969326 upstream.
    
    n_gsm is based on the 3GPP 07.010 and its newer version is the 3GPP 27.010.
    See https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=1516
    The changes from 07.010 to 27.010 are non-functional. Therefore, I refer to
    the newer 27.010 here. Chapter 5.4.6.3.7 describes the encoding of the
    control signal octet used by the MSC (modem status command). The same
    encoding is also used in convergence layer type 2 as described in chapter
    5.5.2. Table 7 and 24 both require the DV (data valid) bit to be set 1 for
    outgoing control signal octets sent by the DTE (data terminal equipment),
    i.e. for the initiator side.
    Currently, the DV bit is only set if CD (carrier detect) is on, regardless
    of the side.
    
    This patch fixes this behavior by setting the DV bit on the initiator side
    unconditionally.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220218073123.2121-1-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cf9a3da2b555f77a9a8956a754ac9e3c53c3384
Author: Hongyu Xie <xiehongyu1@kylinos.cn>
Date:   Tue Feb 15 14:33:20 2022 +0200

    xhci: Prevent futile URB re-submissions due to incorrect return value.
    
    commit 243a1dd7ba48c120986dd9e66fee74bcb7751034 upstream.
    
    The -ENODEV return value from xhci_check_args() is incorrectly changed
    to -EINVAL in a couple places before propagated further.
    
    xhci_check_args() returns 4 types of value, -ENODEV, -EINVAL, 1 and 0.
    xhci_urb_enqueue and xhci_check_streams_endpoint return -EINVAL if
    the return value of xhci_check_args <= 0.
    This causes problems for example r8152_submit_rx, calling usb_submit_urb
    in drivers/net/usb/r8152.c.
    r8152_submit_rx will never get -ENODEV after submiting an urb when xHC
    is halted because xhci_urb_enqueue returns -EINVAL in the very beginning.
    
    [commit message and header edit -Mathias]
    
    Fixes: 203a86613fb3 ("xhci: Avoid NULL pointer deref when host dies.")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hongyu Xie <xiehongyu1@kylinos.cn>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220215123320.1253947-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 792e96856d84a9d6dbe0579764e4bcb47cb8b776
Author: Puma Hsu <pumahsu@google.com>
Date:   Tue Feb 15 14:33:19 2022 +0200

    xhci: re-initialize the HC during resume if HCE was set
    
    commit 8b328f8002bcf29ef517ee4bf234e09aabec4d2e upstream.
    
    When HCE(Host Controller Error) is set, it means an internal
    error condition has been detected. Software needs to re-initialize
    the HC, so add this check in xhci resume.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Puma Hsu <pumahsu@google.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220215123320.1253947-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ad9538407ec7b0c3b6d5c8150ad655c6e710dba
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri Feb 18 18:32:45 2022 +0100

    usb: dwc3: gadget: Let the interrupt handler disable bottom halves.
    
    commit 84918a89d6efaff075de570b55642b6f4ceeac6d upstream.
    
    The interrupt service routine registered for the gadget is a primary
    handler which mask the interrupt source and a threaded handler which
    handles the source of the interrupt. Since the threaded handler is
    voluntary threaded, the IRQ-core does not disable bottom halves before
    invoke the handler like it does for the forced-threaded handler.
    
    Due to changes in networking it became visible that a network gadget's
    completions handler may schedule a softirq which remains unprocessed.
    The gadget's completion handler is usually invoked either in hard-IRQ or
    soft-IRQ context. In this context it is enough to just raise the softirq
    because the softirq itself will be handled once that context is left.
    In the case of the voluntary threaded handler, there is nothing that
    will process pending softirqs. Which means it remain queued until
    another random interrupt (on this CPU) fires and handles it on its exit
    path or another thread locks and unlocks a lock with the bh suffix.
    Worst case is that the CPU goes idle and the NOHZ complains about
    unhandled softirqs.
    
    Disable bottom halves before acquiring the lock (and disabling
    interrupts) and enable them after dropping the lock. This ensures that
    any pending softirqs will handled right away.
    
    Link: https://lkml.kernel.org/r/c2a64979-73d1-2c22-e048-c275c9f81558@samsung.com
    Fixes: e5f68b4a3e7b0 ("Revert "usb: dwc3: gadget: remove unnecessary _irqsave()"")
    Cc: stable <stable@kernel.org>
    Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Link: https://lore.kernel.org/r/Yg/YPejVQH3KkRVd@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a033ee7ff72f3585cc248c1e6f8cf6219268060f
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Feb 13 14:05:17 2022 +0100

    usb: dwc3: pci: Fix Bay Trail phy GPIO mappings
    
    commit 62e3f0afe246720f7646eb1b034a6897dac34405 upstream.
    
    When the Bay Trail phy GPIO mappings where added cs and reset were swapped,
    this did not cause any issues sofar, because sofar they were always driven
    high/low at the same time.
    
    Note the new mapping has been verified both in /sys/kernel/debug/gpio
    output on Android factory images on multiple devices, as well as in
    the schematics for some devices.
    
    Fixes: 5741022cbdf3 ("usb: dwc3: pci: Add GPIO lookup table on platforms without ACPI GPIO resources")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20220213130524.18748-3-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dec8dbd86f0e3ddc1c554b8bcc03df83ee13d051
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Fri Feb 18 14:45:52 2022 +0100

    USB: serial: option: add Telit LE910R1 compositions
    
    commit cfc4442c642d568014474b6718ccf65dc7ca6099 upstream.
    
    Add support for the following Telit LE910R1 compositions:
    
    0x701a: rndis, tty, tty, tty
    0x701b: ecm, tty, tty, tty
    0x9201: tty
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Link: https://lore.kernel.org/r/20220218134552.4051-1-dnlplm@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2981cd9815a17932783789355e82f7c3e098aae4
Author: Slark Xiao <slark_xiao@163.com>
Date:   Mon Feb 14 10:14:01 2022 +0800

    USB: serial: option: add support for DW5829e
    
    commit 6ecb3f0b18b320320460a42e40d6fb603f6ded96 upstream.
    
    Dell DW5829e same as DW5821e except CAT level.
    DW5821e supports CAT16 but DW5829e supports CAT9.
    There are 2 types product of DW5829e: normal and eSIM.
    So we will add 2 PID for DW5829e.
    And for each PID, it support MBIM or RMNET.
    Let's see test evidence as below:
    
    DW5829e MBIM mode:
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  4 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  2
    P:  Vendor=413c ProdID=81e6 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 7 Cfg#= 2 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#=0x6 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    DW5829e RMNET mode:
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  5 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=413c ProdID=81e6 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    DW5829e-eSIM MBIM mode:
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  6 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  2
    P:  Vendor=413c ProdID=81e4 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e-eSIM Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 7 Cfg#= 2 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#=0x6 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    DW5829e-eSIM RMNET mode:
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  7 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=413c ProdID=81e4 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e-eSIM Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    BTW, the interface 0x6 of MBIM mode is GNSS port, which not same as NMEA
    port. So it's banned from serial option driver.
    The remaining interfaces 0x2-0x5 are: MODEM, MODEM, NMEA, DIAG.
    
    Signed-off-by: Slark Xiao <slark_xiao@163.com>
    Link: https://lore.kernel.org/r/20220214021401.6264-1-slark_xiao@163.com
    [ johan: drop unnecessary reservation of interface 1 ]
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be16d365f4ae19dc6e8ade01b7b9812ae142458e
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Fri Feb 25 15:34:26 2022 -0500

    tracefs: Set the group ownership in apply_options() not parse_options()
    
    commit 851e99ebeec3f4a672bb5010cf1ece095acee447 upstream.
    
    Al Viro brought it to my attention that the dentries may not be filled
    when the parse_options() is called, causing the call to set_gid() to
    possibly crash. It should only be called if parse_options() succeeds
    totally anyway.
    
    He suggested the logical place to do the update is in apply_options().
    
    Link: https://lore.kernel.org/all/20220225165219.737025658@goodmis.org/
    Link: https://lkml.kernel.org/r/20220225153426.1c4cab6b@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Acked-by: Al Viro <viro@zeniv.linux.org.uk>
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Fixes: 48b27b6b5191 ("tracefs: Set all files to the same group ownership as the mount option")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebc465e894890a534ce05e035eae4829a2a47ba1
Author: Szymon Heidrich <szymon.heidrich@gmail.com>
Date:   Mon Feb 21 13:24:56 2022 +0100

    USB: gadget: validate endpoint index for xilinx udc
    
    commit 7f14c7227f342d9932f9b918893c8814f86d2a0d upstream.
    
    Assure that host may not manipulate the index to point
    past endpoint array.
    
    Signed-off-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f688aadede6b862a0a898792b1a35421c93636f
Author: Daehwan Jung <dh10.jung@samsung.com>
Date:   Tue Feb 22 14:29:28 2022 +0900

    usb: gadget: rndis: add spinlock for rndis response list
    
    commit aaaba1c86d04dac8e49bf508b492f81506257da3 upstream.
    
    There's no lock for rndis response list. It could cause list corruption
    if there're two different list_add at the same time like below.
    It's better to add in rndis_add_response / rndis_free_response
    / rndis_get_next_response to prevent any race condition on response list.
    
    [  361.894299] [1:   irq/191-dwc3:16979] list_add corruption.
    next->prev should be prev (ffffff80651764d0),
    but was ffffff883dc36f80. (next=ffffff80651764d0).
    
    [  361.904380] [1:   irq/191-dwc3:16979] Call trace:
    [  361.904391] [1:   irq/191-dwc3:16979]  __list_add_valid+0x74/0x90
    [  361.904401] [1:   irq/191-dwc3:16979]  rndis_msg_parser+0x168/0x8c0
    [  361.904409] [1:   irq/191-dwc3:16979]  rndis_command_complete+0x24/0x84
    [  361.904417] [1:   irq/191-dwc3:16979]  usb_gadget_giveback_request+0x20/0xe4
    [  361.904426] [1:   irq/191-dwc3:16979]  dwc3_gadget_giveback+0x44/0x60
    [  361.904434] [1:   irq/191-dwc3:16979]  dwc3_ep0_complete_data+0x1e8/0x3a0
    [  361.904442] [1:   irq/191-dwc3:16979]  dwc3_ep0_interrupt+0x29c/0x3dc
    [  361.904450] [1:   irq/191-dwc3:16979]  dwc3_process_event_entry+0x78/0x6cc
    [  361.904457] [1:   irq/191-dwc3:16979]  dwc3_process_event_buf+0xa0/0x1ec
    [  361.904465] [1:   irq/191-dwc3:16979]  dwc3_thread_interrupt+0x34/0x5c
    
    Fixes: f6281af9d62e ("usb: gadget: rndis: use list_for_each_entry_safe")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Daehwan Jung <dh10.jung@samsung.com>
    Link: https://lore.kernel.org/r/1645507768-77687-1-git-send-email-dh10.jung@samsung.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f717e19477b01afa62410c3fc49580c3853f110d
Author: Dmytro Bagrii <dimich.dmb@gmail.com>
Date:   Thu Feb 10 18:41:37 2022 +0200

    Revert "USB: serial: ch341: add new Product ID for CH341A"
    
    commit 198a7ebd5fa17b4d0be8cb70240ee1be885175c0 upstream.
    
    This reverts commit 46ee4abb10a07bd8f8ce910ee6b4ae6a947d7f63.
    
    CH341 has Product ID 0x5512 in EPP/MEM mode which is used for
    I2C/SPI/GPIO interfaces. In asynchronous serial interface mode
    CH341 has PID 0x5523 which is already in the table.
    
    Mode is selected by corresponding jumper setting.
    
    Signed-off-by: Dmytro Bagrii <dimich.dmb@gmail.com>
    Link: https://lore.kernel.org/r/20220210164137.4376-1-dimich.dmb@gmail.com
    Link: https://lore.kernel.org/r/YJ0OCS/sh+1ifD/q@hovoldconsulting.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92cc643567015a21dd91aa7c93968736df0bb80d
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sat Feb 19 20:44:43 2022 +0300

    ata: pata_hpt37x: disable primary channel on HPT371
    
    commit 8d093e02e898b24c58788b0289e3202317a96d2a upstream.
    
    The HPT371 chip physically has only one channel, the secondary one,
    however the primary channel registers do exist! Thus we have to
    manually disable the non-existing channel if the BIOS hasn't done this
    already. Similarly to the pata_hpt3x2n driver, always disable the
    primary channel.
    
    Fixes: 669a5db411d8 ("[libata] Add a bunch of PATA drivers.")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53d43a9c8dd224e66559fe86af1e473802c7130e
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jan 29 09:32:47 2022 +0100

    iio: adc: men_z188_adc: Fix a resource leak in an error handling path
    
    commit e0a2e37f303828d030a83f33ffe14b36cb88d563 upstream.
    
    If iio_device_register() fails, a previous ioremap() is left unbalanced.
    
    Update the error handling path and add the missing iounmap() call, as
    already done in the remove function.
    
    Fixes: 74aeac4da66f ("iio: adc: Add MEN 16z188 ADC driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/320fc777863880247c2aff4a9d1a54ba69abf080.1643445149.git.christophe.jaillet@wanadoo.fr
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6a2e27cc946567728374b881196ee4eace9683f
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Wed Feb 23 22:38:37 2022 -0500

    tracing: Have traceon and traceoff trigger honor the instance
    
    commit 302e9edd54985f584cfc180098f3554774126969 upstream.
    
    If a trigger is set on an event to disable or enable tracing within an
    instance, then tracing should be disabled or enabled in the instance and
    not at the top level, which is confusing to users.
    
    Link: https://lkml.kernel.org/r/20220223223837.14f94ec3@rorschach.local.home
    
    Cc: stable@vger.kernel.org
    Fixes: ae63b31e4d0e2 ("tracing: Separate out trace events from global variables")
    Tested-by: Daniel Bristot de Oliveira <bristot@kernel.org>
    Reviewed-by: Tom Zanussi <zanussi@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 400c2f361c25bc092d0636cfa32d0549a181e653
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Feb 26 14:32:33 2022 +0800

    fget: clarify and improve __fget_files() implementation
    
    commit e386dfc56f837da66d00a078e5314bc8382fab83 upstream.
    
    Commit 054aa8d439b9 ("fget: check that the fd still exists after getting
    a ref to it") fixed a race with getting a reference to a file just as it
    was being closed.  It was a fairly minimal patch, and I didn't think
    re-checking the file pointer lookup would be a measurable overhead,
    since it was all right there and cached.
    
    But I was wrong, as pointed out by the kernel test robot.
    
    The 'poll2' case of the will-it-scale.per_thread_ops benchmark regressed
    quite noticeably.  Admittedly it seems to be a very artificial test:
    doing "poll()" system calls on regular files in a very tight loop in
    multiple threads.
    
    That means that basically all the time is spent just looking up file
    descriptors without ever doing anything useful with them (not that doing
    'poll()' on a regular file is useful to begin with).  And as a result it
    shows the extra "re-check fd" cost as a sore thumb.
    
    Happily, the regression is fixable by just writing the code to loook up
    the fd to be better and clearer.  There's still a cost to verify the
    file pointer, but now it's basically in the noise even for that
    benchmark that does nothing else - and the code is more understandable
    and has better comments too.
    
    [ Side note: this patch is also a classic case of one that looks very
      messy with the default greedy Myers diff - it's much more legible with
      either the patience of histogram diff algorithm ]
    
    Link: https://lore.kernel.org/lkml/20211210053743.GA36420@xsang-OptiPlex-9020/
    Link: https://lore.kernel.org/lkml/20211213083154.GA20853@linux.intel.com/
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Tested-by: Carel Si <beibei.si@intel.com>
    Cc: Jann Horn <jannh@google.com>
    Cc: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6fcced73d15ab57cd97813999edf6f19d3032f8
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Thu Feb 17 22:53:27 2022 +0800

    memblock: use kfree() to release kmalloced memblock regions
    
    commit c94afc46cae7ad41b2ad6a99368147879f4b0e56 upstream.
    
    memblock.{reserved,memory}.regions may be allocated using kmalloc() in
    memblock_double_array(). Use kfree() to release these kmalloced regions
    indicated by memblock_{reserved,memory}_in_slab.
    
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Fixes: 3010f876500f ("mm: discard memblock data later")
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9429dfe53ce462d5f308e935625255d95a9aea55
Author: Karol Herbst <kherbst@redhat.com>
Date:   Mon Feb 28 10:12:59 2022 +0100

    Revert "drm/nouveau/pmu/gm200-: avoid touching PMU outside of DEVINIT/PREOS/ACR"
    
    This reverts commit c9ec3d85c0eef7c71cdc68db758e0f0e378132c0.
    
    This commit causes a regression if 4cdd2450bf739bada353e82d27b00db9af8c3001
    is not applied as well. This was fixed for 5.16, 5.15 and 5.10.
    
    On older stable branches backporting this commit is complicated as relevant
    code changed quite a bit. Furthermore most of the affected hardware barely
    works on those and users would want to use the newer kernels anyway.
    
    Cc: stable@vger.kernel.org # 5.4 4.19 and 4.14
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Lyude Paul <lyude@redhat.com>
    Link: https://gitlab.freedesktop.org/drm/nouveau/-/issues/149
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6090c7359f2bc4db107b6dc28e4c74923a907b5
Author: Marc Zyngier <maz@kernel.org>
Date:   Fri Feb 11 09:39:04 2022 +0000

    gpio: tegra186: Fix chip_data type confusion
    
    commit d1e972ace42390de739cde87d96043dcbe502286 upstream.
    
    The tegra186 GPIO driver makes the assumption that the pointer
    returned by irq_data_get_irq_chip_data() is a pointer to a
    tegra_gpio structure. Unfortunately, it is actually a pointer
    to the inner gpio_chip structure, as mandated by the gpiolib
    infrastructure. Nice try.
    
    The saving grace is that the gpio_chip is the first member of
    tegra_gpio, so the bug has gone undetected since... forever.
    
    Fix it by performing a container_of() on the pointer. This results
    in no additional code, and makes it possible to understand how
    the whole thing works.
    
    Fixes: 5b2b135a87fc ("gpio: Add Tegra186 support")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: Thierry Reding <treding@nvidia.com>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Link: https://lore.kernel.org/r/20220211093904.1112679-1-maz@kernel.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 337e49675ce55c23a50b92aae889ec5d910d6dc7
Author: daniel.starke@siemens.com <daniel.starke@siemens.com>
Date:   Thu Feb 17 23:31:19 2022 -0800

    tty: n_gsm: fix proper link termination after failed open
    
    commit e3b7468f082d106459e86e8dc6fb9bdd65553433 upstream.
    
    Trying to open a DLCI by sending a SABM frame may fail with a timeout.
    The link is closed on the initiator side without informing the responder
    about this event. The responder assumes the link is open after sending a
    UA frame to answer the SABM frame. The link gets stuck in a half open
    state.
    
    This patch fixes this by initiating the proper link termination procedure
    after link setup timeout instead of silently closing it down.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220218073123.2121-3-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7997d19dfa7001ca41e971cd9efd091bb195b51
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Feb 15 13:05:11 2022 -0800

    RDMA/ib_srp: Fix a deadlock
    
    [ Upstream commit 081bdc9fe05bb23248f5effb6f811da3da4b8252 ]
    
    Remove the flush_workqueue(system_long_wq) call since flushing
    system_long_wq is deadlock-prone and since that call is redundant with a
    preceding cancel_work_sync()
    
    Link: https://lore.kernel.org/r/20220215210511.28303-3-bvanassche@acm.org
    Fixes: ef6c49d87c34 ("IB/srp: Eliminate state SRP_TARGET_DEAD")
    Reported-by: syzbot+831661966588c802aae9@syzkaller.appspotmail.com
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a37024f7757c25550accdebf49e497ad6ae239fe
Author: ChenXiaoSong <chenxiaosong2@huawei.com>
Date:   Tue Feb 15 15:10:30 2022 +0800

    configfs: fix a race in configfs_{,un}register_subsystem()
    
    [ Upstream commit 84ec758fb2daa236026506868c8796b0500c047d ]
    
    When configfs_register_subsystem() or configfs_unregister_subsystem()
    is executing link_group() or unlink_group(),
    it is possible that two processes add or delete list concurrently.
    Some unfortunate interleavings of them can cause kernel panic.
    
    One of cases is:
    A --> B --> C --> D
    A <-- B <-- C <-- D
    
         delete list_head *B        |      delete list_head *C
    --------------------------------|-----------------------------------
    configfs_unregister_subsystem   |   configfs_unregister_subsystem
      unlink_group                  |     unlink_group
        unlink_obj                  |       unlink_obj
          list_del_init             |         list_del_init
            __list_del_entry        |           __list_del_entry
              __list_del            |             __list_del
                // next == C        |
                next->prev = prev   |
                                    |               next->prev = prev
                prev->next = next   |
                                    |                 // prev == B
                                    |                 prev->next = next
    
    Fix this by adding mutex when calling link_group() or unlink_group(),
    but parent configfs_subsystem is NULL when config_item is root.
    So I create a mutex configfs_subsystem_mutex.
    
    Fixes: 7063fbf22611 ("[PATCH] configfs: User-driven configuration filesystem")
    Signed-off-by: ChenXiaoSong <chenxiaosong2@huawei.com>
    Signed-off-by: Laibin Qiu <qiulaibin@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0921d16eb7daadcba871889003fac494f6efc0f5
Author: Gal Pressman <gal@nvidia.com>
Date:   Wed Feb 2 16:07:21 2022 +0200

    net/mlx5e: Fix wrong return value on ioctl EEPROM query failure
    
    commit 0b89429722353d112f8b8b29ca397e95fa994d27 upstream.
    
    The ioctl EEPROM query wrongly returns success on read failures, fix
    that by returning the appropriate error code.
    
    Fixes: bb64143eee8c ("net/mlx5e: Add ethtool support for dump module EEPROM")
    Signed-off-by: Gal Pressman <gal@nvidia.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b3a023a13612ece64a3975cb202663a3ccc7022
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Thu Feb 3 12:54:16 2022 +0100

    drm/edid: Always set RGB444
    
    commit ecbd4912a693b862e25cba0a6990a8c95b00721e upstream.
    
    In order to fill the drm_display_info structure each time an EDID is
    read, the code currently will call drm_add_display_info with the parsed
    EDID.
    
    drm_add_display_info will then call drm_reset_display_info to reset all
    the fields to 0, and then set them to the proper value depending on the
    EDID.
    
    In the color_formats case, we will thus report that we don't support any
    color format, and then fill it back with RGB444 plus the additional
    formats described in the EDID Feature Support byte.
    
    However, since that byte only contains format-related bits since the 1.4
    specification, this doesn't happen if the EDID is following an earlier
    specification. In turn, it means that for one of these EDID, we end up
    with color_formats set to 0.
    
    The EDID 1.3 specification never really specifies what it means by RGB
    exactly, but since both HDMI and DVI will use RGB444, it's fairly safe
    to assume it's supposed to be RGB444.
    
    Let's move the addition of RGB444 to color_formats earlier in
    drm_add_display_info() so that it's always set for a digital display.
    
    Fixes: da05a5a71ad8 ("drm: parse color format support for digital displays")
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reported-by: Matthias Reichl <hias@horus.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220203115416.1137308-1-maxime@cerno.tech
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99e6d88878090929953f68cf3e15ee72a9a37941
Author: Paul Blakey <paulb@nvidia.com>
Date:   Wed Feb 23 18:34:16 2022 +0200

    openvswitch: Fix setting ipv6 fields causing hw csum failure
    
    commit d9b5ae5c1b241b91480aa30408be12fe91af834a upstream.
    
    Ipv6 ttl, label and tos fields are modified without first
    pulling/pushing the ipv6 header, which would have updated
    the hw csum (if available). This might cause csum validation
    when sending the packet to the stack, as can be seen in
    the trace below.
    
    Fix this by updating skb->csum if available.
    
    Trace resulted by ipv6 ttl dec and then sending packet
    to conntrack [actions: set(ipv6(hlimit=63)),ct(zone=99)]:
    [295241.900063] s_pf0vf2: hw csum failure
    [295241.923191] Call Trace:
    [295241.925728]  <IRQ>
    [295241.927836]  dump_stack+0x5c/0x80
    [295241.931240]  __skb_checksum_complete+0xac/0xc0
    [295241.935778]  nf_conntrack_tcp_packet+0x398/0xba0 [nf_conntrack]
    [295241.953030]  nf_conntrack_in+0x498/0x5e0 [nf_conntrack]
    [295241.958344]  __ovs_ct_lookup+0xac/0x860 [openvswitch]
    [295241.968532]  ovs_ct_execute+0x4a7/0x7c0 [openvswitch]
    [295241.979167]  do_execute_actions+0x54a/0xaa0 [openvswitch]
    [295242.001482]  ovs_execute_actions+0x48/0x100 [openvswitch]
    [295242.006966]  ovs_dp_process_packet+0x96/0x1d0 [openvswitch]
    [295242.012626]  ovs_vport_receive+0x6c/0xc0 [openvswitch]
    [295242.028763]  netdev_frame_hook+0xc0/0x180 [openvswitch]
    [295242.034074]  __netif_receive_skb_core+0x2ca/0xcb0
    [295242.047498]  netif_receive_skb_internal+0x3e/0xc0
    [295242.052291]  napi_gro_receive+0xba/0xe0
    [295242.056231]  mlx5e_handle_rx_cqe_mpwrq_rep+0x12b/0x250 [mlx5_core]
    [295242.062513]  mlx5e_poll_rx_cq+0xa0f/0xa30 [mlx5_core]
    [295242.067669]  mlx5e_napi_poll+0xe1/0x6b0 [mlx5_core]
    [295242.077958]  net_rx_action+0x149/0x3b0
    [295242.086762]  __do_softirq+0xd7/0x2d6
    [295242.090427]  irq_exit+0xf7/0x100
    [295242.093748]  do_IRQ+0x7f/0xd0
    [295242.096806]  common_interrupt+0xf/0xf
    [295242.100559]  </IRQ>
    [295242.102750] RIP: 0033:0x7f9022e88cbd
    [295242.125246] RSP: 002b:00007f9022282b20 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffda
    [295242.132900] RAX: 0000000000000005 RBX: 0000000000000010 RCX: 0000000000000000
    [295242.140120] RDX: 00007f9022282ba8 RSI: 00007f9022282a30 RDI: 00007f9014005c30
    [295242.147337] RBP: 00007f9014014d60 R08: 0000000000000020 R09: 00007f90254a8340
    [295242.154557] R10: 00007f9022282a28 R11: 0000000000000246 R12: 0000000000000000
    [295242.161775] R13: 00007f902308c000 R14: 000000000000002b R15: 00007f9022b71f40
    
    Fixes: 3fdbd1ce11e5 ("openvswitch: add ipv6 'set' action")
    Signed-off-by: Paul Blakey <paulb@nvidia.com>
    Link: https://lore.kernel.org/r/20220223163416.24096-1-paulb@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9ffbe63f6f32f526a461756309b61c395168d73
Author: Tao Liu <thomas.liu@ucloud.cn>
Date:   Fri Feb 18 22:35:24 2022 +0800

    gso: do not skip outer ip header in case of ipip and net_failover
    
    commit cc20cced0598d9a5ff91ae4ab147b3b5e99ee819 upstream.
    
    We encounter a tcp drop issue in our cloud environment. Packet GROed in
    host forwards to a VM virtio_net nic with net_failover enabled. VM acts
    as a IPVS LB with ipip encapsulation. The full path like:
    host gro -> vm virtio_net rx -> net_failover rx -> ipvs fullnat
     -> ipip encap -> net_failover tx -> virtio_net tx
    
    When net_failover transmits a ipip pkt (gso_type = 0x0103, which means
    SKB_GSO_TCPV4, SKB_GSO_DODGY and SKB_GSO_IPXIP4), there is no gso
    did because it supports TSO and GSO_IPXIP4. But network_header points to
    inner ip header.
    
    Call Trace:
     tcp4_gso_segment        ------> return NULL
     inet_gso_segment        ------> inner iph, network_header points to
     ipip_gso_segment
     inet_gso_segment        ------> outer iph
     skb_mac_gso_segment
    
    Afterwards virtio_net transmits the pkt, only inner ip header is modified.
    And the outer one just keeps unchanged. The pkt will be dropped in remote
    host.
    
    Call Trace:
     inet_gso_segment        ------> inner iph, outer iph is skipped
     skb_mac_gso_segment
     __skb_gso_segment
     validate_xmit_skb
     validate_xmit_skb_list
     sch_direct_xmit
     __qdisc_run
     __dev_queue_xmit        ------> virtio_net
     dev_hard_start_xmit
     __dev_queue_xmit        ------> net_failover
     ip_finish_output2
     ip_output
     iptunnel_xmit
     ip_tunnel_xmit
     ipip_tunnel_xmit        ------> ipip
     dev_hard_start_xmit
     __dev_queue_xmit
     ip_finish_output2
     ip_output
     ip_forward
     ip_rcv
     __netif_receive_skb_one_core
     netif_receive_skb_internal
     napi_gro_receive
     receive_buf
     virtnet_poll
     net_rx_action
    
    The root cause of this issue is specific with the rare combination of
    SKB_GSO_DODGY and a tunnel device that adds an SKB_GSO_ tunnel option.
    SKB_GSO_DODGY is set from external virtio_net. We need to reset network
    header when callbacks.gso_segment() returns NULL.
    
    This patch also includes ipv6_gso_segment(), considering SIT, etc.
    
    Fixes: cb32f511a70b ("ipip: add GSO/TSO support")
    Signed-off-by: Tao Liu <thomas.liu@ucloud.cn>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33f724448e055b615301c039df5638cce458d6ac
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Feb 22 16:43:12 2022 +0300

    tipc: Fix end of loop tests for list_for_each_entry()
    
    commit a1f8fec4dac8bc7b172b2bdbd881e015261a6322 upstream.
    
    These tests are supposed to check if the loop exited via a break or not.
    However the tests are wrong because if we did not exit via a break then
    "p" is not a valid pointer.  In that case, it's the equivalent of
    "if (*(u32 *)sr == *last_key) {".  That's going to work most of the time,
    but there is a potential for those to be equal.
    
    Fixes: 1593123a6a49 ("tipc: add name table dump to new netlink api")
    Fixes: 1a1a143daf84 ("tipc: add publication dump to new netlink api")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f4ae0f158dafa74133108bfa07b8053eb2a7898
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Feb 20 07:40:52 2022 -0800

    net: __pskb_pull_tail() & pskb_carve_frag_list() drop_monitor friends
    
    commit ef527f968ae05c6717c39f49c8709a7e2c19183a upstream.
    
    Whenever one of these functions pull all data from an skb in a frag_list,
    use consume_skb() instead of kfree_skb() to avoid polluting drop
    monitoring.
    
    Fixes: 6fa01ccd8830 ("skbuff: Add pskb_extract() helper function")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20220220154052.1308469-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e712f598b90eec64c07270848100d7f5325b9dd6
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Feb 23 22:41:08 2022 -0500

    ping: remove pr_err from ping_lookup
    
    commit cd33bdcbead882c2e58fdb4a54a7bd75b610a452 upstream.
    
    As Jakub noticed, prints should be avoided on the datapath.
    Also, as packets would never come to the else branch in
    ping_lookup(), remove pr_err() from ping_lookup().
    
    Fixes: 35a79e64de29 ("ping: fix the dif and sdif check in ping_lookup")
    Reported-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Link: https://lore.kernel.org/r/1ef3f2fcd31bd681a193b1fcf235eee1603819bd.1645674068.git.lucien.xin@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f87f57bfb461dd5a9f5490bfd27ed8029faf4a09
Author: Oliver Neukum <oneukum@suse.com>
Date:   Mon Feb 14 15:08:18 2022 +0100

    USB: zaurus: support another broken Zaurus
    
    commit 6605cc67ca18b9d583eb96e18a20f5f4e726103c upstream.
    
    This SL-6000 says Direct Line, not Ethernet
    
    v2: added Reporter and Link
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Reported-by: Ross Maynard <bids.7405@bigpond.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215361
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dde5ddf02a47487dd6efcc7077307f1d4e1ba337
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Feb 17 14:10:44 2022 +0100

    sr9700: sanity check for packet length
    
    commit e9da0b56fe27206b49f39805f7dcda8a89379062 upstream.
    
    A malicious device can leak heap data to user space
    providing bogus frame lengths. Introduce a sanity check.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Reviewed-by: Grant Grundler <grundler@chromium.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13584c63745b6a7f7fc151c2c675bd1297b9e2be
Author: Helge Deller <deller@gmx.de>
Date:   Fri Feb 18 23:40:14 2022 +0100

    parisc/unaligned: Fix ldw() and stw() unalignment handlers
    
    commit a97279836867b1cb50a3d4f0b1bf60e0abe6d46c upstream.
    
    Fix 3 bugs:
    
    a) emulate_stw() doesn't return the error code value, so faulting
    instructions are not reported and aborted.
    
    b) Tell emulate_ldw() to handle fldw_l as floating point instruction
    
    c) Tell emulate_ldw() to handle ldw_m as integer instruction
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c99c850fac45d88fbc802d5134dc9e82f97b2184
Author: Helge Deller <deller@gmx.de>
Date:   Fri Feb 18 09:25:20 2022 +0100

    parisc/unaligned: Fix fldd and fstd unaligned handlers on 32-bit kernel
    
    commit dd2288f4a020d693360e3e8d72f8b9d9c25f5ef6 upstream.
    
    Usually the kernel provides fixup routines to emulate the fldd and fstd
    floating-point instructions if they load or store 8-byte from/to a not
    natuarally aligned memory location.
    
    On a 32-bit kernel I noticed that those unaligned handlers didn't worked and
    instead the application got a SEGV.
    While checking the code I found two problems:
    
    First, the OPCODE_FLDD_L and OPCODE_FSTD_L cases were ifdef'ed out by the
    CONFIG_PA20 option, and as such those weren't built on a pure 32-bit kernel.
    This is now fixed by moving the CONFIG_PA20 #ifdef to prevent the compilation
    of OPCODE_LDD_L and OPCODE_FSTD_L only, and handling the fldd and fstd
    instructions.
    
    The second problem are two bugs in the 32-bit inline assembly code, where the
    wrong registers where used. The calculation of the natural alignment used %2
    (vall) instead of %3 (ior), and the first word was stored back to address %1
    (valh) instead of %3 (ior).
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 914f93fee61a05b524ed8d8d795fa236d19f4400
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Tue Feb 22 10:47:42 2022 +0100

    vhost/vsock: don't check owner in vhost_vsock_stop() while releasing
    
    commit a58da53ffd70294ebea8ecd0eb45fd0d74add9f9 upstream.
    
    vhost_vsock_stop() calls vhost_dev_check_owner() to check the device
    ownership. It expects current->mm to be valid.
    
    vhost_vsock_stop() is also called by vhost_vsock_dev_release() when
    the user has not done close(), so when we are in do_exit(). In this
    case current->mm is invalid and we're releasing the device, so we
    should clean it anyway.
    
    Let's check the owner only when vhost_vsock_stop() is called
    by an ioctl.
    
    When invoked from release we can not fail so we don't check return
    code of vhost_vsock_stop(). We need to stop vsock even if it's not
    the owner.
    
    Fixes: 433fc58e6bf2 ("VSOCK: Introduce vhost_vsock.ko")
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+1e3ea63db39f2b4440e0@syzkaller.appspotmail.com
    Reported-and-tested-by: syzbot+3140b17cb44a7b174008@syzkaller.appspotmail.com
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4eec5fe1c680a6c47a9bc0cde00960a4eb663342
Author: Zhang Qiao <zhangqiao22@huawei.com>
Date:   Fri Jan 21 18:12:10 2022 +0800

    cgroup/cpuset: Fix a race between cpuset_attach() and cpu hotplug
    
    commit 05c7b7a92cc87ff8d7fde189d0fade250697573c upstream.
    
    As previously discussed(https://lkml.org/lkml/2022/1/20/51),
    cpuset_attach() is affected with similar cpu hotplug race,
    as follow scenario:
    
         cpuset_attach()                            cpu hotplug
        ---------------------------            ----------------------
        down_write(cpuset_rwsem)
        guarantee_online_cpus() // (load cpus_attach)
                                            sched_cpu_deactivate
                                              set_cpu_active()
                                              // will change cpu_active_mask
        set_cpus_allowed_ptr(cpus_attach)
          __set_cpus_allowed_ptr_locked()
           // (if the intersection of cpus_attach and
             cpu_active_mask is empty, will return -EINVAL)
        up_write(cpuset_rwsem)
    
    To avoid races such as described above, protect cpuset_attach() call
    with cpu_hotplug_lock.
    
    Fixes: be367d099270 ("cgroups: let ss->can_attach and ss->attach do whole threadgroups at a time")
    Cc: stable@vger.kernel.org # v2.6.32+
    Reported-by: Zhao Gongyi <zhaogongyi@huawei.com>
    Signed-off-by: Zhang Qiao <zhangqiao22@huawei.com>
    Acked-by: Waiman Long <longman@redhat.com>
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67793711eccadcadae9e67cf4bf272f94d0ca27c
Author: Tao Huang <huangtao@rock-chips.com>
Date:   Tue Jan 11 11:16:26 2022 +0800

    rk: scripts/mkimg: Fix search mkimage
    
    type will return an exit status of false when the name is not found.
    
    Signed-off-by: Tao Huang <huangtao@rock-chips.com>
    Change-Id: Ia5f719550c5e6eab3373f6d45c63f5f77d29b688

commit 73f6a47d0d327e471910e7365f9050ce0d30d92c
Author: Wang Jie <dave.wang@rock-chips.com>
Date:   Thu Nov 11 10:19:47 2021 +0800

    usb: typec: tcpm: add pending event lock
    
    Quickly plug and unplug the Type-C device with DP function test, there
    is a low probability of unplugging the Type-C dongle, DP work cannot
    acquire the mutex(port->lock), and it will always be stuck in the
    tcpm_unregister_altmodes() function during the rest port process, causing
    the Type-C device to be inserted again to fail to be detected or the reboot
    system to be stuck. The exception process is as follows:
    (1) Thread#1: unplug the Type-C device to trigger cc status changes interrupt, in the
        tcpm_pd_event_handler() function, first acquire the mutex(port->lock),
        then start state_machine work, and finally release the mutex(port->lock);
    tcpm_cc_change()
      -->tcpm_pd_event_handler()
        -->mutex_lock(&port->lock)  /* step 1 */
        -->_tcpm_cc_change(port, cc1, cc2) /* step 2 */
          -->tcpm_set_state(port, SRC_UNATTACHED, 0)
            -->kthread_queue_work(port->wq, &port->state_machine) /* step 3 */
        --> mutex_unlock(&port->lock)  /* step 4 */
    
    (2) Thread#2: before the execution of "step 2" is completed, DP work calls
        the callback function registered by the tcpm framework to initiate a VDM
        Message, such as Enter Mode Message, in the tcpm_altmode_enter() acquires
        the mutex(port->lock) fails and goes to sleep;
    dp_altmode_work()
      --> typec_altmode_enter(dp->alt)
        --> tcpm_altmode_enter()
          --> mutex_lock(&port->lock) /* dp work enter sleep */
    
    (3) After step 4, tcpm_altmode_enter() did not acquire for the mutex(port->lock),
        but was preempted by the state_machine work to enter the reset port process.
        In the reset port process, call the tcpm_unregister_altmodes() function to
        release altmode and cancel dp work. Because tcpm_altmode_enter() did not
        acquire the mutex(port->lock), causing it to be stuck in cancel dp work.
    tcpm_state_machine_work()
      -->mutex_lock(&port->lock)
      -->tcpm_reset_port(port)
        -->tcpm_unregister_altmodes(port)
          ......
          --> dp_altmode_remove()
            --> cancel_work_sync(&dp->work) /* always stuck in cancel dp work */
      ......
    
    Therefore, after adding a new mutex to wait for the tcpm_pd_event_handler() function
    to complete the processing, if the port is in the disconnect state, there is no need
    to acquire the mutex(port->lock) in the tcpm_altmode_enter() function.
    
    Change-Id: I364a035568ddc35ef7242b42f6d6d0ee3f5586fd
    Signed-off-by: Wang Jie <dave.wang@rock-chips.com>

commit d0f7a64bfaba46808b8c391f55b3f33d4e706a2d
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Sun Feb 27 11:30:52 2022 +0800

    drivers: input: gsensor: mxc6655xa support orientation detect
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I4629a49eb86bcc0480625aceed88e8c180c74f3d

commit 08c3c91f015ff5e3031cdadbeec6222933a2c28b
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Sun Feb 27 11:28:59 2022 +0800

    drivers: input: sensor-dev: support wakeup
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I8f1f48955f1957e998604624f036b0c07f6f755a

commit 1e549d833bc36dc7837ebda97388023986ce6bd1
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Fri Feb 18 10:18:50 2022 +0800

    crypto: rockchip: v2: ahash init/update/final use hardware crypto
    
    1. disable crypto interrupt when crypto is idle
    2. ahash init/update/final use hardware crypto
    3. reset crypto cc before cipher/hash hardware init
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Id2c85c36c9f2fbe34af553b3ba12239e3cd281b4

commit 004c4280313fbd1aba05bb17fc77f2f9a6e9b015
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Thu Feb 24 10:53:47 2022 +0800

    crypto: rockchip: v2: modify the algos supported by each platform
    
    1. add sha224/sha384 support.
    2. XTS mode was removed due to panic on some platforms(RV1126 kernel 4.19).
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I339cb21c6abefa684f9d36e8faaa04d6ab43d3b1

commit 1ffb2a2a6b8492e3aa3dc68bc63a53a49e4f5678
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Mon Feb 21 17:02:05 2022 +0800

    crypto: rockchip: v2: skcipher: fix bugs for librkcrypto test
    
    1. On RV1126/RV1109, AES-192 dma-fd should not use hardware crypto.
    2. Fixed a bug with CTR rk_iv_copyback in chain mode.
    3. Modify cryptodev log information to reduce runtime logging.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ib197e0df4f0ff0c7f4cd20832f25be1b21e8cbf3

commit 6ab8eba37e90ec2910bb0949eba3439c89315b26
Author: Ai ShaoXiang <aisx@rock-chips.com>
Date:   Thu Jan 27 16:02:17 2022 +0800

    drm/rockchip: vop2: vcnt event use signal to fill user_data
    
    The userspace transmits private data through request.signal,
    vcnt event return it to userspace through vbl.userdata
    
    Change-Id: I8295a3d4fd91430b3b9fac6c5b6b526e1f266f24
    Signed-off-by: Ai ShaoXiang <aisx@rock-chips.com>

commit cca940cfc45d348ec993108c88ef86135f07dc11
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Fri Feb 25 13:38:21 2022 +0800

    drm/rockchip: ebc_dev: release version v3.02
    
    fix overlay mode err after resume by blackcheck
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I0cc6b1b13118c9d07e45b523f89febb28bf646f1

commit afb133e52f87b52b924c2173daa670ee09d65c0a
Author: Wang Jie <dave.wang@rock-chips.com>
Date:   Tue Feb 22 11:06:56 2022 +0800

    usb: typec: tcpm: add et7303 driver
    
    Change-Id: I2339e9ece6c00d5a18eac01224cb623468d1771c
    Signed-off-by: Wang Jie <dave.wang@rock-chips.com>

commit 517da39e5cfaa6807dfd7946a7d6c6167b68080b
Author: Wang Jie <dave.wang@rock-chips.com>
Date:   Thu Feb 24 09:06:10 2022 +0800

    dt-bindings: usb: add et7303 document
    
    Change-Id: I3001058b835e367595924cd8b00b415bcaeee670
    Signed-off-by: Wang Jie <dave.wang@rock-chips.com>

commit a78766f3742865a3b2255f833f0473f7369fb6cd
Author: Zefa Chen <zefa.chen@rock-chips.com>
Date:   Thu Sep 23 15:28:06 2021 +0800

    media: i2c: gc2093 fixed error when quick stream
    
    Signed-off-by: Zefa Chen <zefa.chen@rock-chips.com>
    Change-Id: I4f360fabb877c059b416e7761d2025cf2d03ece8

commit 49647833eba7f9b02e8fd68b62f892e9c06041c4
Author: David Wu <david.wu@rock-chips.com>
Date:   Tue Jan 18 21:01:53 2022 +0800

    driver: rk630: Add RK630 MAC PHY support
    
    Support RK630 ethernet PHY currently, this is a RMII PHY.
    
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Change-Id: I444f9c5abd1dc5fe8067b79ddee93a801d7a28b9

commit 90560c5b5d9b2410f4c58ee4ef29fc4c1557872a
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Thu Feb 24 13:15:48 2022 +0800

    drm/rockchip: ebc_dev: release version v3.01
    
    diff percent check for part gc16 mode
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I2ff677b3ec09b38bb731456ebd79d305601bf143

commit e3bf4f8d9fd0c3515385cd150fe4de27989cfd0e
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Wed Feb 23 14:29:44 2022 +0800

    arm64: dts: rockchip: rk3399-evb-ind-lpddr4-android: add gc8034 config
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I99e44cd0212e2a7d3a3e74ec528dae379f3930b5

commit e242831e3cafbb28f7a89dd0fe489fc621adde4d
Author: Binyuan Lan <lby@rock-chips.com>
Date:   Mon Feb 21 22:05:40 2022 +0800

    ASoC: rockchip: rk817-codec: enable chop and reduce record gain
    
    Signed-off-by: Binyuan Lan <lby@rock-chips.com>
    Change-Id: I144cf8845961f3c03d53afd48754d20fe7789a66

commit 9ec09dae4801e5c00e21228bc719f818b7d5711a
Author: Zefa Chen <zefa.chen@rock-chips.com>
Date:   Wed Nov 24 19:48:38 2021 +0800

    media: rockchip: cif clean unready subdev before async subdev-itf
    
    Signed-off-by: Zefa Chen <zefa.chen@rock-chips.com>
    Change-Id: I2049f83a9d552109acca86d37d81ef0ceb2e9687

commit 672ec24093b50f19810331285f7e2e2b5529dd09
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Wed Feb 23 19:38:25 2022 +0800

    ARM: dts: rockchip: rk3288-evb-android-rk808-edp: add gc8034 config
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: I40c74f9eecfde5a0df28bde77f7f9c5b02c29cc5

commit 9462007903f938bfb56a4025478e0a06e0db2abb
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Wed Feb 23 15:42:28 2022 +0800

    arm64: dts: rockchip: rk3399-sapphire-excavator-edp: add gc8034 config
    
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Change-Id: Iae8b32357ca46563d12da0c17890bf70884df667

commit 930ed74bde6793b0df07d2259eb134eb4b34978b
Merge: 68418bd545ef 1763074989b3
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Wed Feb 23 12:16:23 2022 +0100

    Merge 4.19.231 into android-4.19-stable
    
    Changes in 4.19.231
            Makefile.extrawarn: Move -Wunaligned-access to W=1
            net: usb: ax88179_178a: Fix out-of-bounds accesses in RX fixup
            serial: parisc: GSC: fix build when IOSAPIC is not set
            parisc: Fix data TLB miss in sba_unmap_sg
            parisc: Fix sglist access in ccio-dma.c
            btrfs: send: in case of IO error log it
            net: ieee802154: at86rf230: Stop leaking skb's
            selftests/zram: Skip max_comp_streams interface on newer kernel
            selftests/zram01.sh: Fix compression ratio calculation
            selftests/zram: Adapt the situation that /dev/zram0 is being used
            ax25: improve the incomplete fix to avoid UAF and NPD bugs
            vfs: make freeze_super abort when sync_filesystem returns error
            quota: make dquot_quota_sync return errors from ->sync_fs
            nvme: fix a possible use-after-free in controller reset during load
            nvme-rdma: fix possible use-after-free in transport error_recovery work
            Revert "module, async: async_synchronize_full() on module init iff async is used"
            iwlwifi: fix use-after-free
            drm/radeon: Fix backlight control on iMac 12,1
            xfrm: Don't accidentally set RTO_ONLINK in decode_session4()
            taskstats: Cleanup the use of task->exit_code
            mmc: block: fix read single on recovery logic
            vsock: remove vsock from connected table when connect is interrupted by a signal
            iwlwifi: pcie: fix locking when "HW not ready"
            iwlwifi: pcie: gen2: fix locking when "HW not ready"
            net: dsa: lan9303: fix reset on probe
            net: ieee802154: ca8210: Fix lifs/sifs periods
            ping: fix the dif and sdif check in ping_lookup
            drop_monitor: fix data-race in dropmon_net_event / trace_napi_poll_hit
            bonding: fix data-races around agg_select_timer
            libsubcmd: Fix use-after-free for realloc(..., 0)
            ALSA: hda: Fix regression on forced probe mask option
            ALSA: hda: Fix missing codec probe on Shenker Dock 15
            ASoC: ops: Fix stereo change notifications in snd_soc_put_volsw()
            ASoC: ops: Fix stereo change notifications in snd_soc_put_volsw_range()
            powerpc/lib/sstep: fix 'ptesync' build error
            ext4: check for out-of-order index extents in ext4_valid_extent_entries()
            block/wbt: fix negative inflight counter when remove scsi device
            NFS: LOOKUP_DIRECTORY is also ok with symlinks
            NFS: Do not report writeback errors in nfs_getattr()
            mtd: rawnand: qcom: Fix clock sequencing in qcom_nandc_probe()
            EDAC: Fix calculation of returned address and next offset in edac_align_ptr()
            net: sched: limit TC_ACT_REPEAT loops
            dmaengine: sh: rcar-dmac: Check for error num after setting mask
            i2c: brcmstb: fix support for DSL and CM variants
            lib/iov_iter: initialize "flags" in new pipe_buffer
            mtd: rawnand: brcmnand: Refactored code to introduce helper functions
            mtd: rawnand: brcmnand: Fixed incorrect sub-page ECC status
            Drivers: hv: vmbus: Expose monitor data only when monitor pages are used
            Drivers: hv: vmbus: Fix memory leak in vmbus_add_channel_kobj
            KVM: x86/pmu: Use AMD64_RAW_EVENT_MASK for PERF_TYPE_RAW
            ARM: OMAP2+: hwmod: Add of_node_put() before break
            irqchip/sifive-plic: Add missing thead,c900-plic match string
            netfilter: conntrack: don't refresh sctp entries in closed state
            arm64: dts: meson-gx: add ATF BL32 reserved-memory region
            kconfig: let 'shell' return enough output for deep path names
            ata: libata-core: Disable TRIM on M88V29
            tracing: Fix tp_printk option related with tp_printk_stop_on_boot
            net: usb: qmi_wwan: Add support for Dell DW5829e
            net: macb: Align the dma and coherent dma masks
            Linux 4.19.231
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: Ifea29f81ea3bbfcc6f305c258aa0527711d128d1

commit 1763074989b3fdb49c4b6e38ad7d70c69f93076e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 23 11:58:42 2022 +0100

    Linux 4.19.231
    
    Link: https://lore.kernel.org/r/20220221084911.895146879@linuxfoundation.org
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Slade Watkins <slade@sladewatkins.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jeffrin Jose T  <jeffrin@rajagiritech.edu.in>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 322ad1f9706d69f9e43e3862c008d7e01e4ebebc
Author: Marc St-Amand <mstamand@ciena.com>
Date:   Wed Feb 9 15:13:25 2022 +0530

    net: macb: Align the dma and coherent dma masks
    
    [ Upstream commit 37f7860602b5b2d99fc7465f6407f403f5941988 ]
    
    Single page and coherent memory blocks can use different DMA masks
    when the macb accesses physical memory directly. The kernel is clever
    enough to allocate pages that fit into the requested address width.
    
    When using the ARM SMMU, the DMA mask must be the same for single
    pages and big coherent memory blocks. Otherwise the translation
    tables turn into one big mess.
    
      [   74.959909] macb ff0e0000.ethernet eth0: DMA bus error: HRESP not OK
      [   74.959989] arm-smmu fd800000.smmu: Unhandled context fault: fsr=0x402, iova=0x3165687460, fsynr=0x20001, cbfrsynra=0x877, cb=1
      [   75.173939] macb ff0e0000.ethernet eth0: DMA bus error: HRESP not OK
      [   75.173955] arm-smmu fd800000.smmu: Unhandled context fault: fsr=0x402, iova=0x3165687460, fsynr=0x20001, cbfrsynra=0x877, cb=1
    
    Since using the same DMA mask does not hurt direct 1:1 physical
    memory mappings, this commit always aligns DMA and coherent masks.
    
    Signed-off-by: Marc St-Amand <mstamand@ciena.com>
    Signed-off-by: Harini Katakam <harini.katakam@xilinx.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Tested-by: Conor Dooley <conor.dooley@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdefb9a4e87862e1ec4bf30680cdc6da5b897ccb
Author: Slark Xiao <slark_xiao@163.com>
Date:   Wed Feb 9 10:47:17 2022 +0800

    net: usb: qmi_wwan: Add support for Dell DW5829e
    
    [ Upstream commit 8ecbb179286cbc91810c16caeb3396e06305cd0c ]
    
    Dell DW5829e same as DW5821e except the CAT level.
    DW5821e supports CAT16 but DW5829e supports CAT9.
    Also, DW5829e includes normal and eSIM type.
    Please see below test evidence:
    
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  5 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=413c ProdID=81e6 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  7 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=413c ProdID=81e4 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e-eSIM Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    Signed-off-by: Slark Xiao <slark_xiao@163.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Link: https://lore.kernel.org/r/20220209024717.8564-1-slark_xiao@163.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f8c9e71e192823e4d76fdc53b4391642291bafc
Author: JaeSang Yoo <js.yoo.5b@gmail.com>
Date:   Wed Feb 9 04:54:22 2022 +0900

    tracing: Fix tp_printk option related with tp_printk_stop_on_boot
    
    [ Upstream commit 3203ce39ac0b2a57a84382ec184c7d4a0bede175 ]
    
    The kernel parameter "tp_printk_stop_on_boot" starts with "tp_printk" which is
    the same as another kernel parameter "tp_printk". If "tp_printk" setup is
    called before the "tp_printk_stop_on_boot", it will override the latter
    and keep it from being set.
    
    This is similar to other kernel parameter issues, such as:
      Commit 745a600cf1a6 ("um: console: Ignore console= option")
    or init/do_mounts.c:45 (setup function of "ro" kernel param)
    
    Fix it by checking for a "_" right after the "tp_printk" and if that
    exists do not process the parameter.
    
    Link: https://lkml.kernel.org/r/20220208195421.969326-1-jsyoo5b@gmail.com
    
    Signed-off-by: JaeSang Yoo <jsyoo5b@gmail.com>
    [ Fixed up change log and added space after if condition ]
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c2a3c94bd31a9737eafb71cd78dd23c86708b4f
Author: Zoltán Böszörményi <zboszor@gmail.com>
Date:   Fri Feb 4 13:57:50 2022 +0100

    ata: libata-core: Disable TRIM on M88V29
    
    [ Upstream commit c8ea23d5fa59f28302d4e3370c75d9c308e64410 ]
    
    This device is a CF card, or possibly an SSD in CF form factor.
    It supports NCQ and high speed DMA.
    
    While it also advertises TRIM support, I/O errors are reported
    when the discard mount option fstrim is used. TRIM also fails
    when disabling NCQ and not just as an NCQ command.
    
    TRIM must be disabled for this device.
    
    Signed-off-by: Zoltán Böszörményi <zboszor@gmail.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d1c79a1cd16c3b14effa88a7d0e454e3caec697
Author: Brenda Streiff <brenda.streiff@ni.com>
Date:   Fri Jan 28 16:01:28 2022 -0600

    kconfig: let 'shell' return enough output for deep path names
    
    [ Upstream commit 8a4c5b2a6d8ea079fa36034e8167de87ab6f8880 ]
    
    The 'shell' built-in only returns the first 256 bytes of the command's
    output. In some cases, 'shell' is used to return a path; by bumping up
    the buffer size to 4096 this lets us capture up to PATH_MAX.
    
    The specific case where I ran into this was due to commit 1e860048c53e
    ("gcc-plugins: simplify GCC plugin-dev capability test"). After this
    change, we now use `$(shell,$(CC) -print-file-name=plugin)` to return
    a path; if the gcc path is particularly long, then the path ends up
    truncated at the 256 byte mark, which makes the HAVE_GCC_PLUGINS
    depends test always fail.
    
    Signed-off-by: Brenda Streiff <brenda.streiff@ni.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b90eab91a2a232dcc7861c2c9a119fd5551837e0
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Wed Jan 26 04:49:52 2022 +0000

    arm64: dts: meson-gx: add ATF BL32 reserved-memory region
    
    [ Upstream commit 76577c9137456febb05b0e17d244113196a98968 ]
    
    Add an additional reserved memory region for the BL32 trusted firmware
    present in many devices that boot from Amlogic vendor u-boot.
    
    Suggested-by: Mateusz Krzak <kszaquitto@gmail.com>
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20220126044954.19069-2-christianshewitt@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e36ab99ae5c5c77e2254bfe54df76c33312ebf7
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Jan 28 13:13:32 2022 +0100

    netfilter: conntrack: don't refresh sctp entries in closed state
    
    [ Upstream commit 77b337196a9d87f3d6bb9b07c0436ecafbffda1e ]
    
    Vivek Thrivikraman reported:
     An SCTP server application which is accessed continuously by client
     application.
     When the session disconnects the client retries to establish a connection.
     After restart of SCTP server application the session is not established
     because of stale conntrack entry with connection state CLOSED as below.
    
     (removing this entry manually established new connection):
    
     sctp 9 CLOSED src=10.141.189.233 [..]  [ASSURED]
    
    Just skip timeout update of closed entries, we don't want them to
    stay around forever.
    
    Reported-and-tested-by: Vivek Thrivikraman <vivek.thrivikraman@est.tech>
    Closes: https://bugzilla.netfilter.org/show_bug.cgi?id=1579
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79497a6750eae4cdcd21eb6b330fb2001daddefc
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Sun Jan 30 21:56:34 2022 +0800

    irqchip/sifive-plic: Add missing thead,c900-plic match string
    
    [ Upstream commit 1d4df649cbb4b26d19bea38ecff4b65b10a1bbca ]
    
    The thead,c900-plic has been used in opensbi to distinguish
    PLIC [1]. Although PLICs have the same behaviors in Linux,
    they are different hardware with some custom initializing in
    firmware(opensbi).
    
    Qute opensbi patch commit-msg by Samuel:
    
      The T-HEAD PLIC implementation requires setting a delegation bit
      to allow access from S-mode. Now that the T-HEAD PLIC has its own
      compatible string, set this bit automatically from the PLIC driver,
      instead of reaching into the PLIC's MMIO space from another driver.
    
    [1]: https://github.com/riscv-software-src/opensbi/commit/78c2b19218bd62653b9fb31623a42ced45f38ea6
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Cc: Anup Patel <anup@brainfault.org>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Samuel Holland <samuel@sholland.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Samuel Holland <samuel@sholland.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220130135634.1213301-3-guoren@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8779326df60fd0990527f1f752598caf1bb6e8d6
Author: Wan Jiabing <wanjiabing@vivo.com>
Date:   Thu Oct 14 04:57:19 2021 -0400

    ARM: OMAP2+: hwmod: Add of_node_put() before break
    
    [ Upstream commit 80c469a0a03763f814715f3d12b6f3964c7423e8 ]
    
    Fix following coccicheck warning:
    ./arch/arm/mach-omap2/omap_hwmod.c:753:1-23: WARNING: Function
    for_each_matching_node should have of_node_put() before break
    
    Early exits from for_each_matching_node should decrement the
    node reference counter.
    
    Signed-off-by: Wan Jiabing <wanjiabing@vivo.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 653d5d0eaa8ca1954b6b14fe05e5cc723c36adb7
Author: Jim Mattson <jmattson@google.com>
Date:   Wed Feb 2 17:48:13 2022 -0800

    KVM: x86/pmu: Use AMD64_RAW_EVENT_MASK for PERF_TYPE_RAW
    
    [ Upstream commit 710c476514313c74045c41c0571bb5178fd16e3d ]
    
    AMD's event select is 3 nybbles, with the high nybble in bits 35:32 of
    a PerfEvtSeln MSR. Don't mask off the high nybble when configuring a
    RAW perf event.
    
    Fixes: ca724305a2b0 ("KVM: x86/vPMU: Implement AMD vPMU code for KVM")
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Message-Id: <20220203014813.2130559-2-jmattson@google.com>
    Reviewed-by: David Dunn <daviddunn@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 417947891bd5ae327f15efed1a0da2b12ef24962
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Feb 4 01:30:08 2022 +0800

    Drivers: hv: vmbus: Fix memory leak in vmbus_add_channel_kobj
    
    [ Upstream commit 8bc69f86328e87a0ffa79438430cc82f3aa6a194 ]
    
    kobject_init_and_add() takes reference even when it fails.
    According to the doc of kobject_init_and_add()：
    
       If this function returns an error, kobject_put() must be called to
       properly clean up the memory associated with the object.
    
    Fix memory leak by calling kobject_put().
    
    Fixes: c2e5df616e1a ("vmbus: add per-channel sysfs info")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Juan Vazquez <juvazq@linux.microsoft.com>
    Link: https://lore.kernel.org/r/20220203173008.43480-1-linmq006@gmail.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b57705c0ecd0f0f87cb4565995431ac9fa2e8104
Author: Kimberly Brown <kimbrownkd@gmail.com>
Date:   Tue Mar 19 00:04:01 2019 -0400

    Drivers: hv: vmbus: Expose monitor data only when monitor pages are used
    
    [ Upstream commit 46fc15487d02451448c11b83c4d086d87a6ad588 ]
    
    There are two methods for signaling the host: the monitor page mechanism
    and hypercalls. The monitor page mechanism is used by performance
    critical channels (storage, networking, etc.) because it provides
    improved throughput. However, latency is increased. Monitor pages are
    allocated to these channels.
    
    Monitor pages are not allocated to channels that do not use the monitor
    page mechanism. Therefore, these channels do not have a valid monitor id
    or valid monitor page data. In these cases, some of the "_show"
    functions return incorrect data. They return an invalid monitor id and
    data that is beyond the bounds of the hv_monitor_page array fields.
    
    The "channel->offermsg.monitor_allocated" value can be used to determine
    whether monitor pages have been allocated to a channel.
    
    Add "is_visible()" callback functions for the device-level and
    channel-level attribute groups. These functions will hide the monitor
    sysfs files when the monitor mechanism is not used.
    
    Remove ".default_attributes" from "vmbus_chan_attrs" and create a
    channel-level attribute group. These changes allow the new
    "is_visible()" callback function to be applied to the channel-level
    attributes.
    
    Call "sysfs_create_group()" in "vmbus_add_channel_kobj()" to create the
    channel's sysfs files. Add a new function,
    “vmbus_remove_channel_attr_group()”, and call it in "free_channel()" to
    remove the channel's sysfs files when the channel is closed.
    
    Signed-off-by: Kimberly Brown <kimbrownkd@gmail.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c48771b7f7b086bca5a1094191b33c3c4324bf0b
Author: david regan <dregan@mail.com>
Date:   Wed Jan 26 23:43:44 2022 +0100

    mtd: rawnand: brcmnand: Fixed incorrect sub-page ECC status
    
    [ Upstream commit 36415a7964711822e63695ea67fede63979054d9 ]
    
    The brcmnand driver contains a bug in which if a page (example 2k byte)
    is read from the parallel/ONFI NAND and within that page a subpage (512
    byte) has correctable errors which is followed by a subpage with
    uncorrectable errors, the page read will return the wrong status of
    correctable (as opposed to the actual status of uncorrectable.)
    
    The bug is in function brcmnand_read_by_pio where there is a check for
    uncorrectable bits which will be preempted if a previous status for
    correctable bits is detected.
    
    The fix is to stop checking for bad bits only if we already have a bad
    bits status.
    
    Fixes: 27c5b17cd1b1 ("mtd: nand: add NAND driver "library" for Broadcom STB NAND controller")
    Signed-off-by: david regan <dregan@mail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/trinity-478e0c09-9134-40e8-8f8c-31c371225eda-1643237024774@3c-app-mailcom-lxa02
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd11dc6d8b33529743d61d176197050271171a3d
Author: Kamal Dasu <kdasu.kdev@gmail.com>
Date:   Tue Jun 4 10:36:29 2019 -0400

    mtd: rawnand: brcmnand: Refactored code to introduce helper functions
    
    [ Upstream commit 3c7c1e4594efd57b98ae6f7298f40cff4f4fb47b ]
    
    Refactored NAND ECC and CMD address configuration code to use helper
    functions.
    
    Signed-off-by: Kamal Dasu <kdasu.kdev@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d46c42d8d2742742eddf9290e72df4b563f2e301
Author: Max Kellermann <max.kellermann@ionos.com>
Date:   Mon Feb 21 11:03:13 2022 +0100

    lib/iov_iter: initialize "flags" in new pipe_buffer
    
    commit 9d2231c5d74e13b2a0546fee6737ee4446017903 upstream.
    
    The functions copy_page_to_iter_pipe() and push_pipe() can both
    allocate a new pipe_buffer, but the "flags" member initializer is
    missing.
    
    Fixes: 241699cd72a8 ("new iov_iter flavour: pipe-backed")
    To: Alexander Viro <viro@zeniv.linux.org.uk>
    To: linux-fsdevel@vger.kernel.org
    To: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Max Kellermann <max.kellermann@ionos.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80c889dfd37cedb6002d0660c1ebf67662d158dd
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Tue Feb 15 08:27:35 2022 +0100

    i2c: brcmstb: fix support for DSL and CM variants
    
    commit 834cea3a252ed4847db076a769ad9efe06afe2d5 upstream.
    
    DSL and CM (Cable Modem) support 8 B max transfer size and have a custom
    DT binding for that reason. This driver was checking for a wrong
    "compatible" however which resulted in an incorrect setup.
    
    Fixes: e2e5a2c61837 ("i2c: brcmstb: Adding support for CM and DSL SoCs")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 783d70c94e513ca715643c00c6c275d9eb3b1a9e
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Jan 6 11:09:39 2022 +0800

    dmaengine: sh: rcar-dmac: Check for error num after setting mask
    
    commit 2d21543efe332cd8c8f212fb7d365bc8b0690bfa upstream.
    
    Because of the possible failure of the dma_supported(), the
    dma_set_mask_and_coherent() may return error num.
    Therefore, it should be better to check it and return the error if
    fails.
    
    Fixes: dc312349e875 ("dmaengine: rcar-dmac: Widen DMA mask to 40 bits")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20220106030939.2644320-1-jiasheng@iscas.ac.cn
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f63c9fa36bd7548fd07792127057cccb68a7e274
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Feb 15 15:53:05 2022 -0800

    net: sched: limit TC_ACT_REPEAT loops
    
    commit 5740d068909676d4bdb5c9c00c37a83df7728909 upstream.
    
    We have been living dangerously, at the mercy of malicious users,
    abusing TC_ACT_REPEAT, as shown by this syzpot report [1].
    
    Add an arbitrary limit (32) to the number of times an action can
    return TC_ACT_REPEAT.
    
    v2: switch the limit to 32 instead of 10.
        Use net_warn_ratelimited() instead of pr_err_once().
    
    [1] (C repro available on demand)
    
    rcu: INFO: rcu_preempt self-detected stall on CPU
    rcu:    1-...!: (10500 ticks this GP) idle=021/1/0x4000000000000000 softirq=5592/5592 fqs=0
            (t=10502 jiffies g=5305 q=190)
    rcu: rcu_preempt kthread timer wakeup didn't happen for 10502 jiffies! g5305 f0x0 RCU_GP_WAIT_FQS(5) ->state=0x402
    rcu:    Possible timer handling issue on cpu=0 timer-softirq=3527
    rcu: rcu_preempt kthread starved for 10505 jiffies! g5305 f0x0 RCU_GP_WAIT_FQS(5) ->state=0x402 ->cpu=0
    rcu:    Unless rcu_preempt kthread gets sufficient CPU time, OOM is now expected behavior.
    rcu: RCU grace-period kthread stack dump:
    task:rcu_preempt     state:I stack:29344 pid:   14 ppid:     2 flags:0x00004000
    Call Trace:
     <TASK>
     context_switch kernel/sched/core.c:4986 [inline]
     __schedule+0xab2/0x4db0 kernel/sched/core.c:6295
     schedule+0xd2/0x260 kernel/sched/core.c:6368
     schedule_timeout+0x14a/0x2a0 kernel/time/timer.c:1881
     rcu_gp_fqs_loop+0x186/0x810 kernel/rcu/tree.c:1963
     rcu_gp_kthread+0x1de/0x320 kernel/rcu/tree.c:2136
     kthread+0x2e9/0x3a0 kernel/kthread.c:377
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295
     </TASK>
    rcu: Stack dump where RCU GP kthread last ran:
    Sending NMI from CPU 1 to CPUs 0:
    NMI backtrace for cpu 0
    CPU: 0 PID: 3646 Comm: syz-executor358 Not tainted 5.17.0-rc3-syzkaller-00149-gbf8e59fd315f #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:rep_nop arch/x86/include/asm/vdso/processor.h:13 [inline]
    RIP: 0010:cpu_relax arch/x86/include/asm/vdso/processor.h:18 [inline]
    RIP: 0010:pv_wait_head_or_lock kernel/locking/qspinlock_paravirt.h:437 [inline]
    RIP: 0010:__pv_queued_spin_lock_slowpath+0x3b8/0xb40 kernel/locking/qspinlock.c:508
    Code: 48 89 eb c6 45 01 01 41 bc 00 80 00 00 48 c1 e9 03 83 e3 07 41 be 01 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8d 2c 01 eb 0c <f3> 90 41 83 ec 01 0f 84 72 04 00 00 41 0f b6 45 00 38 d8 7f 08 84
    RSP: 0018:ffffc9000283f1b0 EFLAGS: 00000206
    RAX: 0000000000000003 RBX: 0000000000000000 RCX: 1ffff1100fc0071e
    RDX: 0000000000000001 RSI: 0000000000000201 RDI: 0000000000000000
    RBP: ffff88807e0038f0 R08: 0000000000000001 R09: ffffffff8ffbf9ff
    R10: 0000000000000001 R11: 0000000000000001 R12: 0000000000004c1e
    R13: ffffed100fc0071e R14: 0000000000000001 R15: ffff8880b9c3aa80
    FS:  00005555562bf300(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007ffdbfef12b8 CR3: 00000000723c2000 CR4: 00000000003506f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     pv_queued_spin_lock_slowpath arch/x86/include/asm/paravirt.h:591 [inline]
     queued_spin_lock_slowpath arch/x86/include/asm/qspinlock.h:51 [inline]
     queued_spin_lock include/asm-generic/qspinlock.h:85 [inline]
     do_raw_spin_lock+0x200/0x2b0 kernel/locking/spinlock_debug.c:115
     spin_lock_bh include/linux/spinlock.h:354 [inline]
     sch_tree_lock include/net/sch_generic.h:610 [inline]
     sch_tree_lock include/net/sch_generic.h:605 [inline]
     prio_tune+0x3b9/0xb50 net/sched/sch_prio.c:211
     prio_init+0x5c/0x80 net/sched/sch_prio.c:244
     qdisc_create.constprop.0+0x44a/0x10f0 net/sched/sch_api.c:1253
     tc_modify_qdisc+0x4c5/0x1980 net/sched/sch_api.c:1660
     rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5594
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2494
     netlink_unicast_kernel net/netlink/af_netlink.c:1317 [inline]
     netlink_unicast+0x539/0x7e0 net/netlink/af_netlink.c:1343
     netlink_sendmsg+0x904/0xe00 net/netlink/af_netlink.c:1919
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:725
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2413
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2467
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2496
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f7ee98aae99
    Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 41 15 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007ffdbfef12d8 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 00007ffdbfef1300 RCX: 00007f7ee98aae99
    RDX: 0000000000000000 RSI: 0000000020000000 RDI: 0000000000000003
    RBP: 0000000000000000 R08: 000000000000000d R09: 000000000000000d
    R10: 000000000000000d R11: 0000000000000246 R12: 00007ffdbfef12f0
    R13: 00000000000f4240 R14: 000000000004ca47 R15: 00007ffdbfef12e4
     </TASK>
    INFO: NMI handler (nmi_cpu_backtrace_handler) took too long to run: 2.293 msecs
    NMI backtrace for cpu 1
    CPU: 1 PID: 3260 Comm: kworker/1:3 Not tainted 5.17.0-rc3-syzkaller-00149-gbf8e59fd315f #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Workqueue: mld mld_ifc_work
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     nmi_cpu_backtrace.cold+0x47/0x144 lib/nmi_backtrace.c:111
     nmi_trigger_cpumask_backtrace+0x1b3/0x230 lib/nmi_backtrace.c:62
     trigger_single_cpu_backtrace include/linux/nmi.h:164 [inline]
     rcu_dump_cpu_stacks+0x25e/0x3f0 kernel/rcu/tree_stall.h:343
     print_cpu_stall kernel/rcu/tree_stall.h:604 [inline]
     check_cpu_stall kernel/rcu/tree_stall.h:688 [inline]
     rcu_pending kernel/rcu/tree.c:3919 [inline]
     rcu_sched_clock_irq.cold+0x5c/0x759 kernel/rcu/tree.c:2617
     update_process_times+0x16d/0x200 kernel/time/timer.c:1785
     tick_sched_handle+0x9b/0x180 kernel/time/tick-sched.c:226
     tick_sched_timer+0x1b0/0x2d0 kernel/time/tick-sched.c:1428
     __run_hrtimer kernel/time/hrtimer.c:1685 [inline]
     __hrtimer_run_queues+0x1c0/0xe50 kernel/time/hrtimer.c:1749
     hrtimer_interrupt+0x31c/0x790 kernel/time/hrtimer.c:1811
     local_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1086 [inline]
     __sysvec_apic_timer_interrupt+0x146/0x530 arch/x86/kernel/apic/apic.c:1103
     sysvec_apic_timer_interrupt+0x8e/0xc0 arch/x86/kernel/apic/apic.c:1097
     </IRQ>
     <TASK>
     asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:638
    RIP: 0010:__sanitizer_cov_trace_const_cmp4+0xc/0x70 kernel/kcov.c:286
    Code: 00 00 00 48 89 7c 30 e8 48 89 4c 30 f0 4c 89 54 d8 20 48 89 10 5b c3 0f 1f 80 00 00 00 00 41 89 f8 bf 03 00 00 00 4c 8b 14 24 <89> f1 65 48 8b 34 25 00 70 02 00 e8 14 f9 ff ff 84 c0 74 4b 48 8b
    RSP: 0018:ffffc90002c5eea8 EFLAGS: 00000246
    RAX: 0000000000000007 RBX: ffff88801c625800 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000003
    RBP: ffff8880137d3100 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffffff874fcd88 R11: 0000000000000000 R12: ffff88801d692dc0
    R13: ffff8880137d3104 R14: 0000000000000000 R15: ffff88801d692de8
     tcf_police_act+0x358/0x11d0 net/sched/act_police.c:256
     tcf_action_exec net/sched/act_api.c:1049 [inline]
     tcf_action_exec+0x1a6/0x530 net/sched/act_api.c:1026
     tcf_exts_exec include/net/pkt_cls.h:326 [inline]
     route4_classify+0xef0/0x1400 net/sched/cls_route.c:179
     __tcf_classify net/sched/cls_api.c:1549 [inline]
     tcf_classify+0x3e8/0x9d0 net/sched/cls_api.c:1615
     prio_classify net/sched/sch_prio.c:42 [inline]
     prio_enqueue+0x3a7/0x790 net/sched/sch_prio.c:75
     dev_qdisc_enqueue+0x40/0x300 net/core/dev.c:3668
     __dev_xmit_skb net/core/dev.c:3756 [inline]
     __dev_queue_xmit+0x1f61/0x3660 net/core/dev.c:4081
     neigh_hh_output include/net/neighbour.h:533 [inline]
     neigh_output include/net/neighbour.h:547 [inline]
     ip_finish_output2+0x14dc/0x2170 net/ipv4/ip_output.c:228
     __ip_finish_output net/ipv4/ip_output.c:306 [inline]
     __ip_finish_output+0x396/0x650 net/ipv4/ip_output.c:288
     ip_finish_output+0x32/0x200 net/ipv4/ip_output.c:316
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip_output+0x196/0x310 net/ipv4/ip_output.c:430
     dst_output include/net/dst.h:451 [inline]
     ip_local_out+0xaf/0x1a0 net/ipv4/ip_output.c:126
     iptunnel_xmit+0x628/0xa50 net/ipv4/ip_tunnel_core.c:82
     geneve_xmit_skb drivers/net/geneve.c:966 [inline]
     geneve_xmit+0x10c8/0x3530 drivers/net/geneve.c:1077
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one net/core/dev.c:3473 [inline]
     dev_hard_start_xmit+0x1eb/0x920 net/core/dev.c:3489
     __dev_queue_xmit+0x2985/0x3660 net/core/dev.c:4116
     neigh_hh_output include/net/neighbour.h:533 [inline]
     neigh_output include/net/neighbour.h:547 [inline]
     ip6_finish_output2+0xf7a/0x14f0 net/ipv6/ip6_output.c:126
     __ip6_finish_output net/ipv6/ip6_output.c:191 [inline]
     __ip6_finish_output+0x61e/0xe90 net/ipv6/ip6_output.c:170
     ip6_finish_output+0x32/0x200 net/ipv6/ip6_output.c:201
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip6_output+0x1e4/0x530 net/ipv6/ip6_output.c:224
     dst_output include/net/dst.h:451 [inline]
     NF_HOOK include/linux/netfilter.h:307 [inline]
     NF_HOOK include/linux/netfilter.h:301 [inline]
     mld_sendpack+0x9a3/0xe40 net/ipv6/mcast.c:1826
     mld_send_cr net/ipv6/mcast.c:2127 [inline]
     mld_ifc_work+0x71c/0xdc0 net/ipv6/mcast.c:2659
     process_one_work+0x9ac/0x1650 kernel/workqueue.c:2307
     worker_thread+0x657/0x1110 kernel/workqueue.c:2454
     kthread+0x2e9/0x3a0 kernel/kthread.c:377
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295
     </TASK>
    ----------------
    Code disassembly (best guess):
       0:   48 89 eb                mov    %rbp,%rbx
       3:   c6 45 01 01             movb   $0x1,0x1(%rbp)
       7:   41 bc 00 80 00 00       mov    $0x8000,%r12d
       d:   48 c1 e9 03             shr    $0x3,%rcx
      11:   83 e3 07                and    $0x7,%ebx
      14:   41 be 01 00 00 00       mov    $0x1,%r14d
      1a:   48 b8 00 00 00 00 00    movabs $0xdffffc0000000000,%rax
      21:   fc ff df
      24:   4c 8d 2c 01             lea    (%rcx,%rax,1),%r13
      28:   eb 0c                   jmp    0x36
    * 2a:   f3 90                   pause <-- trapping instruction
      2c:   41 83 ec 01             sub    $0x1,%r12d
      30:   0f 84 72 04 00 00       je     0x4a8
      36:   41 0f b6 45 00          movzbl 0x0(%r13),%eax
      3b:   38 d8                   cmp    %bl,%al
      3d:   7f 08                   jg     0x47
      3f:   84                      .byte 0x84
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: Jiri Pirko <jiri@resnulli.us>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20220215235305.3272331-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bd74e78c478035c0f4e04a45375f8e6838d30ca
Author: Eliav Farber <farbere@amazon.com>
Date:   Thu Jan 13 10:06:19 2022 +0000

    EDAC: Fix calculation of returned address and next offset in edac_align_ptr()
    
    commit f8efca92ae509c25e0a4bd5d0a86decea4f0c41e upstream.
    
    Do alignment logic properly and use the "ptr" local variable for
    calculating the remainder of the alignment.
    
    This became an issue because struct edac_mc_layer has a size that is not
    zero modulo eight, and the next offset that was prepared for the private
    data was unaligned, causing an alignment exception.
    
    The patch in Fixes: which broke this actually wanted to "what we
    actually care about is the alignment of the actual pointer that's about
    to be returned." But it didn't check that alignment.
    
    Use the correct variable "ptr" for that.
    
      [ bp: Massage commit message. ]
    
    Fixes: 8447c4d15e35 ("edac: Do alignment logic properly in edac_align_ptr()")
    Signed-off-by: Eliav Farber <farbere@amazon.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220113100622.12783-2-farbere@amazon.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 891484112f4ffd0b576e88407bbd3653abf3faba
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Mon Jan 3 03:03:15 2022 +0000

    mtd: rawnand: qcom: Fix clock sequencing in qcom_nandc_probe()
    
    commit 5c23b3f965bc9ee696bf2ed4bdc54d339dd9a455 upstream.
    
    Interacting with a NAND chip on an IPQ6018 I found that the qcomsmem NAND
    partition parser was returning -EPROBE_DEFER waiting for the main smem
    driver to load.
    
    This caused the board to reset. Playing about with the probe() function
    shows that the problem lies in the core clock being switched off before the
    nandc_unalloc() routine has completed.
    
    If we look at how qcom_nandc_remove() tears down allocated resources we see
    the expected order is
    
    qcom_nandc_unalloc(nandc);
    
    clk_disable_unprepare(nandc->aon_clk);
    clk_disable_unprepare(nandc->core_clk);
    
    dma_unmap_resource(&pdev->dev, nandc->base_dma, resource_size(res),
                       DMA_BIDIRECTIONAL, 0);
    
    Tweaking probe() to both bring up and tear-down in that order removes the
    reset if we end up deferring elsewhere.
    
    Fixes: c76b78d8ec05 ("mtd: nand: Qualcomm NAND controller driver")
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Reviewed-by: Manivannan Sadhasivam <mani@kernel.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220103030316.58301-2-bryan.odonoghue@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2ba21f271eb167ac2b0581598e55222b89f0f32
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Feb 15 18:05:18 2022 -0500

    NFS: Do not report writeback errors in nfs_getattr()
    
    commit d19e0183a88306acda07f4a01fedeeffe2a2a06b upstream.
    
    The result of the writeback, whether it is an ENOSPC or an EIO, or
    anything else, does not inhibit the NFS client from reporting the
    correct file timestamps.
    
    Fixes: 79566ef018f5 ("NFS: Getattr doesn't require data sync semantics")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67552482aee7a139ed957595db8668d28ddc2c42
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Feb 8 13:38:23 2022 -0500

    NFS: LOOKUP_DIRECTORY is also ok with symlinks
    
    commit e0caaf75d443e02e55e146fd75fe2efc8aed5540 upstream.
    
    Commit ac795161c936 (NFSv4: Handle case where the lookup of a directory
    fails) [1], part of Linux since 5.17-rc2, introduced a regression, where
    a symbolic link on an NFS mount to a directory on another NFS does not
    resolve(?) the first time it is accessed:
    
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Fixes: ac795161c936 ("NFSv4: Handle case where the lookup of a directory fails")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Tested-by: Donald Buczek <buczek@molgen.mpg.de>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38c7f8c0599a04547f9be3be66e7b7e64d71c918
Author: Laibin Qiu <qiulaibin@huawei.com>
Date:   Sat Jan 22 19:10:45 2022 +0800

    block/wbt: fix negative inflight counter when remove scsi device
    
    commit e92bc4cd34de2ce454bdea8cd198b8067ee4e123 upstream.
    
    Now that we disable wbt by set WBT_STATE_OFF_DEFAULT in
    wbt_disable_default() when switch elevator to bfq. And when
    we remove scsi device, wbt will be enabled by wbt_enable_default.
    If it become false positive between wbt_wait() and wbt_track()
    when submit write request.
    
    The following is the scenario that triggered the problem.
    
    T1                          T2                           T3
                                elevator_switch_mq
                                bfq_init_queue
                                wbt_disable_default <= Set
                                rwb->enable_state (OFF)
    Submit_bio
    blk_mq_make_request
    rq_qos_throttle
    <= rwb->enable_state (OFF)
                                                             scsi_remove_device
                                                             sd_remove
                                                             del_gendisk
                                                             blk_unregister_queue
                                                             elv_unregister_queue
                                                             wbt_enable_default
                                                             <= Set rwb->enable_state (ON)
    q_qos_track
    <= rwb->enable_state (ON)
    ^^^^^^ this request will mark WBT_TRACKED without inflight add and will
    lead to drop rqw->inflight to -1 in wbt_done() which will trigger IO hung.
    
    Fix this by move wbt_enable_default() from elv_unregister to
    bfq_exit_queue(). Only re-enable wbt when bfq exit.
    
    Fixes: 76a8040817b4b ("blk-wbt: make sure throttle is enabled properly")
    
    Remove oneline stale comment, and kill one oneshot local variable.
    
    Signed-off-by: Ming Lei <ming.lei@rehdat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/linux-block/20211214133103.551813-1-qiulaibin@huawei.com/
    Signed-off-by: Laibin Qiu <qiulaibin@huawei.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60bc3a068f77220751a2d258d3cc6f7d193332d0
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Wed Sep 8 20:08:48 2021 +0800

    ext4: check for out-of-order index extents in ext4_valid_extent_entries()
    
    commit 8dd27fecede55e8a4e67eef2878040ecad0f0d33 upstream.
    
    After commit 5946d089379a ("ext4: check for overlapping extents in
    ext4_valid_extent_entries()"), we can check out the overlapping extent
    entry in leaf extent blocks. But the out-of-order extent entry in index
    extent blocks could also trigger bad things if the filesystem is
    inconsistent. So this patch add a check to figure out the out-of-order
    index extents and return error.
    
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Reviewed-by: Theodore Ts'o <tytso@mit.edu>
    Link: https://lore.kernel.org/r/20210908120850.4012324-2-yi.zhang@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Leah Rumancik <leah.rumancik@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee6e9e535622cc106078e1b9f01c11570ebe0ec9
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Fri Feb 11 01:51:13 2022 +0100

    powerpc/lib/sstep: fix 'ptesync' build error
    
    commit fe663df7825811358531dc2e8a52d9eaa5e3515e upstream.
    
    Building tinyconfig with gcc (Debian 11.2.0-16) and assembler (Debian
    2.37.90.20220207) the following build error shows up:
    
      {standard input}: Assembler messages:
      {standard input}:2088: Error: unrecognized opcode: `ptesync'
      make[3]: *** [/builds/linux/scripts/Makefile.build:287: arch/powerpc/lib/sstep.o] Error 1
    
    Add the 'ifdef CONFIG_PPC64' around the 'ptesync' in function
    'emulate_update_regs()' to like it is in 'analyse_instr()'. Since it looks like
    it got dropped inadvertently by commit 3cdfcbfd32b9 ("powerpc: Change
    analyse_instr so it doesn't modify *regs").
    
    A key detail is that analyse_instr() will never recognise lwsync or
    ptesync on 32-bit (because of the existing ifdef), and as a result
    emulate_update_regs() should never be called with an op specifying
    either of those on 32-bit. So removing them from emulate_update_regs()
    should be a nop in terms of runtime behaviour.
    
    Fixes: 3cdfcbfd32b9 ("powerpc: Change analyse_instr so it doesn't modify *regs")
    Cc: stable@vger.kernel.org # v4.14+
    Suggested-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    [mpe: Add last paragraph of change log mentioning analyse_instr() details]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220211005113.1361436-1-anders.roxell@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e43b0baddb13104cfbb150775598855617da673
Author: Mark Brown <broonie@kernel.org>
Date:   Tue Feb 1 15:56:28 2022 +0000

    ASoC: ops: Fix stereo change notifications in snd_soc_put_volsw_range()
    
    commit 650204ded3703b5817bd4b6a77fa47d333c4f902 upstream.
    
    When writing out a stereo control we discard the change notification from
    the first channel, meaning that events are only generated based on changes
    to the second channel. Ensure that we report a change if either channel
    has changed.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220201155629.120510-4-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29e0c3e1f95fccebdf8da0bef2dfb7751fd522af
Author: Mark Brown <broonie@kernel.org>
Date:   Tue Feb 1 15:56:26 2022 +0000

    ASoC: ops: Fix stereo change notifications in snd_soc_put_volsw()
    
    commit 564778d7b1ea465f9487eedeece7527a033549c5 upstream.
    
    When writing out a stereo control we discard the change notification from
    the first channel, meaning that events are only generated based on changes
    to the second channel. Ensure that we report a change if either channel
    has changed.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220201155629.120510-2-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f96a474c73c0aa4b077644c56c9c6a316a75976a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 14 11:00:20 2022 +0100

    ALSA: hda: Fix missing codec probe on Shenker Dock 15
    
    commit dd8e5b161d7fb9cefa1f1d6e35a39b9e1563c8d3 upstream.
    
    By some unknown reason, BIOS on Shenker Dock 15 doesn't set up the
    codec mask properly for the onboard audio.  Let's set the forced codec
    mask to enable the codec discovery.
    
    Reported-by: dmummenschanz@web.de
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/trinity-f018660b-95c9-442b-a2a8-c92a56eb07ed-1644345967148@3c-app-webde-bap22
    Link: https://lore.kernel.org/r/20220214100020.8870-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b8897e7916dfaacf2c5b66f3393b0e357f7da57
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 14 11:00:19 2022 +0100

    ALSA: hda: Fix regression on forced probe mask option
    
    commit 6317f7449348a897483a2b4841f7a9190745c81b upstream.
    
    The forced probe mask via probe_mask 0x100 bit doesn't work any longer
    as expected since the bus init code was moved and it's clearing the
    codec_mask value that was set beforehand.  This patch fixes the
    long-time regression by moving the check_probe_mask() call.
    
    Fixes: a41d122449be ("ALSA: hda - Embed bus into controller object")
    Reported-by: dmummenschanz@web.de
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/trinity-f018660b-95c9-442b-a2a8-c92a56eb07ed-1644345967148@3c-app-webde-bap22
    Link: https://lore.kernel.org/r/20220214100020.8870-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1029268dc50d3eb54ab0e8d7075d33b190cad9d2
Author: Kees Cook <keescook@chromium.org>
Date:   Sun Feb 13 10:24:43 2022 -0800

    libsubcmd: Fix use-after-free for realloc(..., 0)
    
    commit 52a9dab6d892763b2a8334a568bd4e2c1a6fde66 upstream.
    
    GCC 12 correctly reports a potential use-after-free condition in the
    xrealloc helper. Fix the warning by avoiding an implicit "free(ptr)"
    when size == 0:
    
    In file included from help.c:12:
    In function 'xrealloc',
        inlined from 'add_cmdname' at help.c:24:2: subcmd-util.h:56:23: error: pointer may be used after 'realloc' [-Werror=use-after-free]
       56 |                 ret = realloc(ptr, size);
          |                       ^~~~~~~~~~~~~~~~~~
    subcmd-util.h:52:21: note: call to 'realloc' here
       52 |         void *ret = realloc(ptr, size);
          |                     ^~~~~~~~~~~~~~~~~~
    subcmd-util.h:58:31: error: pointer may be used after 'realloc' [-Werror=use-after-free]
       58 |                         ret = realloc(ptr, 1);
          |                               ^~~~~~~~~~~~~~~
    subcmd-util.h:52:21: note: call to 'realloc' here
       52 |         void *ret = realloc(ptr, size);
          |                     ^~~~~~~~~~~~~~~~~~
    
    Fixes: 2f4ce5ec1d447beb ("perf tools: Finalize subcmd independence")
    Reported-by: Valdis Klētnieks <valdis.kletnieks@vt.edu>
    Signed-off-by: Kees Kook <keescook@chromium.org>
    Tested-by: Valdis Klētnieks <valdis.kletnieks@vt.edu>
    Tested-by: Justin M. Forbes <jforbes@fedoraproject.org>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: linux-hardening@vger.kernel.org
    Cc: Valdis Klētnieks <valdis.kletnieks@vt.edu>
    Link: http://lore.kernel.org/lkml/20220213182443.4037039-1-keescook@chromium.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4218e6995c19970aa7b32914be6c8e059837cbdf
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Feb 14 11:15:53 2022 -0800

    bonding: fix data-races around agg_select_timer
    
    commit 9ceaf6f76b203682bb6100e14b3d7da4c0bedde8 upstream.
    
    syzbot reported that two threads might write over agg_select_timer
    at the same time. Make agg_select_timer atomic to fix the races.
    
    BUG: KCSAN: data-race in bond_3ad_initiate_agg_selection / bond_3ad_state_machine_handler
    
    read to 0xffff8881242aea90 of 4 bytes by task 1846 on cpu 1:
     bond_3ad_state_machine_handler+0x99/0x2810 drivers/net/bonding/bond_3ad.c:2317
     process_one_work+0x3f6/0x960 kernel/workqueue.c:2307
     worker_thread+0x616/0xa70 kernel/workqueue.c:2454
     kthread+0x1bf/0x1e0 kernel/kthread.c:377
     ret_from_fork+0x1f/0x30
    
    write to 0xffff8881242aea90 of 4 bytes by task 25910 on cpu 0:
     bond_3ad_initiate_agg_selection+0x18/0x30 drivers/net/bonding/bond_3ad.c:1998
     bond_open+0x658/0x6f0 drivers/net/bonding/bond_main.c:3967
     __dev_open+0x274/0x3a0 net/core/dev.c:1407
     dev_open+0x54/0x190 net/core/dev.c:1443
     bond_enslave+0xcef/0x3000 drivers/net/bonding/bond_main.c:1937
     do_set_master net/core/rtnetlink.c:2532 [inline]
     do_setlink+0x94f/0x2500 net/core/rtnetlink.c:2736
     __rtnl_newlink net/core/rtnetlink.c:3414 [inline]
     rtnl_newlink+0xfeb/0x13e0 net/core/rtnetlink.c:3529
     rtnetlink_rcv_msg+0x745/0x7e0 net/core/rtnetlink.c:5594
     netlink_rcv_skb+0x14e/0x250 net/netlink/af_netlink.c:2494
     rtnetlink_rcv+0x18/0x20 net/core/rtnetlink.c:5612
     netlink_unicast_kernel net/netlink/af_netlink.c:1317 [inline]
     netlink_unicast+0x602/0x6d0 net/netlink/af_netlink.c:1343
     netlink_sendmsg+0x728/0x850 net/netlink/af_netlink.c:1919
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg net/socket.c:725 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2413
     ___sys_sendmsg net/socket.c:2467 [inline]
     __sys_sendmsg+0x195/0x230 net/socket.c:2496
     __do_sys_sendmsg net/socket.c:2505 [inline]
     __se_sys_sendmsg net/socket.c:2503 [inline]
     __x64_sys_sendmsg+0x42/0x50 net/socket.c:2503
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x00000050 -> 0x0000004f
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 0 PID: 25910 Comm: syz-executor.1 Tainted: G        W         5.17.0-rc4-syzkaller-dirty #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Jay Vosburgh <j.vosburgh@gmail.com>
    Cc: Veaceslav Falico <vfalico@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e294bc65746b779e4ad50f95ed04926cf72d1454
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Feb 10 09:13:31 2022 -0800

    drop_monitor: fix data-race in dropmon_net_event / trace_napi_poll_hit
    
    commit dcd54265c8bc14bd023815e36e2d5f9d66ee1fee upstream.
    
    trace_napi_poll_hit() is reading stat->dev while another thread can write
    on it from dropmon_net_event()
    
    Use READ_ONCE()/WRITE_ONCE() here, RCU rules are properly enforced already,
    we only have to take care of load/store tearing.
    
    BUG: KCSAN: data-race in dropmon_net_event / trace_napi_poll_hit
    
    write to 0xffff88816f3ab9c0 of 8 bytes by task 20260 on cpu 1:
     dropmon_net_event+0xb8/0x2b0 net/core/drop_monitor.c:1579
     notifier_call_chain kernel/notifier.c:84 [inline]
     raw_notifier_call_chain+0x53/0xb0 kernel/notifier.c:392
     call_netdevice_notifiers_info net/core/dev.c:1919 [inline]
     call_netdevice_notifiers_extack net/core/dev.c:1931 [inline]
     call_netdevice_notifiers net/core/dev.c:1945 [inline]
     unregister_netdevice_many+0x867/0xfb0 net/core/dev.c:10415
     ip_tunnel_delete_nets+0x24a/0x280 net/ipv4/ip_tunnel.c:1123
     vti_exit_batch_net+0x2a/0x30 net/ipv4/ip_vti.c:515
     ops_exit_list net/core/net_namespace.c:173 [inline]
     cleanup_net+0x4dc/0x8d0 net/core/net_namespace.c:597
     process_one_work+0x3f6/0x960 kernel/workqueue.c:2307
     worker_thread+0x616/0xa70 kernel/workqueue.c:2454
     kthread+0x1bf/0x1e0 kernel/kthread.c:377
     ret_from_fork+0x1f/0x30
    
    read to 0xffff88816f3ab9c0 of 8 bytes by interrupt on cpu 0:
     trace_napi_poll_hit+0x89/0x1c0 net/core/drop_monitor.c:292
     trace_napi_poll include/trace/events/napi.h:14 [inline]
     __napi_poll+0x36b/0x3f0 net/core/dev.c:6366
     napi_poll net/core/dev.c:6432 [inline]
     net_rx_action+0x29e/0x650 net/core/dev.c:6519
     __do_softirq+0x158/0x2de kernel/softirq.c:558
     do_softirq+0xb1/0xf0 kernel/softirq.c:459
     __local_bh_enable_ip+0x68/0x70 kernel/softirq.c:383
     __raw_spin_unlock_bh include/linux/spinlock_api_smp.h:167 [inline]
     _raw_spin_unlock_bh+0x33/0x40 kernel/locking/spinlock.c:210
     spin_unlock_bh include/linux/spinlock.h:394 [inline]
     ptr_ring_consume_bh include/linux/ptr_ring.h:367 [inline]
     wg_packet_decrypt_worker+0x73c/0x780 drivers/net/wireguard/receive.c:506
     process_one_work+0x3f6/0x960 kernel/workqueue.c:2307
     worker_thread+0x616/0xa70 kernel/workqueue.c:2454
     kthread+0x1bf/0x1e0 kernel/kthread.c:377
     ret_from_fork+0x1f/0x30
    
    value changed: 0xffff88815883e000 -> 0x0000000000000000
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 0 PID: 26435 Comm: kworker/0:1 Not tainted 5.17.0-rc1-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Workqueue: wg-crypt-wg2 wg_packet_decrypt_worker
    
    Fixes: 4ea7e38696c7 ("dropmon: add ability to detect when hardware dropsrxpackets")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Neil Horman <nhorman@tuxdriver.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0e55a57df7deed5f0682b584e4da913db2f6e84
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Feb 16 00:20:52 2022 -0500

    ping: fix the dif and sdif check in ping_lookup
    
    commit 35a79e64de29e8d57a5989aac57611c0cd29e13e upstream.
    
    When 'ping' changes to use PING socket instead of RAW socket by:
    
       # sysctl -w net.ipv4.ping_group_range="0 100"
    
    There is another regression caused when matching sk_bound_dev_if
    and dif, RAW socket is using inet_iif() while PING socket lookup
    is using skb->dev->ifindex, the cmd below fails due to this:
    
      # ip link add dummy0 type dummy
      # ip link set dummy0 up
      # ip addr add 192.168.111.1/24 dev dummy0
      # ping -I dummy0 192.168.111.1 -c1
    
    The issue was also reported on:
    
      https://github.com/iputils/iputils/issues/104
    
    But fixed in iputils in a wrong way by not binding to device when
    destination IP is on device, and it will cause some of kselftests
    to fail, as Jianlin noticed.
    
    This patch is to use inet(6)_iif and inet(6)_sdif to get dif and
    sdif for PING socket, and keep consistent with RAW socket.
    
    Fixes: c319b4d76b9e ("net: ipv4: add IPPROTO_ICMP socket kind")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d554f7222b374051b3b99859f8ef09026168e01
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Feb 1 19:06:26 2022 +0100

    net: ieee802154: ca8210: Fix lifs/sifs periods
    
    commit bdc120a2bcd834e571ce4115aaddf71ab34495de upstream.
    
    These periods are expressed in time units (microseconds) while 40 and 12
    are the number of symbol durations these periods will last. We need to
    multiply them both with the symbol_duration in order to get these
    values in microseconds.
    
    Fixes: ded845a781a5 ("ieee802154: Add CA8210 IEEE 802.15.4 device driver")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/r/20220201180629.93410-2-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f1eeffca07f51fa67818b7343952dccc117df0a
Author: Mans Rullgard <mans@mansr.com>
Date:   Wed Feb 9 14:54:54 2022 +0000

    net: dsa: lan9303: fix reset on probe
    
    commit 6bb9681a43f34f2cab4aad6e2a02da4ce54d13c5 upstream.
    
    The reset input to the LAN9303 chip is active low, and devicetree
    gpio handles reflect this.  Therefore, the gpio should be requested
    with an initial state of high in order for the reset signal to be
    asserted.  Other uses of the gpio already use the correct polarity.
    
    Fixes: a1292595e006 ("net: dsa: add new DSA switch driver for the SMSC-LAN9303")
    Signed-off-by: Mans Rullgard <mans@mansr.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fianelil <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20220209145454.19749-1-mans@mansr.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37e7ae454c6b776855f7c316f682b7b9af7ab06e
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Jan 28 14:30:53 2022 +0200

    iwlwifi: pcie: gen2: fix locking when "HW not ready"
    
    commit 4c29c1e27a1e178a219b3877d055e6dd643bdfda upstream.
    
    If we run into this error path, we shouldn't unlock the mutex
    since it's not locked since. Fix this in the gen2 code as well.
    
    Fixes: eda50cde58de ("iwlwifi: pcie: add context information support")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/iwlwifi.20220128142706.b8b0dfce16ef.Ie20f0f7b23e5911350a2766524300d2915e7b677@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf9b45129cedc2972d6148c84304dd3c4a9ab038
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Jan 28 14:30:52 2022 +0200

    iwlwifi: pcie: fix locking when "HW not ready"
    
    commit e9848aed147708a06193b40d78493b0ef6abccf2 upstream.
    
    If we run into this error path, we shouldn't unlock the mutex
    since it's not locked since. Fix this.
    
    Fixes: a6bd005fe92d ("iwlwifi: pcie: fix RF-Kill vs. firmware load race")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/iwlwifi.20220128142706.5d16821d1433.Id259699ddf9806459856d6aefbdbe54477aecffd@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2910bcb9f67551a45397735e47b6d456eb8cd549
Author: Seth Forshee <sforshee@digitalocean.com>
Date:   Thu Feb 17 08:13:12 2022 -0600

    vsock: remove vsock from connected table when connect is interrupted by a signal
    
    commit b9208492fcaecff8f43915529ae34b3bcb03877c upstream.
    
    vsock_connect() expects that the socket could already be in the
    TCP_ESTABLISHED state when the connecting task wakes up with a signal
    pending. If this happens the socket will be in the connected table, and
    it is not removed when the socket state is reset. In this situation it's
    common for the process to retry connect(), and if the connection is
    successful the socket will be added to the connected table a second
    time, corrupting the list.
    
    Prevent this by calling vsock_remove_connected() if a signal is received
    while waiting for a connection. This is harmless if the socket is not in
    the connected table, and if it is in the table then removing it will
    prevent list corruption from a double add.
    
    Note for backporting: this patch requires d5afa82c977e ("vsock: correct
    removal of socket from the list"), which is in all current stable trees
    except 4.9.y.
    
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Signed-off-by: Seth Forshee <sforshee@digitalocean.com>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Link: https://lore.kernel.org/r/20220217141312.2297547-1-sforshee@digitalocean.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c91b06297563e84ac072464fe6cc141cc15435f0
Author: Christian Löhle <CLoehle@hyperstone.com>
Date:   Fri Feb 4 15:11:37 2022 +0000

    mmc: block: fix read single on recovery logic
    
    commit 54309fde1a352ad2674ebba004a79f7d20b9f037 upstream.
    
    On reads with MMC_READ_MULTIPLE_BLOCK that fail,
    the recovery handler will use MMC_READ_SINGLE_BLOCK for
    each of the blocks, up to MMC_READ_SINGLE_RETRIES times each.
    The logic for this is fixed to never report unsuccessful reads
    as success to the block layer.
    
    On command error with retries remaining, blk_update_request was
    called with whatever value error was set last to.
    In case it was last set to BLK_STS_OK (default), the read will be
    reported as success, even though there was no data read from the device.
    This could happen on a CRC mismatch for the response,
    a card rejecting the command (e.g. again due to a CRC mismatch).
    In case it was last set to BLK_STS_IOERR, the error is reported correctly,
    but no retries will be attempted.
    
    Fixes: 81196976ed946c ("mmc: block: Add blk-mq support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christian Loehle <cloehle@hyperstone.com>
    Reviewed-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/bc706a6ab08c4fe2834ba0c05a804672@hyperstone.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6055df602b9e9ed9427b7bb9088c75cb5cf6350
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Jan 3 11:32:36 2022 -0600

    taskstats: Cleanup the use of task->exit_code
    
    commit 1b5a42d9c85f0e731f01c8d1129001fd8531a8a0 upstream.
    
    In the function bacct_add_task the code reading task->exit_code was
    introduced in commit f3cef7a99469 ("[PATCH] csa: basic accounting over
    taskstats"), and it is not entirely clear what the taskstats interface
    is trying to return as only returning the exit_code of the first task
    in a process doesn't make a lot of sense.
    
    As best as I can figure the intent is to return task->exit_code after
    a task exits.  The field is returned with per task fields, so the
    exit_code of the entire process is not wanted.  Only the value of the
    first task is returned so this is not a useful way to get the per task
    ptrace stop code.  The ordinary case of returning this value is
    returning after a task exits, which also precludes use for getting
    a ptrace value.
    
    It is common to for the first task of a process to also be the last
    task of a process so this field may have done something reasonable by
    accident in testing.
    
    Make ac_exitcode a reliable per task value by always returning it for
    every exited task.
    
    Setting ac_exitcode in a sensible mannter makes it possible to continue
    to provide this value going forward.
    
    Cc: Balbir Singh <bsingharora@gmail.com>
    Fixes: f3cef7a99469 ("[PATCH] csa: basic accounting over taskstats")
    Link: https://lkml.kernel.org/r/20220103213312.9144-5-ebiederm@xmission.com
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbf7a1a2fc64d89896ba5eba494a40ca151a2675
Author: Guillaume Nault <gnault@redhat.com>
Date:   Mon Jan 10 14:43:06 2022 +0100

    xfrm: Don't accidentally set RTO_ONLINK in decode_session4()
    
    commit 23e7b1bfed61e301853b5e35472820d919498278 upstream.
    
    Similar to commit 94e2238969e8 ("xfrm4: strip ECN bits from tos field"),
    clear the ECN bits from iph->tos when setting ->flowi4_tos.
    This ensures that the last bit of ->flowi4_tos is cleared, so
    ip_route_output_key_hash() isn't going to restrict the scope of the
    route lookup.
    
    Use ~INET_ECN_MASK instead of IPTOS_RT_MASK, because we have no reason
    to clear the high order bits.
    
    Found by code inspection, compile tested only.
    
    Fixes: 4da3089f2b58 ("[IPSEC]: Use TOS when doing tunnel lookups")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    [sudip: manually backport to previous location]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09be4abbfaea64431e8d3b8bb73af73a9ea42a47
Author: Nicholas Bishop <nicholasbishop@google.com>
Date:   Fri Feb 11 14:57:39 2022 -0500

    drm/radeon: Fix backlight control on iMac 12,1
    
    commit 364438fd629f7611a84c8e6d7de91659300f1502 upstream.
    
    The iMac 12,1 does not use the gmux driver for backlight, so the radeon
    backlight device is needed to set the brightness.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1838
    Signed-off-by: Nicholas Bishop <nicholasbishop@google.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d6475179b85a83186ccce59cdc359d4f07d0bcb
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Feb 8 11:47:30 2022 +0100

    iwlwifi: fix use-after-free
    
    commit bea2662e7818e15d7607d17d57912ac984275d94 upstream.
    
    If no firmware was present at all (or, presumably, all of the
    firmware files failed to parse), we end up unbinding by calling
    device_release_driver(), which calls remove(), which then in
    iwlwifi calls iwl_drv_stop(), freeing the 'drv' struct. However
    the new code I added will still erroneously access it after it
    was freed.
    
    Set 'failure=false' in this case to avoid the access, all data
    was already freed anyway.
    
    Cc: stable@vger.kernel.org
    Reported-by: Stefan Agner <stefan@agner.ch>
    Reported-by: Wolfgang Walter <linux@stwm.de>
    Reported-by: Jason Self <jason@bluehome.net>
    Reported-by: Dominik Behr <dominik@dominikbehr.com>
    Reported-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Fixes: ab07506b0454 ("iwlwifi: fix leaks/bad data after failed firmware load")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220208114728.e6b514cf4c85.Iffb575ca2a623d7859b542c33b2a507d01554251@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0c66ac8b72f816d5631fde0ca0b39af602dce48
Author: Igor Pylypiv <ipylypiv@google.com>
Date:   Thu Jan 27 15:39:53 2022 -0800

    Revert "module, async: async_synchronize_full() on module init iff async is used"
    
    [ Upstream commit 67d6212afda218d564890d1674bab28e8612170f ]
    
    This reverts commit 774a1221e862b343388347bac9b318767336b20b.
    
    We need to finish all async code before the module init sequence is
    done.  In the reverted commit the PF_USED_ASYNC flag was added to mark a
    thread that called async_schedule().  Then the PF_USED_ASYNC flag was
    used to determine whether or not async_synchronize_full() needs to be
    invoked.  This works when modprobe thread is calling async_schedule(),
    but it does not work if module dispatches init code to a worker thread
    which then calls async_schedule().
    
    For example, PCI driver probing is invoked from a worker thread based on
    a node where device is attached:
    
            if (cpu < nr_cpu_ids)
                    error = work_on_cpu(cpu, local_pci_probe, &ddi);
            else
                    error = local_pci_probe(&ddi);
    
    We end up in a situation where a worker thread gets the PF_USED_ASYNC
    flag set instead of the modprobe thread.  As a result,
    async_synchronize_full() is not invoked and modprobe completes without
    waiting for the async code to finish.
    
    The issue was discovered while loading the pm80xx driver:
    (scsi_mod.scan=async)
    
    modprobe pm80xx                      worker
    ...
      do_init_module()
      ...
        pci_call_probe()
          work_on_cpu(local_pci_probe)
                                         local_pci_probe()
                                           pm8001_pci_probe()
                                             scsi_scan_host()
                                               async_schedule()
                                               worker->flags |= PF_USED_ASYNC;
                                         ...
          < return from worker >
      ...
      if (current->flags & PF_USED_ASYNC) <--- false
            async_synchronize_full();
    
    Commit 21c3c5d28007 ("block: don't request module during elevator init")
    fixed the deadlock issue which the reverted commit 774a1221e862
    ("module, async: async_synchronize_full() on module init iff async is
    used") tried to fix.
    
    Since commit 0fdff3ec6d87 ("async, kmod: warn on synchronous
    request_module() from async workers") synchronous module loading from
    async is not allowed.
    
    Given that the original deadlock issue is fixed and it is no longer
    allowed to call synchronous request_module() from async we can remove
    PF_USED_ASYNC flag to make module init consistently invoke
    async_synchronize_full() unless async module probe is requested.
    
    Signed-off-by: Igor Pylypiv <ipylypiv@google.com>
    Reviewed-by: Changyuan Lyu <changyuanl@google.com>
    Reviewed-by: Luis Chamberlain <mcgrof@kernel.org>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5593f72d1922403c11749532e3a0aa4cf61414e9
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Tue Feb 1 14:54:21 2022 +0200

    nvme-rdma: fix possible use-after-free in transport error_recovery work
    
    [ Upstream commit b6bb1722f34bbdbabed27acdceaf585d300c5fd2 ]
    
    While nvme_rdma_submit_async_event_work is checking the ctrl and queue
    state before preparing the AER command and scheduling io_work, in order
    to fully prevent a race where this check is not reliable the error
    recovery work must flush async_event_work before continuing to destroy
    the admin queue after setting the ctrl state to RESETTING such that
    there is no race .submit_async_event and the error recovery handler
    itself changing the ctrl state.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a25e460fbb0340488d119fb2e28fe3f829b7417e
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Tue Feb 1 14:54:19 2022 +0200

    nvme: fix a possible use-after-free in controller reset during load
    
    [ Upstream commit 0fa0f99fc84e41057cbdd2efbfe91c6b2f47dd9d ]
    
    Unlike .queue_rq, in .submit_async_event drivers may not check the ctrl
    readiness for AER submission. This may lead to a use-after-free
    condition that was observed with nvme-tcp.
    
    The race condition may happen in the following scenario:
    1. driver executes its reset_ctrl_work
    2. -> nvme_stop_ctrl - flushes ctrl async_event_work
    3. ctrl sends AEN which is received by the host, which in turn
       schedules AEN handling
    4. teardown admin queue (which releases the queue socket)
    5. AEN processed, submits another AER, calling the driver to submit
    6. driver attempts to send the cmd
    ==> use-after-free
    
    In order to fix that, add ctrl state check to validate the ctrl
    is actually able to accept the AER submission.
    
    This addresses the above race in controller resets because the driver
    during teardown should:
    1. change ctrl state to RESETTING
    2. flush async_event_work (as well as other async work elements)
    
    So after 1,2, any other AER command will find the
    ctrl state to be RESETTING and bail out without submitting the AER.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1a41571f06e2b66229738bd0c92c1d57dd793e2
Author: Darrick J. Wong <djwong@kernel.org>
Date:   Sun Jan 30 08:53:16 2022 -0800

    quota: make dquot_quota_sync return errors from ->sync_fs
    
    [ Upstream commit dd5532a4994bfda0386eb2286ec00758cee08444 ]
    
    Strangely, dquot_quota_sync ignores the return code from the ->sync_fs
    call, which means that quotacalls like Q_SYNC never see the error.  This
    doesn't seem right, so fix that.
    
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5c33270b8b2c274eb8df7b92d166166102528c6
Author: Darrick J. Wong <djwong@kernel.org>
Date:   Sun Jan 30 08:53:16 2022 -0800

    vfs: make freeze_super abort when sync_filesystem returns error
    
    [ Upstream commit 2719c7160dcfaae1f73a1c0c210ad3281c19022e ]
    
    If we fail to synchronize the filesystem while preparing to freeze the
    fs, abort the freeze.
    
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3072e72814de56f3c674650a8af98233ddf78b19
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Fri Jan 28 12:47:15 2022 +0800

    ax25: improve the incomplete fix to avoid UAF and NPD bugs
    
    [ Upstream commit 4e0f718daf97d47cf7dec122da1be970f145c809 ]
    
    The previous commit 1ade48d0c27d ("ax25: NPD bug when detaching
    AX25 device") introduce lock_sock() into ax25_kill_by_device to
    prevent NPD bug. But the concurrency NPD or UAF bug will occur,
    when lock_sock() or release_sock() dereferences the ax25_cb->sock.
    
    The NULL pointer dereference bug can be shown as below:
    
    ax25_kill_by_device()        | ax25_release()
                                 |   ax25_destroy_socket()
                                 |     ax25_cb_del()
      ...                        |     ...
                                 |     ax25->sk=NULL;
      lock_sock(s->sk); //(1)    |
      s->ax25_dev = NULL;        |     ...
      release_sock(s->sk); //(2) |
      ...                        |
    
    The root cause is that the sock is set to null before dereference
    site (1) or (2). Therefore, this patch extracts the ax25_cb->sock
    in advance, and uses ax25_list_lock to protect it, which can synchronize
    with ax25_cb_del() and ensure the value of sock is not null before
    dereference sites.
    
    The concurrency UAF bug can be shown as below:
    
    ax25_kill_by_device()        | ax25_release()
                                 |   ax25_destroy_socket()
      ...                        |   ...
                                 |   sock_put(sk); //FREE
      lock_sock(s->sk); //(1)    |
      s->ax25_dev = NULL;        |   ...
      release_sock(s->sk); //(2) |
      ...                        |
    
    The root cause is that the sock is released before dereference
    site (1) or (2). Therefore, this patch uses sock_hold() to increase
    the refcount of sock and uses ax25_list_lock to protect it, which
    can synchronize with ax25_cb_del() in ax25_destroy_socket() and
    ensure the sock wil not be released before dereference sites.
    
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04bd141c4305a8738a39571927973e26d2d1a352
Author: Yang Xu <xuyang2018.jy@fujitsu.com>
Date:   Thu Jan 27 17:11:37 2022 +0800

    selftests/zram: Adapt the situation that /dev/zram0 is being used
    
    [ Upstream commit 01dabed20573804750af5c7bf8d1598a6bf7bf6e ]
    
    If zram-generator package is installed and works, then we can not remove
    zram module because zram swap is being used. This case needs a clean zram
    environment, change this test by using hot_add/hot_remove interface. So
    even zram device is being used, we still can add zram device and remove
    them in cleanup.
    
    The two interface was introduced since kernel commit 6566d1a32bf7("zram:
    add dynamic device add/remove functionality") in v4.2-rc1. If kernel
    supports these two interface, we use hot_add/hot_remove to slove this
    problem, if not, just check whether zram is being used or built in, then
    skip it on old kernel.
    
    Signed-off-by: Yang Xu <xuyang2018.jy@fujitsu.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec85569a92f17da30645e0e99f2a052196b85ca2
Author: Yang Xu <xuyang2018.jy@fujitsu.com>
Date:   Thu Jan 27 17:11:36 2022 +0800

    selftests/zram01.sh: Fix compression ratio calculation
    
    [ Upstream commit d18da7ec3719559d6e74937266d0416e6c7e0b31 ]
    
    zram01 uses `free -m` to measure zram memory usage. The results are no
    sense because they are polluted by all running processes on the system.
    
    We Should only calculate the free memory delta for the current process.
    So use the third field of /sys/block/zram<id>/mm_stat to measure memory
    usage instead. The file is available since kernel 4.1.
    
    orig_data_size(first): uncompressed size of data stored in this disk.
    compr_data_size(second): compressed size of data stored in this disk
    mem_used_total(third): the amount of memory allocated for this disk
    
    Also remove useless zram cleanup call in zram_fill_fs and so we don't
    need to cleanup zram twice if fails.
    
    Signed-off-by: Yang Xu <xuyang2018.jy@fujitsu.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2eed1b06f0abf00916ceb6ce61e4605928cec762
Author: Yang Xu <xuyang2018.jy@fujitsu.com>
Date:   Thu Jan 27 17:11:35 2022 +0800

    selftests/zram: Skip max_comp_streams interface on newer kernel
    
    [ Upstream commit fc4eb486a59d70bd35cf1209f0e68c2d8b979193 ]
    
    Since commit 43209ea2d17a ("zram: remove max_comp_streams internals"), zram
    has switched to per-cpu streams. Even kernel still keep this interface for
    some reasons, but writing to max_comp_stream doesn't take any effect. So
    skip it on newer kernel ie 4.7.
    
    The code that comparing kernel version is from xfstests testsuite ext4/053.
    
    Signed-off-by: Yang Xu <xuyang2018.jy@fujitsu.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6312f6a53fd3ea38125dcaca5e3c9aa7d8a60cf7
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Jan 25 13:14:23 2022 +0100

    net: ieee802154: at86rf230: Stop leaking skb's
    
    [ Upstream commit e5ce576d45bf72fd0e3dc37eff897bfcc488f6a9 ]
    
    Upon error the ieee802154_xmit_complete() helper is not called. Only
    ieee802154_wake_queue() is called manually. In the Tx case we then leak
    the skb structure.
    
    Free the skb structure upon error before returning when appropriate.
    
    As the 'is_tx = 0' cannot be moved in the complete handler because of a
    possible race between the delay in switching to STATE_RX_AACK_ON and a
    new interrupt, we introduce an intermediate 'was_tx' boolean just for
    this purpose.
    
    There is no Fixes tag applying here, many changes have been made on this
    area and the issue kind of always existed.
    
    Suggested-by: Alexander Aring <alex.aring@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20220125121426.848337-4-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 749dc9b5b3e60a00446961ea267f2ebc3a77300b
Author: Dāvis Mosāns <davispuh@gmail.com>
Date:   Sat Feb 5 20:48:23 2022 +0200

    btrfs: send: in case of IO error log it
    
    commit 2e7be9db125a0bf940c5d65eb5c40d8700f738b5 upstream.
    
    Currently if we get IO error while doing send then we abort without
    logging information about which file caused issue.  So log it to help
    with debugging.
    
    CC: stable@vger.kernel.org # 4.9+
    Signed-off-by: Dāvis Mosāns <davispuh@gmail.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a32bb343edc9c6dbce3b2679795bfb76b0bf5f60
Author: John David Anglin <dave.anglin@bell.net>
Date:   Thu Jan 27 22:33:41 2022 +0000

    parisc: Fix sglist access in ccio-dma.c
    
    commit d7da660cab47183cded65e11b64497d0f56c6edf upstream.
    
    This patch implements the same bug fix to ccio-dma.c as to sba_iommu.c.
    It ensures that only the allocated entries of the sglist are accessed.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 867e50231c7605547d9334904d70a181f39f2d9e
Author: John David Anglin <dave.anglin@bell.net>
Date:   Wed Jan 26 20:39:05 2022 +0000

    parisc: Fix data TLB miss in sba_unmap_sg
    
    commit b7d6f44a0fa716a82969725516dc0b16bc7cd514 upstream.
    
    Rolf Eike Beer reported the following bug:
    
    [1274934.746891] Bad Address (null pointer deref?): Code=15 (Data TLB miss fault) at addr 0000004140000018
    [1274934.746891] CPU: 3 PID: 5549 Comm: cmake Not tainted 5.15.4-gentoo-parisc64 #4
    [1274934.746891] Hardware name: 9000/785/C8000
    [1274934.746891]
    [1274934.746891]      YZrvWESTHLNXBCVMcbcbcbcbOGFRQPDI
    [1274934.746891] PSW: 00001000000001001111111000001110 Not tainted
    [1274934.746891] r00-03  000000ff0804fe0e 0000000040bc9bc0 00000000406760e4 0000004140000000
    [1274934.746891] r04-07  0000000040b693c0 0000004140000000 000000004a2b08b0 0000000000000001
    [1274934.746891] r08-11  0000000041f98810 0000000000000000 000000004a0a7000 0000000000000001
    [1274934.746891] r12-15  0000000040bddbc0 0000000040c0cbc0 0000000040bddbc0 0000000040bddbc0
    [1274934.746891] r16-19  0000000040bde3c0 0000000040bddbc0 0000000040bde3c0 0000000000000007
    [1274934.746891] r20-23  0000000000000006 000000004a368950 0000000000000000 0000000000000001
    [1274934.746891] r24-27  0000000000001fff 000000000800000e 000000004a1710f0 0000000040b693c0
    [1274934.746891] r28-31  0000000000000001 0000000041f988b0 0000000041f98840 000000004a171118
    [1274934.746891] sr00-03  00000000066e5800 0000000000000000 0000000000000000 00000000066e5800
    [1274934.746891] sr04-07  0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [1274934.746891]
    [1274934.746891] IASQ: 0000000000000000 0000000000000000 IAOQ: 00000000406760e8 00000000406760ec
    [1274934.746891]  IIR: 48780030    ISR: 0000000000000000  IOR: 0000004140000018
    [1274934.746891]  CPU:        3   CR30: 00000040e3a9c000 CR31: ffffffffffffffff
    [1274934.746891]  ORIG_R28: 0000000040acdd58
    [1274934.746891]  IAOQ[0]: sba_unmap_sg+0xb0/0x118
    [1274934.746891]  IAOQ[1]: sba_unmap_sg+0xb4/0x118
    [1274934.746891]  RP(r2): sba_unmap_sg+0xac/0x118
    [1274934.746891] Backtrace:
    [1274934.746891]  [<00000000402740cc>] dma_unmap_sg_attrs+0x6c/0x70
    [1274934.746891]  [<000000004074d6bc>] scsi_dma_unmap+0x54/0x60
    [1274934.746891]  [<00000000407a3488>] mptscsih_io_done+0x150/0xd70
    [1274934.746891]  [<0000000040798600>] mpt_interrupt+0x168/0xa68
    [1274934.746891]  [<0000000040255a48>] __handle_irq_event_percpu+0xc8/0x278
    [1274934.746891]  [<0000000040255c34>] handle_irq_event_percpu+0x3c/0xd8
    [1274934.746891]  [<000000004025ecb4>] handle_percpu_irq+0xb4/0xf0
    [1274934.746891]  [<00000000402548e0>] generic_handle_irq+0x50/0x70
    [1274934.746891]  [<000000004019a254>] call_on_stack+0x18/0x24
    [1274934.746891]
    [1274934.746891] Kernel panic - not syncing: Bad Address (null pointer deref?)
    
    The bug is caused by overrunning the sglist and incorrectly testing
    sg_dma_len(sglist) before nents. Normally this doesn't cause a crash,
    but in this case sglist crossed a page boundary. This occurs in the
    following code:
    
            while (sg_dma_len(sglist) && nents--) {
    
    The fix is simply to test nents first and move the decrement of nents
    into the loop.
    
    Reported-by: Rolf Eike Beer <eike-kernel@sf-tec.de>
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 592b1b5ad3ee6cce1381111cfd69c6dc868050a3
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 14 10:00:19 2022 -0800

    serial: parisc: GSC: fix build when IOSAPIC is not set
    
    commit 6e8793674bb0d1135ca0e5c9f7e16fecbf815926 upstream.
    
    There is a build error when using a kernel .config file from
    'kernel test robot' for a different build problem:
    
    hppa64-linux-ld: drivers/tty/serial/8250/8250_gsc.o: in function `.LC3':
    (.data.rel.ro+0x18): undefined reference to `iosapic_serial_irq'
    
    when:
      CONFIG_GSC=y
      CONFIG_SERIO_GSCPS2=y
      CONFIG_SERIAL_8250_GSC=y
      CONFIG_PCI is not set
        and hence PCI_LBA is not set.
      IOSAPIC depends on PCI_LBA, so IOSAPIC is not set/enabled.
    
    Make the use of iosapic_serial_irq() conditional to fix the build error.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: linux-parisc@vger.kernel.org
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-serial@vger.kernel.org
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: Johan Hovold <johan@kernel.org>
    Suggested-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1668781ed24da43498799aa4f65714a7de201930
Author: Jann Horn <jannh@google.com>
Date:   Wed Jan 26 14:14:52 2022 +0100

    net: usb: ax88179_178a: Fix out-of-bounds accesses in RX fixup
    
    commit 57bc3d3ae8c14df3ceb4e17d26ddf9eeab304581 upstream.
    
    ax88179_rx_fixup() contains several out-of-bounds accesses that can be
    triggered by a malicious (or defective) USB device, in particular:
    
     - The metadata array (hdr_off..hdr_off+2*pkt_cnt) can be out of bounds,
       causing OOB reads and (on big-endian systems) OOB endianness flips.
     - A packet can overlap the metadata array, causing a later OOB
       endianness flip to corrupt data used by a cloned SKB that has already
       been handed off into the network stack.
     - A packet SKB can be constructed whose tail is far beyond its end,
       causing out-of-bounds heap data to be considered part of the SKB's
       data.
    
    I have tested that this can be used by a malicious USB device to send a
    bogus ICMPv6 Echo Request and receive an ICMPv6 Echo Reply in response
    that contains random kernel heap data.
    It's probably also possible to get OOB writes from this on a
    little-endian system somehow - maybe by triggering skb_cow() via IP
    options processing -, but I haven't tested that.
    
    Fixes: e2ca90c276e1 ("ax88179_178a: ASIX AX88179_178A USB 3.0/2.0 to gigabit ethernet adapter driver")
    Cc: stable@kernel.org
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d7edade59493ea0af456131c570eb74a2f21893
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Feb 2 16:05:16 2022 -0700

    Makefile.extrawarn: Move -Wunaligned-access to W=1
    
    commit 1cf5f151d25fcca94689efd91afa0253621fb33a upstream.
    
    -Wunaligned-access is a new warning in clang that is default enabled for
    arm and arm64 under certain circumstances within the clang frontend (see
    LLVM commit below). On v5.17-rc2, an ARCH=arm allmodconfig build shows
    1284 total/70 unique instances of this warning (most of the instances
    are in header files), which is quite noisy.
    
    To keep a normal build green through CONFIG_WERROR, only show this
    warning with W=1, which will allow automated build systems to catch new
    instances of the warning so that the total number can be driven down to
    zero eventually since catching unaligned accesses at compile time would
    be generally useful.
    
    Cc: stable@vger.kernel.org
    Link: https://github.com/llvm/llvm-project/commit/35737df4dcd28534bd3090157c224c19b501278a
    Link: https://github.com/ClangBuiltLinux/linux/issues/1569
    Link: https://github.com/ClangBuiltLinux/linux/issues/1576
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    [nathan: Fix conflict due to lack of afe956c577b2d]
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78d50f1d3f4e89c20217ad392d29323edb42ff2a
Author: Yu Qiaowei <cerf.yu@rock-chips.com>
Date:   Wed Feb 23 14:19:21 2022 +0800

    video: rockchip: rga3: Fix parameter error of RGA3 blend mode
    
    layer binding:
        src => win0
        src1/dst => win1
        dst => wr
    
    Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
    Change-Id: I12709d578ce65b9a52d5275e873c660a5b1774d9

commit 8454d38b6a8c940e9221c41edee7f1dbaca40589
Author: Yu Qiaowei <cerf.yu@rock-chips.com>
Date:   Tue Feb 22 15:36:50 2022 +0800

    video: rockchip: rga3: Fix "unknown ioctl cmd" error
    
    Because of the difference in pointer size between 32/64 bit systems.
    
    Update driver version to 1.2.4
    
    Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
    Change-Id: If557cdeb69f1f811eed6cf44419cbb73679dada0

commit 19e2d244b061c32ec2002705a8cb381995bd2e5e
Author: Li Huang <putin.li@rock-chips.com>
Date:   Fri Jan 21 11:10:02 2022 +0800

    video: rockchip: rga3: use get_dma_buf to add ref for mpi dma_buf
    
    Signed-off-by: Li Huang <putin.li@rock-chips.com>
    Change-Id: Ie08cf1a296a166ed5b5bd273d485f6e56a6be022

commit c3f71e902961ef7f1efb34812d02d916b0b2d074
Author: Li Huang <putin.li@rock-chips.com>
Date:   Thu Jan 20 20:45:19 2022 +0800

    video: rockchip: rga3: fixup rga load
    
    Signed-off-by: Li Huang <putin.li@rock-chips.com>
    Change-Id: Id09a22819f4d118d1702b6eb7299279f0bd3fcc8

commit cb40170ed39b0d1e8154af27634ac51969470413
Author: Li Huang <putin.li@rock-chips.com>
Date:   Tue Jan 18 19:43:35 2022 +0800

    video: rockchip: rga3: support batch mode
    
    Signed-off-by: Li Huang <putin.li@rock-chips.com>
    Change-Id: Ib2f9a7815024d468ce1babb0e19789c458653329

commit d22ee3f726ece24e72564465fe6a22c190c364a3
Author: Liang Chen <cl@rock-chips.com>
Date:   Mon Feb 14 18:01:35 2022 +0800

    arm64: dts: rockchip: rk356x: adjust opp-table by pvtm
    
    Change-Id: I898578def36d38a673678183fdf96339f0d55f0d
    Signed-off-by: Liang Chen <cl@rock-chips.com>

commit 46e8168a45ac6da7eec0cf6185c40150a5b12fe6
Author: Tony Xie <tony.xie@rock-chips.com>
Date:   Wed Jan 12 14:21:15 2022 +0800

    arm64: dts: rockchip: rk3568: support boot amp cpu.
    
    Signed-off-by: Tony Xie <tony.xie@rock-chips.com>
    Change-Id: I6cd62516b77af8916c8193e4fb03d5de31745d9e

commit 2a1a61d4fc9b937cb11e2d4c33e90ef5a922dff9
Author: Tony Xie <tony.xie@rock-chips.com>
Date:   Tue Jan 11 15:57:48 2022 +0800

    soc: rockchip: amp: support amp cpu on/off.
    
    Signed-off-by: Tony Xie <tony.xie@rock-chips.com>
    Change-Id: I178ecf1ef41bbad4d3f8064695f44ecd635199cd

commit 6b245536ea1ccf0d04f6a5e3d36b2cf6b42b7047
Author: Tony Xie <tony.xie@rock-chips.com>
Date:   Tue Jan 11 15:30:33 2022 +0800

    firmware: rockchip_sip: support cpu on/off for amp os.
    
    Signed-off-by: Tony Xie <tony.xie@rock-chips.com>
    Change-Id: I723e20cb088063e8f9525b3d64e37090e0a10adf

commit 730fa9b08b686b9f580731ddcc643f7e925bd309
Author: Yu Qiaowei <cerf.yu@rock-chips.com>
Date:   Fri Feb 18 11:49:22 2022 +0800

    video: rockchip: rga3: Synchronization of user-space image formats
    
    Update driver version to 1.2.3
    
    Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
    Change-Id: I73ff1105bf52f67809be42fb1b45ca08451e17cf

commit b07c100c5c708b15d007ab356626b5b6734e5212
Author: Yu Qiaowei <cerf.yu@rock-chips.com>
Date:   Fri Feb 18 11:15:11 2022 +0800

    video: rockchip: rga3: Integration of format-related processing
    
    1. Wrapped some format-related functions, avoid using formatted
    index values.
    2. Fix incorrect format alignment requirements.
    
    Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
    Change-Id: I3f1493dc59f9b303f6e8f289f63b515ad56d3651

commit be0736b43a97cba6c5305916303ac742e909dfa4
Author: Yu Qiaowei <cerf.yu@rock-chips.com>
Date:   Thu Feb 17 16:10:03 2022 +0800

    video: rockchip: rga3: rga_mm supports physically continuous dma_buf
    
    When calling RGA2 with a physically contiguous dma_buf it will be called
    with the physical address.
    
    Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
    Change-Id: Iadb2d638b426c9be64a403b42513f8c7b58fb866

commit 4480a4647cc1329202195a8f2d730d8187f3da56
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Wed Feb 16 14:36:14 2022 +0800

    crypto: rockchip: cryptodev: optimized CIOCGSESSION return value
    
    When the CIOCGSESSION command creates an unsupported algorithm or mode,
     errno is set to -ENOEN.
    
    Add SM3/HMAC_SM3 support.
    
    Move CMAC/CBCMAC from cipher to hmac.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I4f5f274ffe47d2b81584c192991670ddb2e3def5

commit 8ccfd6aac0ea292bcc917af2541902cfa4dba1c8
Author: Su Yuefu <yuefu.su@rock-chips.com>
Date:   Wed Feb 16 16:32:15 2022 +0800

    media: i2c: add tp9950 driver
    
    Signed-off-by: Su Yuefu <yuefu.su@rock-chips.com>
    Change-Id: Ie3c9ebab575717d26beaded23314c9504828d500

commit f3578f1e7349acb718a37a0a56433171393ac87f
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Wed Feb 16 16:00:41 2022 +0800

    arm64: dts: rockchip: rk3566-eink: update gpu opp table
    
    improve touch interactive for rk3566-eink
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: Ia880a417d255bd7a5a0da70d09232f2245888b2d

commit 9159680c506782e5acd73a9db6deda8ce073cb1e
Author: Wyon bi <bivvy.bi@rock-chips.com>
Date:   Wed Jan 26 18:52:47 2022 +0800

    drm/bridge: analogix_dp: Fix YCbCr Coefficients
    
    Signed-off-by: Wyon bi <bivvy.bi@rock-chips.com>
    Change-Id: If560fd514a2c946abcca35a5bbc18edf051cea5b

commit eb1afc1397ac2deb4b3c2dad2baa8bbb1f625c57
Author: Wyon Bi <bivvy.bi@rock-chips.com>
Date:   Tue Feb 8 17:41:08 2022 +0800

    phy/rockchip: naneng-edp: Convert to use regmap
    
    Signed-off-by: Wyon Bi <bivvy.bi@rock-chips.com>
    Change-Id: I9a4a489b7df34a15d2b8e57cf9e2f4c97cc06118

commit a8fa434b924a32fa2fe2cd7bdab50c235e4d56c6
Author: Wyon Bi <bivvy.bi@rock-chips.com>
Date:   Mon Feb 14 16:51:59 2022 +0800

    soc: rockchip: grf: Add platform driver for edp phy grf
    
    We need to overwrite the default register value to put the PHY into
    low power mode in idle state.
    
    Signed-off-by: Wyon Bi <bivvy.bi@rock-chips.com>
    Change-Id: I4c788ce04880d6e25d4454e5594882d511b0bc97

commit e8bbfb9fb2b294f925cf262fe6b6dd2cd2ea8d1d
Author: Wyon Bi <bivvy.bi@rock-chips.com>
Date:   Tue Feb 8 17:42:05 2022 +0800

    arm64: dts: rockchip: rk3568: Add edp phy grf node
    
    Signed-off-by: Wyon Bi <bivvy.bi@rock-chips.com>
    Change-Id: I0ee522627cc057bd5b0be2c862e56f020dae57a2

commit 68418bd545ef2fe27d3cbb83ae9a470d9f95af52
Merge: aa8b0451d384 62a337a490a1
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Wed Feb 16 13:04:31 2022 +0100

    Merge 4.19.230 into android-4.19-stable
    
    Changes in 4.19.230
            integrity: check the return value of audit_log_start()
            ima: Remove ima_policy file before directory
            ima: Allow template selection with ima_template[_fmt]= after ima_hash=
            mmc: sdhci-of-esdhc: Check for error num after setting mask
            net: phy: marvell: Fix MDI-x polarity setting in 88e1118-compatible PHYs
            NFS: Fix initialisation of nfs_client cl_flags field
            NFSD: Clamp WRITE offsets
            NFSD: Fix offset type in I/O trace points
            NFSv4 only print the label when its queried
            nfs: nfs4clinet: check the return value of kstrdup()
            NFSv4.1: Fix uninitialised variable in devicenotify
            NFSv4 remove zero number of fs_locations entries error check
            NFSv4 expose nfs_parse_server_name function
            net: sched: Clarify error message when qdisc kind is unknown
            scsi: target: iscsi: Make sure the np under each tpg is unique
            usb: dwc2: gadget: don't try to disable ep0 in dwc2_hsotg_suspend
            net: stmmac: dwmac-sun8i: use return val of readl_poll_timeout()
            bpf: Add kconfig knob for disabling unpriv bpf by default
            ARM: dts: imx23-evk: Remove MX23_PAD_SSP1_DETECT from hog group
            net: bridge: fix stale eth hdr pointer in br_dev_xmit
            perf probe: Fix ppc64 'perf probe add events failed' case
            ARM: dts: meson: Fix the UART compatible strings
            staging: fbtft: Fix error path in fbtft_driver_module_init()
            ARM: dts: imx6qdl-udoo: Properly describe the SD card detect
            usb: f_fs: Fix use-after-free for epfile
            ixgbevf: Require large buffers for build_skb on 82599VF
            bonding: pair enable_port with slave_arr_updates
            ipmr,ip6mr: acquire RTNL before calling ip[6]mr_free_table() on failure path
            net: do not keep the dst cache when uncloning an skb dst and its metadata
            net: fix a memleak when uncloning an skb dst and its metadata
            veth: fix races around rq->rx_notify_masked
            tipc: rate limit warning for received illegal binding update
            net: amd-xgbe: disable interrupts during pci removal
            vt_ioctl: fix array_index_nospec in vt_setactivate
            vt_ioctl: add array_index_nospec to VT_ACTIVATE
            n_tty: wake up poll(POLLRDNORM) on receiving data
            usb: ulpi: Move of_node_put to ulpi_dev_release
            usb: ulpi: Call of_node_put correctly
            usb: dwc3: gadget: Prevent core from processing stale TRBs
            USB: gadget: validate interface OS descriptor requests
            usb: gadget: rndis: check size of RNDIS_MSG_SET command
            USB: serial: ftdi_sio: add support for Brainboxes US-159/235/320
            USB: serial: option: add ZTE MF286D modem
            USB: serial: ch341: add support for GW Instek USB2.0-Serial devices
            USB: serial: cp210x: add NCR Retail IO box id
            USB: serial: cp210x: add CPI Bulk Coin Recycler id
            seccomp: Invalidate seccomp mode to catch death failures
            hwmon: (dell-smm) Speed up setting of fan speed
            perf: Fix list corruption in perf_cgroup_switch()
            Linux 4.19.230
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I01d106ece6e54a9d688f57409c9b37aeb35c6707

commit 62a337a490a121949fc939a29f5ae1da94871b16
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 16 12:51:47 2022 +0100

    Linux 4.19.230
    
    Link: https://lore.kernel.org/r/20220214092448.285381753@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>                              =
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jeffrin Jose T <jeffrin@rajagiritech.edu.in>
    Tested-by: Slade Watkins <slade@sladewatkins.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30d9f3cbe47e1018ddc8069ac5b5c9e66fbdf727
Author: Song Liu <song@kernel.org>
Date:   Thu Feb 3 16:40:57 2022 -0800

    perf: Fix list corruption in perf_cgroup_switch()
    
    commit 5f4e5ce638e6a490b976ade4a40017b40abb2da0 upstream.
    
    There's list corruption on cgrp_cpuctx_list. This happens on the
    following path:
    
      perf_cgroup_switch: list_for_each_entry(cgrp_cpuctx_list)
          cpu_ctx_sched_in
             ctx_sched_in
                ctx_pinned_sched_in
                  merge_sched_in
                      perf_cgroup_event_disable: remove the event from the list
    
    Use list_for_each_entry_safe() to allow removing an entry during
    iteration.
    
    Fixes: 058fe1c0440e ("perf/core: Make cgroup switch visit only cpuctxs with cgroup events")
    Signed-off-by: Song Liu <song@kernel.org>
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20220204004057.2961252-1-song@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48fe82f8a7fa7590740d74978c97e3549883a6f6
Author: Armin Wolf <W_Armin@gmx.de>
Date:   Thu Oct 21 21:05:31 2021 +0200

    hwmon: (dell-smm) Speed up setting of fan speed
    
    commit c0d79987a0d82671bff374c07f2201f9bdf4aaa2 upstream.
    
    When setting the fan speed, i8k_set_fan() calls i8k_get_fan_status(),
    causing an unnecessary SMM call since from the two users of this
    function, only i8k_ioctl_unlocked() needs to know the new fan status
    while dell_smm_write() ignores the new fan status.
    Since SMM calls can be very slow while also making error reporting
    difficult for dell_smm_write(), remove the function call from
    i8k_set_fan() and call it separately in i8k_ioctl_unlocked().
    
    Tested on a Dell Inspiron 3505.
    
    Signed-off-by: Armin Wolf <W_Armin@gmx.de>
    Reviewed-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/20211021190531.17379-6-W_Armin@gmx.de
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 255264d81da6edaf4cd4fab836d1ef3ba09af6aa
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Feb 7 20:21:13 2022 -0800

    seccomp: Invalidate seccomp mode to catch death failures
    
    commit 495ac3069a6235bfdf516812a2a9b256671bbdf9 upstream.
    
    If seccomp tries to kill a process, it should never see that process
    again. To enforce this proactively, switch the mode to something
    impossible. If encountered: WARN, reject all syscalls, and attempt to
    kill the process again even harder.
    
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Will Drewry <wad@chromium.org>
    Fixes: 8112c4f140fa ("seccomp: remove 2-phase API")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdc3301b1cdb2daa8ede8fada67e60dc51ca78a6
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Feb 1 11:42:53 2022 +0100

    USB: serial: cp210x: add CPI Bulk Coin Recycler id
    
    commit 6ca0c6283340d819bf9c7d8e76be33c9fbd903ab upstream.
    
    Add the device id for the Crane Payment Innovation / Money Controls Bulk
    Coin Recycler:
    
            https://www.cranepi.com/en/system/files/Support/OM_BCR_EN_V1-04_0.pdf
    
    Reported-by: Scott Russell <Scott.Russell2@ncr.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb0d9a11a1220f1ce1bdcb03472427ee57c9ff43
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Feb 1 11:42:52 2022 +0100

    USB: serial: cp210x: add NCR Retail IO box id
    
    commit b50f8f09c622297d3cf46e332e17ba8adedec9af upstream.
    
    Add the device id for NCR's Retail IO box (CP2105) used in NCR FastLane
    SelfServ Checkout - R6C:
    
            https://www.ncr.com/product-catalog/ncr-fastlane-selfserv-checkout-r6c
    
    Reported-by: Scott Russell <Scott.Russell2@ncr.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bf5479f88ae4988ee3a12ca91ba8c6466630f41
Author: Stephan Brunner <s.brunner@stephan-brunner.net>
Date:   Sat Jan 8 13:00:20 2022 +0100

    USB: serial: ch341: add support for GW Instek USB2.0-Serial devices
    
    commit fa77ce201f7f2d823b07753575122d1ae5597fbe upstream.
    
    Programmable lab power supplies made by GW Instek, such as the
    GPP-2323, have a USB port exposing a serial port to control the device.
    
    Stringing the supplied Windows driver, references to the ch341 chip are
    found. Binding the existing ch341 driver to the VID/PID of the GPP-2323
    ("GW Instek USB2.0-Serial" as per the USB product name) works out of the
    box, communication and control is now possible.
    
    This patch should work with any GPP series power supply due to
    similarities in the product line.
    
    Signed-off-by: Stephan Brunner <s.brunner@stephan-brunner.net>
    Link: https://lore.kernel.org/r/4a47b864-0816-6f6a-efee-aa20e74bcdc6@stephan-brunner.net
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c6c5106229c19736d34b5c68e52c74371849deb
Author: Pawel Dembicki <paweldembicki@gmail.com>
Date:   Tue Jan 11 23:12:05 2022 +0100

    USB: serial: option: add ZTE MF286D modem
    
    commit d48384c7ed6c8fe4727eaa0f3048f62afd1cd715 upstream.
    
    Modem from ZTE MF286D is an Qualcomm MDM9250 based 3G/4G modem.
    
    T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  3 Spd=5000 MxCh= 0
    D:  Ver= 3.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS= 9 #Cfgs=  1
    P:  Vendor=19d2 ProdID=1485 Rev=52.87
    S:  Manufacturer=ZTE,Incorporated
    S:  Product=ZTE Technologies MSM
    S:  SerialNumber=MF286DZTED000000
    C:* #Ifs= 7 Cfg#= 1 Atr=80 MxPwr=896mA
    A:  FirstIf#= 0 IfCount= 2 Cls=02(comm.) Sub=06 Prot=00
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=02(comm.) Sub=02 Prot=ff Driver=rndis_host
    E:  Ad=82(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=rndis_host
    E:  Ad=81(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=83(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=87(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    E:  Ad=88(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=8e(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=0f(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 6 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=usbfs
    E:  Ad=05(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=89(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    
    Signed-off-by: Pawel Dembicki <paweldembicki@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7fbfa7195cfa5ccff255ab588fe30f749978f1a
Author: Cameron Williams <cang1@live.co.uk>
Date:   Tue Feb 1 10:12:51 2022 +0000

    USB: serial: ftdi_sio: add support for Brainboxes US-159/235/320
    
    commit fbb9b194e15a63c56c5664e76ccd0e85c6100cea upstream.
    
    This patch adds support for the Brainboxes US-159, US-235 and US-320
    USB-to-Serial devices.
    
    Signed-off-by: Cameron Williams <cang1@live.co.uk>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db9aaa3026298d652e98f777bc0f5756e2455dda
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 9 16:37:53 2022 +0100

    usb: gadget: rndis: check size of RNDIS_MSG_SET command
    
    commit 38ea1eac7d88072bbffb630e2b3db83ca649b826 upstream.
    
    Check the size of the RNDIS_MSG_SET command given to us before
    attempting to respond to an invalid message size.
    
    Reported-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Cc: stable@kernel.org
    Tested-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5eb8d19aee115d8fb354d1eff1b8df700467164
Author: Szymon Heidrich <szymon.heidrich@gmail.com>
Date:   Mon Jan 24 12:14:00 2022 +0100

    USB: gadget: validate interface OS descriptor requests
    
    commit 75e5b4849b81e19e9efe1654b30d7f3151c33c2c upstream.
    
    Stall the control endpoint in case provided index exceeds array size of
    MAX_CONFIG_INTERFACES or when the retrieved function pointer is null.
    
    Signed-off-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb3aac017e47efdc5c785061a0c55ea137195025
Author: Udipto Goswami <quic_ugoswami@quicinc.com>
Date:   Mon Feb 7 09:55:58 2022 +0530

    usb: dwc3: gadget: Prevent core from processing stale TRBs
    
    commit 117b4e96c7f362eb6459543883fc07f77662472c upstream.
    
    With CPU re-ordering on write instructions, there might
    be a chance that the HWO is set before the TRB is updated
    with the new mapped buffer address.
    And in the case where core is processing a list of TRBs
    it is possible that it fetched the TRBs when the HWO is set
    but before the buffer address is updated.
    Prevent this by adding a memory barrier before the HWO
    is updated to ensure that the core always process the
    updated TRBs.
    
    Fixes: f6bafc6a1c9d ("usb: dwc3: convert TRBs into bitshifts")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Pavankumar Kondeti <quic_pkondeti@quicinc.com>
    Signed-off-by: Udipto Goswami <quic_ugoswami@quicinc.com>
    Link: https://lore.kernel.org/r/1644207958-18287-1-git-send-email-quic_ugoswami@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7aa226d3b7706f39e89bf689d03878af75903bb
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Thu Jan 27 14:00:03 2022 -0500

    usb: ulpi: Call of_node_put correctly
    
    commit 0a907ee9d95e3ac35eb023d71f29eae0aaa52d1b upstream.
    
    of_node_put should always be called on device nodes gotten from
    of_get_*. Additionally, it should only be called after there are no
    remaining users. To address the first issue, call of_node_put if later
    steps in ulpi_register fail. To address the latter, call put_device if
    device_register fails, which will call ulpi_dev_release if necessary.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Link: https://lore.kernel.org/r/20220127190004.1446909-3-sean.anderson@seco.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4395107033a4c6397c669b91eda7c6e31d2ac21a
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Thu Jan 27 14:00:02 2022 -0500

    usb: ulpi: Move of_node_put to ulpi_dev_release
    
    commit 092f45b13e51666fe8ecbf2d6cd247aa7e6c1f74 upstream.
    
    Drivers are not unbound from the device when ulpi_unregister_interface
    is called. Move of_node-freeing code to ulpi_dev_release which is called
    only after all users are gone.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Link: https://lore.kernel.org/r/20220127190004.1446909-2-sean.anderson@seco.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 031ec2d7fabb5c01601490671666c55cf92e1b98
Author: TATSUKAWA KOSUKE (立川 江介) <tatsu-ab1@nec.com>
Date:   Wed Jan 26 23:35:02 2022 +0000

    n_tty: wake up poll(POLLRDNORM) on receiving data
    
    commit c816b2e65b0e86b95011418cad334f0524fc33b8 upstream.
    
    The poll man page says POLLRDNORM is equivalent to POLLIN when used as
    an event.
    $ man poll
    <snip>
                  POLLRDNORM
                         Equivalent to POLLIN.
    
    However, in n_tty driver, POLLRDNORM does not return until timeout even
    if there is terminal input, whereas POLLIN returns.
    
    The following test program works until kernel-3.17, but the test stops
    in poll() after commit 57087d515441 ("tty: Fix spurious poll() wakeups").
    
    [Steps to run test program]
      $ cc -o test-pollrdnorm test-pollrdnorm.c
      $ ./test-pollrdnorm
      foo          <-- Type in something from the terminal followed by [RET].
                       The string should be echoed back.
    
      ------------------------< test-pollrdnorm.c >------------------------
      #include <stdio.h>
      #include <errno.h>
      #include <poll.h>
      #include <unistd.h>
    
      void main(void)
      {
            int             n;
            unsigned char   buf[8];
            struct pollfd   fds[1] = {{ 0, POLLRDNORM, 0 }};
    
            n = poll(fds, 1, -1);
            if (n < 0)
                    perror("poll");
            n = read(0, buf, 8);
            if (n < 0)
                    perror("read");
            if (n > 0)
                    write(1, buf, n);
      }
      ------------------------------------------------------------------------
    
    The attached patch fixes this problem.  Many calls to
    wake_up_interruptible_poll() in the kernel source code already specify
    "POLLIN | POLLRDNORM".
    
    Fixes: 57087d515441 ("tty: Fix spurious poll() wakeups")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kosuke Tatsukawa <tatsu-ab1@nec.com>
    Link: https://lore.kernel.org/r/TYCPR01MB81901C0F932203D30E452B3EA5209@TYCPR01MB8190.jpnprd01.prod.outlook.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 482e76aa0d00a42d976f23f63825903fd102b93c
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Thu Jan 27 15:44:05 2022 +0100

    vt_ioctl: add array_index_nospec to VT_ACTIVATE
    
    commit 28cb138f559f8c1a1395f5564f86b8bbee83631b upstream.
    
    in vt_setactivate an almost identical code path has been patched
    with array_index_nospec. In the VT_ACTIVATE path the user input
    is from a system call argument instead of a usercopy.
    For consistency both code paths should have the same mitigations
    applied.
    
    Kasper Acknowledgements: Jakob Koschel, Brian Johannesmeyer, Kaveh
    Razavi, Herbert Bos, Cristiano Giuffrida from the VUSec group at VU
    Amsterdam.
    
    Co-developed-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Link: https://lore.kernel.org/r/20220127144406.3589293-2-jakobkoschel@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 170325aba4608bde3e7d21c9c19b7bc266ac0885
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Thu Jan 27 15:44:04 2022 +0100

    vt_ioctl: fix array_index_nospec in vt_setactivate
    
    commit 61cc70d9e8ef5b042d4ed87994d20100ec8896d9 upstream.
    
    array_index_nospec ensures that an out-of-bounds value is set to zero
    on the transient path. Decreasing the value by one afterwards causes
    a transient integer underflow. vsa.console should be decreased first
    and then sanitized with array_index_nospec.
    
    Kasper Acknowledgements: Jakob Koschel, Brian Johannesmeyer, Kaveh
    Razavi, Herbert Bos, Cristiano Giuffrida from the VUSec group at VU
    Amsterdam.
    
    Co-developed-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Link: https://lore.kernel.org/r/20220127144406.3589293-1-jakobkoschel@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecf0858f28ece12dede38e5ab334119e400a1017
Author: Raju Rangoju <Raju.Rangoju@amd.com>
Date:   Wed Feb 9 10:02:01 2022 +0530

    net: amd-xgbe: disable interrupts during pci removal
    
    [ Upstream commit 68c2d6af1f1e469544d6cbe9a601d96fb9c00e7f ]
    
    Hardware interrupts are enabled during the pci probe, however,
    they are not disabled during pci removal.
    
    Disable all hardware interrupts during pci removal to avoid any
    issues.
    
    Fixes: e75377404726 ("amd-xgbe: Update PCI support to use new IRQ functions")
    Suggested-by: Selwin Sebastian <Selwin.Sebastian@amd.com>
    Signed-off-by: Raju Rangoju <Raju.Rangoju@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b4ba5427c4ea716f73af01b0324209909822485
Author: Jon Maloy <jmaloy@redhat.com>
Date:   Tue Feb 8 22:22:37 2022 -0500

    tipc: rate limit warning for received illegal binding update
    
    [ Upstream commit c7223d687758462826a20e9735305d55bb874c70 ]
    
    It would be easy to craft a message containing an illegal binding table
    update operation. This is handled correctly by the code, but the
    corresponding warning printout is not rate limited as is should be.
    We fix this now.
    
    Fixes: b97bf3fd8f6a ("[TIPC] Initial merge")
    Signed-off-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f0ea3777590c16222d4251a49e31dd376ff5ac1
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Feb 8 15:28:22 2022 -0800

    veth: fix races around rq->rx_notify_masked
    
    [ Upstream commit 68468d8c4cd4222a4ca1f185ab5a1c14480d078c ]
    
    veth being NETIF_F_LLTX enabled, we need to be more careful
    whenever we read/write rq->rx_notify_masked.
    
    BUG: KCSAN: data-race in veth_xmit / veth_xmit
    
    write to 0xffff888133d9a9f8 of 1 bytes by task 23552 on cpu 0:
     __veth_xdp_flush drivers/net/veth.c:269 [inline]
     veth_xmit+0x307/0x470 drivers/net/veth.c:350
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     br_dev_queue_push_xmit+0x3ce/0x430 net/bridge/br_forward.c:53
     NF_HOOK include/linux/netfilter.h:307 [inline]
     br_forward_finish net/bridge/br_forward.c:66 [inline]
     NF_HOOK include/linux/netfilter.h:307 [inline]
     __br_forward+0x2e4/0x400 net/bridge/br_forward.c:115
     br_flood+0x521/0x5c0 net/bridge/br_forward.c:242
     br_dev_xmit+0x8b6/0x960
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     neigh_hh_output include/net/neighbour.h:525 [inline]
     neigh_output include/net/neighbour.h:539 [inline]
     ip_finish_output2+0x6f8/0xb70 net/ipv4/ip_output.c:228
     ip_finish_output+0xfb/0x240 net/ipv4/ip_output.c:316
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip_output+0xf3/0x1a0 net/ipv4/ip_output.c:430
     dst_output include/net/dst.h:451 [inline]
     ip_local_out net/ipv4/ip_output.c:126 [inline]
     ip_send_skb+0x6e/0xe0 net/ipv4/ip_output.c:1570
     udp_send_skb+0x641/0x880 net/ipv4/udp.c:967
     udp_sendmsg+0x12ea/0x14c0 net/ipv4/udp.c:1254
     inet_sendmsg+0x5f/0x80 net/ipv4/af_inet.c:819
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg net/socket.c:725 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2413
     ___sys_sendmsg net/socket.c:2467 [inline]
     __sys_sendmmsg+0x267/0x4c0 net/socket.c:2553
     __do_sys_sendmmsg net/socket.c:2582 [inline]
     __se_sys_sendmmsg net/socket.c:2579 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2579
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffff888133d9a9f8 of 1 bytes by task 23563 on cpu 1:
     __veth_xdp_flush drivers/net/veth.c:268 [inline]
     veth_xmit+0x2d6/0x470 drivers/net/veth.c:350
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     br_dev_queue_push_xmit+0x3ce/0x430 net/bridge/br_forward.c:53
     NF_HOOK include/linux/netfilter.h:307 [inline]
     br_forward_finish net/bridge/br_forward.c:66 [inline]
     NF_HOOK include/linux/netfilter.h:307 [inline]
     __br_forward+0x2e4/0x400 net/bridge/br_forward.c:115
     br_flood+0x521/0x5c0 net/bridge/br_forward.c:242
     br_dev_xmit+0x8b6/0x960
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     neigh_hh_output include/net/neighbour.h:525 [inline]
     neigh_output include/net/neighbour.h:539 [inline]
     ip_finish_output2+0x6f8/0xb70 net/ipv4/ip_output.c:228
     ip_finish_output+0xfb/0x240 net/ipv4/ip_output.c:316
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip_output+0xf3/0x1a0 net/ipv4/ip_output.c:430
     dst_output include/net/dst.h:451 [inline]
     ip_local_out net/ipv4/ip_output.c:126 [inline]
     ip_send_skb+0x6e/0xe0 net/ipv4/ip_output.c:1570
     udp_send_skb+0x641/0x880 net/ipv4/udp.c:967
     udp_sendmsg+0x12ea/0x14c0 net/ipv4/udp.c:1254
     inet_sendmsg+0x5f/0x80 net/ipv4/af_inet.c:819
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg net/socket.c:725 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2413
     ___sys_sendmsg net/socket.c:2467 [inline]
     __sys_sendmmsg+0x267/0x4c0 net/socket.c:2553
     __do_sys_sendmmsg net/socket.c:2582 [inline]
     __se_sys_sendmmsg net/socket.c:2579 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2579
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x00 -> 0x01
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 23563 Comm: syz-executor.5 Not tainted 5.17.0-rc2-syzkaller-00064-gc36c04c2e132 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 948d4f214fde ("veth: Add driver XDP")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0be943916d781df2b652793bb2d3ae4f9624c10a
Author: Antoine Tenart <atenart@kernel.org>
Date:   Mon Feb 7 18:13:19 2022 +0100

    net: fix a memleak when uncloning an skb dst and its metadata
    
    [ Upstream commit 9eeabdf17fa0ab75381045c867c370f4cc75a613 ]
    
    When uncloning an skb dst and its associated metadata, a new
    dst+metadata is allocated and later replaces the old one in the skb.
    This is helpful to have a non-shared dst+metadata attached to a specific
    skb.
    
    The issue is the uncloned dst+metadata is initialized with a refcount of
    1, which is increased to 2 before attaching it to the skb. When
    tun_dst_unclone returns, the dst+metadata is only referenced from a
    single place (the skb) while its refcount is 2. Its refcount will never
    drop to 0 (when the skb is consumed), leading to a memory leak.
    
    Fix this by removing the call to dst_hold in tun_dst_unclone, as the
    dst+metadata refcount is already 1.
    
    Fixes: fc4099f17240 ("openvswitch: Fix egress tunnel info.")
    Cc: Pravin B Shelar <pshelar@ovn.org>
    Reported-by: Vlad Buslov <vladbu@nvidia.com>
    Tested-by: Vlad Buslov <vladbu@nvidia.com>
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 040e92ea3d7d6f27c1b71d6502e35c54a0939cb7
Author: Antoine Tenart <atenart@kernel.org>
Date:   Mon Feb 7 18:13:18 2022 +0100

    net: do not keep the dst cache when uncloning an skb dst and its metadata
    
    [ Upstream commit cfc56f85e72f5b9c5c5be26dc2b16518d36a7868 ]
    
    When uncloning an skb dst and its associated metadata a new dst+metadata
    is allocated and the tunnel information from the old metadata is copied
    over there.
    
    The issue is the tunnel metadata has references to cached dst, which are
    copied along the way. When a dst+metadata refcount drops to 0 the
    metadata is freed including the cached dst entries. As they are also
    referenced in the initial dst+metadata, this ends up in UaFs.
    
    In practice the above did not happen because of another issue, the
    dst+metadata was never freed because its refcount never dropped to 0
    (this will be fixed in a subsequent patch).
    
    Fix this by initializing the dst cache after copying the tunnel
    information from the old metadata to also unshare the dst cache.
    
    Fixes: d71785ffc7e7 ("net: add dst_cache to ovs vxlan lwtunnel")
    Cc: Paolo Abeni <pabeni@redhat.com>
    Reported-by: Vlad Buslov <vladbu@nvidia.com>
    Tested-by: Vlad Buslov <vladbu@nvidia.com>
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12b6703e9546902c56b4b9048b893ad49d62bdd4
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Feb 7 21:34:51 2022 -0800

    ipmr,ip6mr: acquire RTNL before calling ip[6]mr_free_table() on failure path
    
    [ Upstream commit 5611a00697c8ecc5aad04392bea629e9d6a20463 ]
    
    ip[6]mr_free_table() can only be called under RTNL lock.
    
    RTNL: assertion failed at net/core/dev.c (10367)
    WARNING: CPU: 1 PID: 5890 at net/core/dev.c:10367 unregister_netdevice_many+0x1246/0x1850 net/core/dev.c:10367
    Modules linked in:
    CPU: 1 PID: 5890 Comm: syz-executor.2 Not tainted 5.16.0-syzkaller-11627-g422ee58dc0ef #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:unregister_netdevice_many+0x1246/0x1850 net/core/dev.c:10367
    Code: 0f 85 9b ee ff ff e8 69 07 4b fa ba 7f 28 00 00 48 c7 c6 00 90 ae 8a 48 c7 c7 40 90 ae 8a c6 05 6d b1 51 06 01 e8 8c 90 d8 01 <0f> 0b e9 70 ee ff ff e8 3e 07 4b fa 4c 89 e7 e8 86 2a 59 fa e9 ee
    RSP: 0018:ffffc900046ff6e0 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    RDX: ffff888050f51d00 RSI: ffffffff815fa008 RDI: fffff520008dfece
    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffffff815f3d6e R11: 0000000000000000 R12: 00000000fffffff4
    R13: dffffc0000000000 R14: ffffc900046ff750 R15: ffff88807b7dc000
    FS:  00007f4ab736e700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fee0b4f8990 CR3: 000000001e7d2000 CR4: 00000000003506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     mroute_clean_tables+0x244/0xb40 net/ipv6/ip6mr.c:1509
     ip6mr_free_table net/ipv6/ip6mr.c:389 [inline]
     ip6mr_rules_init net/ipv6/ip6mr.c:246 [inline]
     ip6mr_net_init net/ipv6/ip6mr.c:1306 [inline]
     ip6mr_net_init+0x3f0/0x4e0 net/ipv6/ip6mr.c:1298
     ops_init+0xaf/0x470 net/core/net_namespace.c:140
     setup_net+0x54f/0xbb0 net/core/net_namespace.c:331
     copy_net_ns+0x318/0x760 net/core/net_namespace.c:475
     create_new_namespaces+0x3f6/0xb20 kernel/nsproxy.c:110
     copy_namespaces+0x391/0x450 kernel/nsproxy.c:178
     copy_process+0x2e0c/0x7300 kernel/fork.c:2167
     kernel_clone+0xe7/0xab0 kernel/fork.c:2555
     __do_sys_clone+0xc8/0x110 kernel/fork.c:2672
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f4ab89f9059
    Code: Unable to access opcode bytes at RIP 0x7f4ab89f902f.
    RSP: 002b:00007f4ab736e118 EFLAGS: 00000206 ORIG_RAX: 0000000000000038
    RAX: ffffffffffffffda RBX: 00007f4ab8b0bf60 RCX: 00007f4ab89f9059
    RDX: 0000000020000280 RSI: 0000000020000270 RDI: 0000000040200000
    RBP: 00007f4ab8a5308d R08: 0000000020000300 R09: 0000000020000300
    R10: 00000000200002c0 R11: 0000000000000206 R12: 0000000000000000
    R13: 00007ffc3977cc1f R14: 00007f4ab736e300 R15: 0000000000022000
     </TASK>
    
    Fixes: f243e5a7859a ("ipmr,ip6mr: call ip6mr_free_table() on failure path")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Cong Wang <cong.wang@bytedance.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20220208053451.2885398-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c92b23d934f008aea3ec3239d951f6c4cc0c4422
Author: Mahesh Bandewar <maheshb@google.com>
Date:   Mon Feb 7 14:29:01 2022 -0800

    bonding: pair enable_port with slave_arr_updates
    
    [ Upstream commit 23de0d7b6f0e3f9a6283a882594c479949da1120 ]
    
    When 803.2ad mode enables a participating port, it should update
    the slave-array. I have observed that the member links are participating
    and are part of the active aggregator while the traffic is egressing via
    only one member link (in a case where two links are participating). Via
    kprobes I discovered that slave-arr has only one link added while
    the other participating link wasn't part of the slave-arr.
    
    I couldn't see what caused that situation but the simple code-walk
    through provided me hints that the enable_port wasn't always associated
    with the slave-array update.
    
    Fixes: ee6377147409 ("bonding: Simplify the xmit function for modes that use xmit_hash")
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Acked-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Link: https://lore.kernel.org/r/20220207222901.1795287-1-maheshb@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8e3067f400c53f800dca45d6314aaabd420c846
Author: Samuel Mendoza-Jonas <samjonas@amazon.com>
Date:   Thu Feb 3 14:49:16 2022 -0800

    ixgbevf: Require large buffers for build_skb on 82599VF
    
    [ Upstream commit fe68195daf34d5dddacd3f93dd3eafc4beca3a0e ]
    
    From 4.17 onwards the ixgbevf driver uses build_skb() to build an skb
    around new data in the page buffer shared with the ixgbe PF.
    This uses either a 2K or 3K buffer, and offsets the DMA mapping by
    NET_SKB_PAD + NET_IP_ALIGN. When using a smaller buffer RXDCTL is set to
    ensure the PF does not write a full 2K bytes into the buffer, which is
    actually 2K minus the offset.
    
    However on the 82599 virtual function, the RXDCTL mechanism is not
    available. The driver attempts to work around this by using the SET_LPE
    mailbox method to lower the maximm frame size, but the ixgbe PF driver
    ignores this in order to keep the PF and all VFs in sync[0].
    
    This means the PF will write up to the full 2K set in SRRCTL, causing it
    to write NET_SKB_PAD + NET_IP_ALIGN bytes past the end of the buffer.
    With 4K pages split into two buffers, this means it either writes
    NET_SKB_PAD + NET_IP_ALIGN bytes past the first buffer (and into the
    second), or NET_SKB_PAD + NET_IP_ALIGN bytes past the end of the DMA
    mapping.
    
    Avoid this by only enabling build_skb when using "large" buffers (3K).
    These are placed in each half of an order-1 page, preventing the PF from
    writing past the end of the mapping.
    
    [0]: Technically it only ever raises the max frame size, see
    ixgbe_set_vf_lpe() in ixgbe_sriov.c
    
    Fixes: f15c5ba5b6cd ("ixgbevf: add support for using order 1 pages to receive large frames")
    Signed-off-by: Samuel Mendoza-Jonas <samjonas@amazon.com>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfe5f6fd335d882bcc829a1c8a7d462a455c626e
Author: Udipto Goswami <quic_ugoswami@quicinc.com>
Date:   Thu Jan 27 09:39:55 2022 +0530

    usb: f_fs: Fix use-after-free for epfile
    
    [ Upstream commit ebe2b1add1055b903e2acd86b290a85297edc0b3 ]
    
    Consider a case where ffs_func_eps_disable is called from
    ffs_func_disable as part of composition switch and at the
    same time ffs_epfile_release get called from userspace.
    ffs_epfile_release will free up the read buffer and call
    ffs_data_closed which in turn destroys ffs->epfiles and
    mark it as NULL. While this was happening the driver has
    already initialized the local epfile in ffs_func_eps_disable
    which is now freed and waiting to acquire the spinlock. Once
    spinlock is acquired the driver proceeds with the stale value
    of epfile and tries to free the already freed read buffer
    causing use-after-free.
    
    Following is the illustration of the race:
    
          CPU1                                  CPU2
    
       ffs_func_eps_disable
       epfiles (local copy)
                                            ffs_epfile_release
                                            ffs_data_closed
                                            if (last file closed)
                                            ffs_data_reset
                                            ffs_data_clear
                                            ffs_epfiles_destroy
    spin_lock
    dereference epfiles
    
    Fix this races by taking epfiles local copy & assigning it under
    spinlock and if epfiles(local) is null then update it in ffs->epfiles
    then finally destroy it.
    Extending the scope further from the race, protecting the ep related
    structures, and concurrent accesses.
    
    Fixes: a9e6f83c2df1 ("usb: gadget: f_fs: stop sleeping in ffs_func_eps_disable")
    Co-developed-by: Udipto Goswami <quic_ugoswami@quicinc.com>
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Pratham Pratap <quic_ppratap@quicinc.com>
    Signed-off-by: Udipto Goswami <quic_ugoswami@quicinc.com>
    Link: https://lore.kernel.org/r/1643256595-10797-1-git-send-email-quic_ugoswami@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0062c75c69d7631330d6f8bfba0bc83057b4f65a
Author: Fabio Estevam <festevam@gmail.com>
Date:   Sun Dec 19 19:42:15 2021 -0300

    ARM: dts: imx6qdl-udoo: Properly describe the SD card detect
    
    [ Upstream commit 993d66140f8d1c1853a3b58b77b43b681eb64dee ]
    
    GPIO7_IO00 is used as SD card detect.
    
    Properly describe this in the devicetree.
    
    Fixes: 40cdaa542cf0 ("ARM: dts: imx6q-udoo: Add initial board support")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 099f1f1d4e5dce788688998888230bc7c2c92910
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue Jan 18 19:13:37 2022 +0100

    staging: fbtft: Fix error path in fbtft_driver_module_init()
    
    [ Upstream commit 426aca16e903b387a0b0001d62207a745c67cfd3 ]
    
    If registering the platform driver fails, the function must not return
    without undoing the spi driver registration first.
    
    Fixes: c296d5f9957c ("staging: fbtft: core support")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/20220118181338.207943-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54f556dc42ae302ca6d6024be7e6e52461f28963
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Mon Dec 27 19:00:24 2021 +0100

    ARM: dts: meson: Fix the UART compatible strings
    
    [ Upstream commit 5225e1b87432dcf0d0fc3440824b91d04c1d6cc1 ]
    
    The dt-bindings for the UART controller only allow the following values
    for Meson6 SoCs:
    - "amlogic,meson6-uart", "amlogic,meson-ao-uart"
    - "amlogic,meson6-uart"
    
    Use the correct fallback compatible string "amlogic,meson-ao-uart" for
    AO UART. Drop the "amlogic,meson-uart" compatible string from the EE
    domain UART controllers.
    
    Fixes: ec9b59162fd831 ("ARM: dts: meson6: use stable UART bindings")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20211227180026.4068352-2-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ae6c390899ab8b2a5e2faea1957e15e6a19492a
Author: Zechuan Chen <chenzechuan1@huawei.com>
Date:   Tue Dec 28 19:13:38 2021 +0800

    perf probe: Fix ppc64 'perf probe add events failed' case
    
    commit 4624f199327a704dd1069aca1c3cadb8f2a28c6f upstream.
    
    Because of commit bf794bf52a80c627 ("powerpc/kprobes: Fix kallsyms
    lookup across powerpc ABIv1 and ABIv2"), in ppc64 ABIv1, our perf
    command eliminates the need to use the prefix "." at the symbol name.
    
    But when the command "perf probe -a schedule" is executed on ppc64
    ABIv1, it obtains two symbol address information through /proc/kallsyms,
    for example:
    
      cat /proc/kallsyms | grep -w schedule
      c000000000657020 T .schedule
      c000000000d4fdb8 D schedule
    
    The symbol "D schedule" is not a function symbol, and perf will print:
    "p:probe/schedule _text+13958584"Failed to write event: Invalid argument
    
    Therefore, when searching symbols from map and adding probe point for
    them, a symbol type check is added. If the type of symbol is not a
    function, skip it.
    
    Fixes: bf794bf52a80c627 ("powerpc/kprobes: Fix kallsyms lookup across powerpc ABIv1 and ABIv2")
    Signed-off-by: Zechuan Chen <chenzechuan1@huawei.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jianlin Lv <Jianlin.Lv@arm.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Yang Jihong <yangjihong1@huawei.com>
    Link: https://lore.kernel.org/r/20211228111338.218602-1-chenzechuan1@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c13ec2c0f4858fe07a6a997ae47d5075ba320550
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Mon Feb 24 18:46:22 2020 +0200

    net: bridge: fix stale eth hdr pointer in br_dev_xmit
    
    commit 823d81b0fa2cd83a640734e74caee338b5d3c093 upstream.
    
    In br_dev_xmit() we perform vlan filtering in br_allowed_ingress() but
    if the packet has the vlan header inside (e.g. bridge with disabled
    tx-vlan-offload) then the vlan filtering code will use skb_vlan_untag()
    to extract the vid before filtering which in turn calls pskb_may_pull()
    and we may end up with a stale eth pointer. Moreover the cached eth header
    pointer will generally be wrong after that operation. Remove the eth header
    caching and just use eth_hdr() directly, the compiler does the right thing
    and calculates it only once so we don't lose anything.
    
    Fixes: 057658cb33fb ("bridge: suppress arp pkts on BR_NEIGH_SUPPRESS ports")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Eduardo Vela <Nava> <evn@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd5579d43baa42e57e6d90e1204f13123315d71f
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon Dec 27 13:14:02 2021 -0300

    ARM: dts: imx23-evk: Remove MX23_PAD_SSP1_DETECT from hog group
    
    commit 42c9b28e6862d16db82a56f5667cf4d1f6658cf6 upstream.
    
    Currently, SD card fails to mount due to the following pinctrl error:
    
    [   11.170000] imx23-pinctrl 80018000.pinctrl: pin SSP1_DETECT already requested by 80018000.pinctrl; cannot claim for 80010000.spi
    [   11.180000] imx23-pinctrl 80018000.pinctrl: pin-65 (80010000.spi) status -22
    [   11.190000] imx23-pinctrl 80018000.pinctrl: could not request pin 65 (SSP1_DETECT) from group mmc0-pins-fixup.0  on device 80018000.pinctrl
    [   11.200000] mxs-mmc 80010000.spi: Error applying setting, reverse things back
    
    Fix it by removing the MX23_PAD_SSP1_DETECT pin from the hog group as it
    is already been used by the mmc0-pins-fixup pinctrl group.
    
    With this change the rootfs can be mounted and the imx23-evk board can
    boot successfully.
    
    Cc: <stable@vger.kernel.org>
    Fixes: bc3875f1a61e ("ARM: dts: mxs: modify mx23/mx28 dts files to use pinctrl headers")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07e7f7cc619d15645e45d04b1c99550c6d292e9c
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Tue May 11 22:35:17 2021 +0200

    bpf: Add kconfig knob for disabling unpriv bpf by default
    
    commit 08389d888287c3823f80b0216766b71e17f0aba5 upstream.
    
    Add a kconfig knob which allows for unprivileged bpf to be disabled by default.
    If set, the knob sets /proc/sys/kernel/unprivileged_bpf_disabled to value of 2.
    
    This still allows a transition of 2 -> {0,1} through an admin. Similarly,
    this also still keeps 1 -> {1} behavior intact, so that once set to permanently
    disabled, it cannot be undone aside from a reboot.
    
    We've also added extra2 with max of 2 for the procfs handler, so that an admin
    still has a chance to toggle between 0 <-> 2.
    
    Either way, as an additional alternative, applications can make use of CAP_BPF
    that we added a while ago.
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/74ec548079189e4e4dffaeb42b8987bb3c852eee.1620765074.git.daniel@iogearbox.net
    [fllinden@amazon.com: backported to 4.19]
    Signed-off-by: Frank van der Linden <fllinden@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf9de6a36b01c25e0c03f92fc09af060ed813304
Author: Jisheng Zhang <jszhang@kernel.org>
Date:   Thu Jan 27 00:52:15 2022 +0800

    net: stmmac: dwmac-sun8i: use return val of readl_poll_timeout()
    
    [ Upstream commit 9e0db41e7a0b6f1271cbcfb16dbf5b8641b4e440 ]
    
    When readl_poll_timeout() timeout, we'd better directly use its return
    value.
    
    Before this patch:
    [    2.145528] dwmac-sun8i: probe of 4500000.ethernet failed with error -14
    
    After this patch:
    [    2.138520] dwmac-sun8i: probe of 4500000.ethernet failed with error -110
    
    Signed-off-by: Jisheng Zhang <jszhang@kernel.org>
    Acked-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 711cd738414029f9867d5d5e847b91b986c68a61
Author: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date:   Tue Dec 7 14:01:01 2021 +0100

    usb: dwc2: gadget: don't try to disable ep0 in dwc2_hsotg_suspend
    
    [ Upstream commit ac55d163855924aa5af9f1560977da8f346963c8 ]
    
    Calling dwc2_hsotg_ep_disable on ep0 (in/out) will lead to the following
    logs before returning -EINVAL:
    dwc2 49000000.usb-otg: dwc2_hsotg_ep_disable: called for ep0
    dwc2 49000000.usb-otg: dwc2_hsotg_ep_disable: called for ep0
    
    To avoid these two logs while suspending, start disabling the endpoint
    from the index 1, as done in dwc2_hsotg_udc_stop:
    
            /* all endpoints should be shutdown */
            for (ep = 1; ep < hsotg->num_of_eps; ep++) {
                    if (hsotg->eps_in[ep])
                            dwc2_hsotg_ep_disable_lock(&hsotg->eps_in[ep]->ep);
                    if (hsotg->eps_out[ep])
                            dwc2_hsotg_ep_disable_lock(&hsotg->eps_out[ep]->ep);
            }
    
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Link: https://lore.kernel.org/r/20211207130101.270314-1-amelie.delaunay@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ded80123b84253ecc6c6cfd1fbbbd99f51c984ec
Author: ZouMingzhe <mingzhe.zou@easystack.cn>
Date:   Tue Jan 11 13:47:42 2022 +0800

    scsi: target: iscsi: Make sure the np under each tpg is unique
    
    [ Upstream commit a861790afaa8b6369eee8a88c5d5d73f5799c0c6 ]
    
    iscsit_tpg_check_network_portal() has nested for_each loops and is supposed
    to return true when a match is found. However, the tpg loop will still
    continue after existing the tpg_np loop. If this tpg_np is not the last the
    match value will be changed.
    
    Break the outer loop after finding a match and make sure the np under each
    tpg is unique.
    
    Link: https://lore.kernel.org/r/20220111054742.19582-1-mingzhe.zou@easystack.cn
    Signed-off-by: ZouMingzhe <mingzhe.zou@easystack.cn>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f35b469de7344aa9184d78bff34ee48ad42bab1f
Author: Victor Nogueira <victor@mojatatu.com>
Date:   Tue Jan 18 14:19:09 2022 -0300

    net: sched: Clarify error message when qdisc kind is unknown
    
    [ Upstream commit 973bf8fdd12f0e70ea351c018e68edd377a836d1 ]
    
    When adding a tc rule with a qdisc kind that is not supported or not
    compiled into the kernel, the kernel emits the following error: "Error:
    Specified qdisc not found.". Found via tdc testing when ETS qdisc was not
    compiled in and it was not obvious right away what the message meant
    without looking at the kernel code.
    
    Change the error message to be more explicit and say the qdisc kind is
    unknown.
    
    Signed-off-by: Victor Nogueira <victor@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42dc3cf3174ec714732825638947e26923d9ea2a
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Dec 9 14:53:32 2021 -0500

    NFSv4 expose nfs_parse_server_name function
    
    [ Upstream commit f5b27cc6761e27ee6387a24df1a99ca77b360fea ]
    
    Make nfs_parse_server_name available outside of nfs4namespace.c.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 152f7db416c4bfcc8fc01e55cae60f63489580fa
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Dec 9 14:53:29 2021 -0500

    NFSv4 remove zero number of fs_locations entries error check
    
    [ Upstream commit 90e12a3191040bd3854d3e236c35921e4e92a044 ]
    
    Remove the check for the zero length fs_locations reply in the
    xdr decoding, and instead check for that in the migration code.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6b0f9177c43ff9ad0f1a6dd3639c383373911b7
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Jan 3 14:50:16 2022 -0500

    NFSv4.1: Fix uninitialised variable in devicenotify
    
    [ Upstream commit b05bf5c63b326ce1da84ef42498d8e0e292e694c ]
    
    When decode_devicenotify_args() exits with no entries, we need to
    ensure that the struct cb_devicenotifyargs is initialised to
    { 0, NULL } in order to avoid problems in
    nfs4_callback_devicenotify().
    
    Reported-by: <rtm@csail.mit.edu>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c9587f72ff4b502c2fd15eb3ccff388eae12d07
Author: Xiaoke Wang <xkernel.wang@foxmail.com>
Date:   Fri Dec 17 01:01:33 2021 +0800

    nfs: nfs4clinet: check the return value of kstrdup()
    
    [ Upstream commit fbd2057e5329d3502a27491190237b6be52a1cb6 ]
    
    kstrdup() returns NULL when some internal memory errors happen, it is
    better to check the return value of it so to catch the memory error in
    time.
    
    Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1789f59f1779c99d0756b40036c62a7519f53543
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Mon Nov 29 15:33:56 2021 -0500

    NFSv4 only print the label when its queried
    
    [ Upstream commit 2c52c8376db7160a1dd8a681c61c9258405ef143 ]
    
    When the bitmask of the attributes doesn't include the security label,
    don't bother printing it. Since the label might not be null terminated,
    adjust the printing format accordingly.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0999040f8077c9bcb00361d2f8c0e390abed343a
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Feb 4 17:05:24 2022 -0500

    NFSD: Fix offset type in I/O trace points
    
    commit 6a4d333d540041d244b2fca29b8417bfde20af81 upstream.
    
    NFSv3 and NFSv4 use u64 offset values on the wire. Record these values
    verbatim without the implicit type case to loff_t.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b19b51c39e2151936607913f91742a9ebaea8e6
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Tue Jan 25 16:36:22 2022 -0500

    NFSD: Clamp WRITE offsets
    
    commit 6260d9a56ab352b54891ec66ab0eced57d55abc6 upstream.
    
    Ensure that a client cannot specify a WRITE range that falls in a
    byte range outside what the kernel's internal types (such as loff_t,
    which is signed) can represent. The kiocb iterators, invoked in
    nfsd_vfs_write(), should properly limit write operations to within
    the underlying file system's s_maxbytes.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57e13bdd9634a48c0bdbf988858144350321c0bf
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Feb 2 18:52:01 2022 -0500

    NFS: Fix initialisation of nfs_client cl_flags field
    
    commit 468d126dab45718feeb728319be20bd869a5eaa7 upstream.
    
    For some long forgotten reason, the nfs_client cl_flags field is
    initialised in nfs_get_client() instead of being initialised at
    allocation time. This quirk was harmless until we moved the call to
    nfs_create_rpc_client().
    
    Fixes: dd99e9f98fbf ("NFSv4: Initialise connection to the server in nfs4_alloc_client()")
    Cc: stable@vger.kernel.org # 4.8.x
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 365bf4dafdb9594aaf40ba5b86f2bfe589b7296e
Author: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
Date:   Sun Feb 6 00:49:51 2022 +0300

    net: phy: marvell: Fix MDI-x polarity setting in 88e1118-compatible PHYs
    
    commit aec12836e7196e4d360b2cbf20cf7aa5139ad2ec upstream.
    
    When setting up autonegotiation for 88E1118R and compatible PHYs,
    a software reset of PHY is issued before setting up polarity.
    This is incorrect as changes of MDI Crossover Mode bits are
    disruptive to the normal operation and must be followed by a
    software reset to take effect. Let's patch m88e1118_config_aneg()
    to fix the issue mentioned before by invoking software reset
    of the PHY just after setting up MDI-x polarity.
    
    Fixes: 605f196efbf8 ("phy: Add support for Marvell 88E1118 PHY")
    Signed-off-by: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Suggested-by: Andrew Lunn <andrew@lunn.ch>
    Cc: stable@vger.kernel.org
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cd1178d2f2e695290b9b686dfed65dbf5ffac9f
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Jan 12 16:31:56 2022 +0800

    mmc: sdhci-of-esdhc: Check for error num after setting mask
    
    commit 40c67c291a93f8846c4a972c9ef1b7ba4544c8d0 upstream.
    
    Because of the possible failure of the dma_supported(), the
    dma_set_mask_and_coherent() may return error num.
    Therefore, it should be better to check it and return the error if
    fails.
    And since the sdhci_setup_host() has already checked the return value of
    the enable_dma, we need not check it in sdhci_resume_host() again.
    
    Fixes: 5552d7ad596c ("mmc: sdhci-of-esdhc: set proper dma mask for ls104x chips")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220112083156.1124782-1-jiasheng@iscas.ac.cn
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d9eb5b2ef21c496597f09355d9d6f5508731e98
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Mon Jan 31 18:11:39 2022 +0100

    ima: Allow template selection with ima_template[_fmt]= after ima_hash=
    
    commit bb8e52e4906f148c2faf6656b5106cf7233e9301 upstream.
    
    Commit c2426d2ad5027 ("ima: added support for new kernel cmdline parameter
    ima_template_fmt") introduced an additional check on the ima_template
    variable to avoid multiple template selection.
    
    Unfortunately, ima_template could be also set by the setup function of the
    ima_hash= parameter, when it calls ima_template_desc_current(). This causes
    attempts to choose a new template with ima_template= or with
    ima_template_fmt=, after ima_hash=, to be ignored.
    
    Achieve the goal of the commit mentioned with the new static variable
    template_setup_done, so that template selection requests after ima_hash=
    are not ignored.
    
    Finally, call ima_init_template_list(), if not already done, to initialize
    the list of templates before lookup_template_desc() is called.
    
    Reported-by: Guo Zihua <guozihua@huawei.com>
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Cc: stable@vger.kernel.org
    Fixes: c2426d2ad5027 ("ima: added support for new kernel cmdline parameter ima_template_fmt")
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c3beddb39ebe4411497629442f594133f29e0cd
Author: Stefan Berger <stefanb@linux.ibm.com>
Date:   Tue Jan 25 17:46:23 2022 -0500

    ima: Remove ima_policy file before directory
    
    commit f7333b9572d0559e00352a926c92f29f061b4569 upstream.
    
    The removal of ima_dir currently fails since ima_policy still exists, so
    remove the ima_policy file before removing the directory.
    
    Fixes: 4af4662fa4a9 ("integrity: IMA policy")
    Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
    Cc: <stable@vger.kernel.org>
    Acked-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9fa71bab4de31155eebb3074e29f49d6748fd1a
Author: Xiaoke Wang <xkernel.wang@foxmail.com>
Date:   Sat Jan 15 09:11:11 2022 +0800

    integrity: check the return value of audit_log_start()
    
    commit 83230351c523b04ff8a029a4bdf97d881ecb96fc upstream.
    
    audit_log_start() returns audit_buffer pointer on success or NULL on
    error, so it is better to check the return value of it.
    
    Fixes: 3323eec921ef ("integrity: IMA as an integrity service provider")
    Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2031ba0fc1b900688eba60e21df1d900cd354089
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Wed Dec 12 09:48:14 2018 +0100

    UPSTREAM: mfd: syscon: Add optional clock support
    
    Some system control registers need to be clocked, so the registers can
    be accessed. Add an optional clock and attach it to regmap.
    
    Change-Id: If23c2fc31b5d32b496b964a1c628b8be2bc2bc68
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Wyon Bi <bivvy.bi@rock-chips.com>
    (cherry picked from commit a00406b71c5f08f2bd8171bc43331f0726f9bdae)

commit f9dc5f6f2f93f21615dee8afd7ee11e2f20ddca5
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Mon Feb 14 15:33:57 2022 +0800

    arm64: dts: rockchip: update wacom touch i2c clock frequency for
    rk3566-rk817-eink-w103 board
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I24037b12a3a071ecccb618abd2b680a55dc79664

commit add2a4f115abf661abc5e975095be74b76d91b46
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Mon Feb 14 14:53:09 2022 +0800

    drm/rockchip: ebc_dev: release version v3.00
    
    1.improve handwrite rate
    2.fix auto mode refresh uncompletely last version
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I8416d03d01b15196c71df440c34212a57aea793c

commit 88f2f6b782568fe8ec52edab22f47de3e00c9c11
Author: Zorro Liu <lyx@rock-chips.com>
Date:   Thu Feb 10 20:15:32 2022 +0800

    drm/rockchip: ebc_dev: release version v2.28
    
    revert handwrite improve last version
    
    Signed-off-by: Zorro Liu <lyx@rock-chips.com>
    Change-Id: I99f0ef5a39943d14b0df41b21b5b65f2d361cca4

commit 82801bc14d4f86698aab10e4d4cec516f7d72d95
Author: Yu Qiaowei <cerf.yu@rock-chips.com>
Date:   Tue Feb 15 14:51:20 2022 +0800

    video: rockchip: rga3: Fix compile warning about 'make W=1 ...'
    
    Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
    Change-Id: Idc6656489051ff75abcca19acd362c52d5513226

commit 3558721d9591f36f349727c735cef8643f9493b1
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jan 3 20:16:12 2019 -0800

    UPSTREAM: crypto: ofb - fix handling partial blocks and make thread-safe
    
    Fix multiple bugs in the OFB implementation:
    
    1. It stored the per-request state 'cnt' in the tfm context, which can be
       used by multiple threads concurrently (e.g. via AF_ALG).
    2. It didn't support messages not a multiple of the block cipher size,
       despite being a stream cipher.
    3. It didn't set cra_blocksize to 1 to indicate it is a stream cipher.
    
    To fix these, set the 'chunksize' property to the cipher block size to
    guarantee that when walking through the scatterlist, a partial block can
    only occur at the end.  Then change the implementation to XOR a block at
    a time at first, then XOR the partial block at the end if needed.  This
    is the same way CTR and CFB are implemented.  As a bonus, this also
    improves performance in most cases over the current approach.
    
    Fixes: e497c51896b3 ("crypto: ofb - add output feedback mode")
    Cc: <stable@vger.kernel.org> # v4.20+
    Cc: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit b3e3e2db7de4a1ffe8845876c3520b866cd48de1)
    
    Change-Id: I5b9174ef596f72cb295d931217d6132f8c9ec820
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>

commit 66b7c56bf4594c15b9ee05f0a53e135dd722d062
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu Sep 20 14:18:39 2018 +0100

    UPSTREAM: crypto: ofb - add output feedback mode
    
    Add a generic version of output feedback mode. We already have support of
    several hardware based transformations of this mode and the needed test
    vectors but we somehow missed adding a generic software one. Fix this now.
    
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit e497c51896b3babfb14a36e497fd36a15f56cfa4)
    
    Change-Id: Iffac55d5830ee1c0df5acffd82fbd01d6dcafa31
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>

commit f6bbf076bb88daeb4a89606001f295b2f532fa93
Author: Zheng Yang <zhengyang@rock-chips.com>
Date:   Fri Feb 11 18:23:58 2022 +0800

    drm/bridge: synopsys: dw-hdmi: fixed an error in setting the avi quantization range
    
    According CEA-861 and HDMI2.0 spec, if EDID indicate the sink
    support hdmi2.0 or support quantization range, setting the avi
    quantization range to non-zero value.
    
    Change-Id: I866d2e5c3c8e1e3eb73b7a8ebddd5a86aa477e63
    Signed-off-by: Zheng Yang <zhengyang@rock-chips.com>

commit 73159fe2be95fda9a18cec225a3d3cebe315f761
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Thu Feb 10 10:58:20 2022 +0800

    crypto: rockchip: v2: modify the length limit under user_ptr
    
    When using user buffer, hardware crypto is used regardless of
     whether the data length is greater than 32K.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I3228910def265765e772da1ab4eda3b54d9927cb

commit 851a745238a1a12f4e30704c98a1001264fdd999
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Thu Jan 27 19:33:52 2022 +0800

    crypto: rockchip: v2: modify the length limit under dma_fd
    
    When using DMA_fd, hardware crypto is used regardless of
     whether the data length is greater than 32K.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ifcc78bca17beb99ae7eae73f3def6ebf55f5cf1b

commit 3999666d093fad11b0e7c5888629125cb575e5e7
Author: Li Huang <putin.li@rock-chips.com>
Date:   Wed Jan 26 15:28:33 2022 +0800

    arm64: rockchip_defconfig: Enable CONFIG_ROCKCHIP_MULTI_RGA
    
    Signed-off-by: Li Huang <putin.li@rock-chips.com>
    Change-Id: I95fbef30eb87fc69379cfce7feb976bfc261ab8c

commit 9f95b5fc62bf526b03fc5cb2b2f6ffb50b6e0575
Author: Li Huang <putin.li@rock-chips.com>
Date:   Tue Jan 25 15:19:16 2022 +0800

    video: rockchip: rga3: Init multi rga
    
    Signed-off-by: Li Huang <putin.li@rock-chips.com>
    Change-Id: Ib19d2d141e6b0eefa9d67b062e564559f58fb0b4

commit aa8b0451d384f58cda8ce78ddc089acaec500140
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Thu Dec 9 10:25:43 2021 -0800

    FROMGIT: f2fs: avoid EINVAL by SBI_NEED_FSCK when pinning a file
    
    Android OTA failed due to SBI_NEED_FSCK flag when pinning the file. Let's avoid
    it since we can do in-place-updates.
    
    Bug: 210593661
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    (cherry picked from commit 70da2736a4138b86a12873d33fefbb495e22e6f8
     git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs.git dev)
    Signed-off-by: Huang Jianan <huangjianan@oppo.com>
    Change-Id: I3fd33c984417c10b38e23de6cec017b03d588945
    Signed-off-by: David Anderson <dvander@google.com>

commit 80eac8dcf1ec423088bbe4cd548841ed56bae5c8
Author: Jianwei Fan <jianwei.fan@rock-chips.com>
Date:   Fri Feb 11 19:06:13 2022 +0800

    media: i2c: gc0312: fix flip and mirror register
    
    Signed-off-by: Jianwei Fan <jianwei.fan@rock-chips.com>
    Change-Id: Ibc7ebf2de267022497808f61fb5719797ba3b789

commit dbcf546e1c69ea1f84276fca488a48aa851c9243
Author: Kalesh Singh <kaleshsingh@google.com>
Date:   Fri Feb 11 09:36:26 2022 -0800

    Revert "tracefs: Have tracefs directories not set OTH permission bits by default"
    
    This reverts commit e2c27194fcd9f9703d927aeea104ec304bcf0ae3.
    
    This change breaks Android userspace tools (tracepoint bpf programs,
    simpleperf, atrace, perfetto, ...) that assume access to tracefs.
    
    On Android T and S (QPR2) this is fixed by adding a gid mount option
    in userspace, for devices with older kernels the permission change
    needs to be reverted.
    
    Bug: 217150407
    Bug: 216676030
    Signed-off-by: Kalesh Singh <kaleshsingh@google.com>
    Change-Id: I53a63c42b4cf1133a6a2fc1674380ffd8f331392

commit d5b3ac71466b786306c05d75a89af7f7554cb4d2
Author: Alistair Delva <adelva@google.com>
Date:   Thu Feb 10 11:20:10 2022 -0800

    ANDROID: GKI: Enable CONFIG_SERIAL_8250_RUNTIME_UARTS=0
    
    8250_core registers 4 ISA uart ports by default, which can cause
    problems on some devices which don't have them. This change doesn't
    break earlycon=uart8250, but it will cause the 8250_of and 8250_pci sub
    drivers to be unable to register ports. Boards that really need the full
    8250 driver to take over from earlycon can use the "8250.nr_uarts=X"
    kernel command line option to restore the ports allocation.
    
    Bug: 216312411
    Signed-off-by: Alistair Delva <adelva@google.com>
    Change-Id: I04715394b32bd98544657101de4537df34554ea9
    [Lee: Fixed merge conflict]
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

commit 7d4f5f22b7813ff77655e39222b483b94584103e
Merge: 1b16e1dbe078 6b09c9f0e648
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Fri Feb 11 09:04:17 2022 +0100

    Merge 4.19.229 into android-4.19-stable
    
    Changes in 4.19.229
            cgroup-v1: Require capabilities to set release_agent
            moxart: fix potential use-after-free on remove path
            tipc: improve size validations for received domain records
            Linux 4.19.229
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I425e37c9c77cc1ba3ba312b858f2e19dee2f3ae9

commit 6b09c9f0e648f3b91449afb6a308488f3af414c1
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Feb 11 08:44:59 2022 +0100

    Linux 4.19.229
    
    Link: https://lore.kernel.org/r/20220209191248.596319706@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jeffrin Jose T <jeffrin@rajagiritech.edu.in>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1af11edd08dd8376f7a84487cbb0ea8203e3a1d
Author: Jon Maloy <jmaloy@redhat.com>
Date:   Sat Feb 5 14:11:18 2022 -0500

    tipc: improve size validations for received domain records
    
    commit 9aa422ad326634b76309e8ff342c246800621216 upstream.
    
    The function tipc_mon_rcv() allows a node to receive and process
    domain_record structs from peer nodes to track their views of the
    network topology.
    
    This patch verifies that the number of members in a received domain
    record does not exceed the limit defined by MAX_MON_DOMAIN, something
    that may otherwise lead to a stack overflow.
    
    tipc_mon_rcv() is called from the function tipc_link_proto_rcv(), where
    we are reading a 32 bit message data length field into a uint16.  To
    avert any risk of bit overflow, we add an extra sanity check for this in
    that function.  We cannot see that happen with the current code, but
    future designers being unaware of this risk, may introduce it by
    allowing delivery of very large (> 64k) sk buffers from the bearer
    layer.  This potential problem was identified by Eric Dumazet.
    
    This fixes CVE-2022-0435
    
    Reported-by: Samuel Page <samuel.page@appgate.com>
    Reported-by: Eric Dumazet <edumazet@google.com>
    Fixes: 35c55c9877f8 ("tipc: add neighbor monitoring framework")
    Signed-off-by: Jon Maloy <jmaloy@redhat.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Reviewed-by: Samuel Page <samuel.page@appgate.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c25d5ff1856b91bd4365e813f566cb59aaa9552
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 27 08:16:38 2022 +0100

    moxart: fix potential use-after-free on remove path
    
    commit bd2db32e7c3e35bd4d9b8bbff689434a50893546 upstream.
    
    It was reported that the mmc host structure could be accessed after it
    was freed in moxart_remove(), so fix this by saving the base register of
    the device and using it instead of the pointer dereference.
    
    Cc: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Cc: Xin Xiong <xiongx18@fudan.edu.cn>
    Cc: Xin Tan <tanxin.ctf@gmail.com>
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: Yang Li <yang.lee@linux.alibaba.com>
    Cc: linux-mmc@vger.kernel.org
    Cc: stable <stable@vger.kernel.org>
    Reported-by: whitehat002 <hackyzh002@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20220127071638.4057899-1-gregkh@linuxfoundation.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 939f8b491887c27585933ea7dc5ad4123de58ff3
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Thu Jan 20 11:04:01 2022 -0600

    cgroup-v1: Require capabilities to set release_agent
    
    commit 24f6008564183aa120d07c03d9289519c2fe02af upstream.
    
    The cgroup release_agent is called with call_usermodehelper.  The function
    call_usermodehelper starts the release_agent with a full set fo capabilities.
    Therefore require capabilities when setting the release_agaent.
    
    Reported-by: Tabitha Sable <tabitha.c.sable@gmail.com>
    Tested-by: Tabitha Sable <tabitha.c.sable@gmail.com>
    Fixes: 81a6a5cdd2c5 ("Task Control Groups: automatic userspace notification of idle cgroups")
    Cc: stable@vger.kernel.org # v2.6.24+
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [mkoutny: Adjust for pre-fs_context, duplicate mount/remount check, drop log messages.]
    Acked-by: Michal Koutný <mkoutny@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80152a3dcdab85828b3dc24c8c109e3e36561e92
Author: Zefa Chen <zefa.chen@rock-chips.com>
Date:   Mon Jan 24 09:21:58 2022 +0800

    include: rk-camera-module: add control for sensor adapter driver
    
    Signed-off-by: Zefa Chen <zefa.chen@rock-chips.com>
    Change-Id: I2d434a4b608bf6e6168237280e75c933fc192df3

commit 1b16e1dbe07886d421cc3ae353def104d7d94b85
Merge: 69be2ccce366 940b10658059
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Wed Feb 9 08:26:20 2022 +0100

    Merge 4.19.228 into android-4.19-stable
    
    Changes in 4.19.228
            Bluetooth: refactor malicious adv data check
            s390/hypfs: include z/VM guests with access control group set
            scsi: zfcp: Fix failed recovery on gone remote port with non-NPIV FCP devices
            udf: Restore i_lenAlloc when inode expansion fails
            udf: Fix NULL ptr deref when converting from inline format
            PM: wakeup: simplify the output logic of pm_show_wakelocks()
            drm/etnaviv: relax submit size limits
            netfilter: nft_payload: do not update layer 4 checksum when mangling fragments
            serial: 8250: of: Fix mapped region size when using reg-offset property
            serial: stm32: fix software flow control transfer
            tty: n_gsm: fix SW flow control encoding/handling
            tty: Add support for Brainboxes UC cards.
            usb-storage: Add unusual-devs entry for VL817 USB-SATA bridge
            usb: common: ulpi: Fix crash in ulpi_match()
            usb: gadget: f_sourcesink: Fix isoc transfer for USB_SPEED_SUPER_PLUS
            USB: core: Fix hang in usb_kill_urb by adding memory barriers
            usb: typec: tcpm: Do not disconnect while receiving VBUS off
            net: sfp: ignore disabled SFP node
            powerpc/32: Fix boot failure with GCC latent entropy plugin
            i40e: Increase delay to 1 s after global EMP reset
            i40e: Fix issue when maximum queues is exceeded
            i40e: Fix queues reservation for XDP
            i40e: fix unsigned stat widths
            rpmsg: char: Fix race between the release of rpmsg_ctrldev and cdev
            rpmsg: char: Fix race between the release of rpmsg_eptdev and cdev
            scsi: bnx2fc: Flush destroy_work queue before calling bnx2fc_interface_put()
            ipv6_tunnel: Rate limit warning messages
            net: fix information leakage in /proc/net/ptype
            ping: fix the sk_bound_dev_if match in ping_lookup
            ipv4: avoid using shared IP generator for connected sockets
            hwmon: (lm90) Reduce maximum conversion rate for G781
            NFSv4: Handle case where the lookup of a directory fails
            NFSv4: nfs_atomic_open() can race when looking up a non-regular file
            net-procfs: show net devices bound packet types
            drm/msm: Fix wrong size calculation
            drm/msm/dsi: invalid parameter check in msm_dsi_phy_enable
            ipv6: annotate accesses to fn->fn_sernum
            NFS: Ensure the server has an up to date ctime before hardlinking
            NFS: Ensure the server has an up to date ctime before renaming
            phylib: fix potential use-after-free
            ibmvnic: init ->running_cap_crqs early
            ibmvnic: don't spin in tasklet
            yam: fix a memory leak in yam_siocdevprivate()
            ipv4: raw: lock the socket in raw_bind()
            ipv4: tcp: send zero IPID in SYNACK messages
            netfilter: nat: remove l4 protocol port rovers
            netfilter: nat: limit port clash resolution attempts
            tcp: fix possible socket leaks in internal pacing mode
            ipheth: fix EOVERFLOW in ipheth_rcvbulk_callback
            net: amd-xgbe: ensure to reset the tx_timer_active flag
            net: amd-xgbe: Fix skb data length underflow
            rtnetlink: make sure to refresh master_dev/m_ops in __rtnl_newlink()
            af_packet: fix data-race in packet_setsockopt / packet_setsockopt
            audit: improve audit queue handling when "audit=1" on cmdline
            ASoC: ops: Reject out of bounds values in snd_soc_put_volsw()
            ASoC: ops: Reject out of bounds values in snd_soc_put_volsw_sx()
            ASoC: ops: Reject out of bounds values in snd_soc_put_xr_sx()
            ALSA: hda/realtek: Add missing fixup-model entry for Gigabyte X570 ALC1220 quirks
            ALSA: hda/realtek: Fix silent output on Gigabyte X570S Aorus Master (newer chipset)
            ALSA: hda/realtek: Fix silent output on Gigabyte X570 Aorus Xtreme after reboot from Windows
            drm/nouveau: fix off by one in BIOS boundary checking
            block: bio-integrity: Advance seed correctly for larger interval sizes
            Revert "ASoC: mediatek: Check for error clk pointer"
            RDMA/mlx4: Don't continue event handler after memory allocation failure
            iommu/vt-d: Fix potential memory leak in intel_setup_irq_remapping()
            iommu/amd: Fix loop timeout issue in iommu_ga_log_enable()
            spi: bcm-qspi: check for valid cs before applying chip select
            spi: mediatek: Avoid NULL pointer crash in interrupt
            spi: meson-spicc: add IRQ check in meson_spicc_probe
            net: ieee802154: hwsim: Ensure proper channel selection at probe time
            net: ieee802154: mcr20a: Fix lifs/sifs periods
            net: ieee802154: ca8210: Stop leaking skb's
            net: ieee802154: Return meaningful error codes from the netlink helpers
            net: macsec: Verify that send_sci is on when setting Tx sci explicitly
            net: stmmac: ensure PTP time register reads are consistent
            drm/i915/overlay: Prevent divide by zero bugs in scaling
            ASoC: fsl: Add missing error handling in pcm030_fabric_probe
            ASoC: cpcap: Check for NULL pointer after calling of_get_child_by_name
            ASoC: max9759: fix underflow in speaker_gain_control_put()
            scsi: bnx2fc: Make bnx2fc_recv_frame() mp safe
            nfsd: nfsd4_setclientid_confirm mistakenly expires confirmed client.
            selftests: futex: Use variable MAKE instead of make
            rtc: cmos: Evaluate century appropriate
            EDAC/altera: Fix deferred probing
            EDAC/xgene: Fix deferred probing
            ext4: fix error handling in ext4_restore_inline_data()
            Linux 4.19.228
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I519bfcc5c5e4bba354c76e47dad34fba237809c0

commit 2991ef890fb9f3a8002c2bb3a817c9bc4ff35002
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Tue Feb 8 11:19:20 2022 +0800

    arm64: dts: rockchip: px30: support enable rng and crypto module at the same time
    
    Change-Id: If3c289629a265e678bdfdb57a084d67b241da4a8
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>

commit 67994eb6c151abeac32bea26dfe0225d98eae9b7
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Tue Jan 18 15:47:51 2022 +0800

    ARM: rockchip_linux_defconfig: enable CONFIG_CRYPTO_DEV_ROCKCHIP_DEV
    
    CONFIG_CRYPTO_DEV_ROCKCHIP_DEV is used to export kernel crypto interface
     into user space.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I06e49ba8c430eaa06315c4b549c939a73bdb7c4c

commit 8acd934a54a860b2c5ee392f7a3a737f4492bd0e
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Tue Jan 18 15:46:24 2022 +0800

    ARM: rockchip_defconfig: enable CONFIG_CRYPTO_DEV_ROCKCHIP_DEV
    
    CONFIG_CRYPTO_DEV_ROCKCHIP_DEV is used to export kernel crypto interface
     into user space.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I3d1069b83ba1d29304deccda0392ac5b27e6fd0f

commit 140fef0411821cf9fd4898d0691cbbbda73196ab
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Tue Jan 18 14:51:42 2022 +0800

    arm64: rockchip_linux_defconfig: enable CONFIG_CRYPTO_DEV_ROCKCHIP_DEV
    
    CONFIG_CRYPTO_DEV_ROCKCHIP_DEV is used to export kernel crypto interface
     into user space.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Id7f33508567fc3c55704a8325774c3f4c57c187f

commit ca8394bfa5923e425f630d20c6302adf5871cf15
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Tue Jan 11 10:00:46 2022 +0800

    arm64: rockchip_defconfig: enable CONFIG_CRYPTO_DEV_ROCKCHIP_DEV
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ieb4cdbda11c166467f86f1b442043a6c2fc60a35

commit 8ce924b9c42a1f8b3850e66033ed172ecc0b9f90
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Mon Jul 5 11:03:33 2021 +0800

    crypto: rockchip: change hardware crypto driver's priority
    
    Decrease RK_CRYPTO_PRIORITY from 300 to 0.Hardware driver
    will only invoked by user layer through the driver name.
    
    Change-Id: Ifeda13a2b9ce6fec6be60a2422b7507f91eedbb5
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>

commit 8f6c27d9fcb649456753347c609f7473a72718ac
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Mon Jan 3 16:44:48 2022 +0800

    crypto: rockchip: cryptodev_linux: add rk algo support
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I1d1f4214b29546eed2d1c29da8f375ec30a9bac3

commit 5f283800cafcd22c0fe958fde320d4b0cdbb440d
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Mon Dec 27 14:26:39 2021 +0800

    crypto: rockchip: cryptodev_linux: add rk_cryptodev_ioctl
    
    RIOCCRYPT_FD         : used to support dma_fd crypt.
    RIOCCRYPT_FD_MAP     : used to map dma_fd to phys_addr.
    RIOCCRYPT_FD_UNMAP   : used to unmap between dma_fd and phys_addr.
    RIOCCRYPT_CPU_ACCESS : for cpu access after dma_fd map
    RIOCCRYPT_DEV_ACCESS : for DEV access after dma_fd map
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ifa016c0009fde3d6909fb4e2313af341d808f793

commit 290e947ae02d62709e9835a1f490883b2044257b
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Fri Dec 24 17:41:22 2021 +0800

    crypto: rockchip: core: register crypto device into rk_cryptodev
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I29364e0b5dd82a227dc74567dc12565e3b97ad1c

commit bf0b14dceb70eab21de4d6918ea996233768dede
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Fri Dec 24 17:37:04 2021 +0800

    crypto: rockchip: cryptodev_linux: add rk_cryptodev.c
    
    Add register and unregister for crypto driver.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I406776514374bb460875ce8bd71a3031cd110587

commit c408b3ebfd1c61d581813e90e3c0978bad6aa62d
Author: Tao Huang <huangtao@rock-chips.com>
Date:   Thu Jan 13 18:46:21 2022 +0800

    crypto: rockchip: cryptodev_linux: rename global func name
    
    Add cryptodev_ prefix.
    
    Replacements are done by the following command:
    for i in kcaop_from_user kcaop_to_user adjust_sg_array release_user_pages sg_advance sg_copy; do sed -i "s/$i/cryptodev_$i/g" *.c *.h; done
    sed -i -e "s/ get_userbuf(/ cryptodev_get_userbuf(/g" -e "s/ __get_userbuf(/ __cryptodev_get_userbuf(/g" *.c *.h
    
    Signed-off-by: Tao Huang <huangtao@rock-chips.com>
    Change-Id: I7a3aee655427faffac6baad0e155bd76638ae040

commit f0fb767f43aef9c8ffdaab886d889305fc89b81a
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Wed Jun 20 11:08:21 2018 +0800

    crypto: rockchip: add cryptodev_linux driver
    
    provide crypto api to user space, you can open
    "/dev/crypto" to use it.
    
    cryptodev-linux source repository:
      https://github.com/cryptodev-linux/cryptodev-linux.git
    
    use commit 356a45e63bbce94b9cea73b8c1e20d0d8ec02f04
      Author: cristian-stoica <cristianmarian.stoica@nxp.com>
      Date:   Thu Nov 11 09:30:19 2021 +0200
    
    Change-Id: I91ca3660060f4adcf531e3efb8e720308bbd9f0e
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>

commit 540afe9573d784b1ff1d249cb768881ef095982d
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Wed Dec 22 19:15:12 2021 +0800

    crypto: rockchip: core: add scatterlist from dmafd support
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ie9eed5a785ad027a9c4dd134be904c3064754c09

commit 930e74044d5fde057248ce44939e0c5b7eb306af
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Mon Dec 27 15:23:14 2021 +0800

    crypto: rockchip: core: add CRYPTO_ALG_KERN_DRIVER_ONLY for cra_flag
    
    CRYPTO_ALG_KERN_DRIVER_ONLY means the algorithm provided is hardware
     accelerated but not available to userspace via instruction set or so.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Ia4265944a058aaaa4aeb7e6f1adc3bd1b8d4af5d

commit a4de57fdac59795f51d59ad32b83f4bc8061e4c7
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Wed Dec 1 10:29:16 2021 +0800

    crypto: rockchip: add DMA32 addressing range limits
    
    Crypto only supports DMA32 address addressing and behaves
     abnormally on more than 4G DDR.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I5b6b5c9eb5f00698d25e47a778f358380f4121eb

commit 7407c3a5eb25d32f25c32fdb422d950ad83b9abd
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Tue Nov 9 11:21:54 2021 +0800

    crypto: rockchip: v2: modify to pass crypto selftest case
    
    Compared to 4.19, there are many new algorithm boundary
     condition tests in 5.10. Drivers need to be fixed to
     pass these tests and increase driver robustness.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I597a478a5cfff5fa6c5389f45adec21acb63c68e

commit 661322d8644090b3d78068268792dcc0335e84cc
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Tue Nov 9 18:56:43 2021 +0800

    crypto: rockchip: add rk3588 support
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: If2f94bd8a57028a77df2f53f58bb117b4adc797a

commit b9eca4f12e552b653746c3fadffbd6b6c03ab028
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Tue Nov 9 11:00:47 2021 +0800

    crypto: rockchip: core: modify buffer addr_vir size to 8 PAGES
    
    Increase the buffer size from 1 to 8 pages. Data can be copied to
     the buffer for hardware crypto calculation when the scatter list
     does not meet the alignment requirement and data length less than
     8 pages.
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: Id5e36f4fa7fc042ea4d117071ae9fee16ebb3494

commit a548b4bb5b6a4c628b880af42ba3c3d8974f91a5
Author: Lin Jinhan <troy.lin@rock-chips.com>
Date:   Mon Aug 23 16:49:42 2021 +0800

    crypto: rockchip: v1&v2: switch ablkcipher to skcipher API
    
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
    Change-Id: I2936c26d1a9600ecbdb86ab2821a502371e9c2bc

commit 4bf4cd6b66f841c5644929ca73786962d5473754
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Thu Aug 15 12:00:43 2019 +0300

    UPSTREAM: crypto: des/3des_ede - add new helpers to verify keys
    
    The recently added helper routine to perform key strength validation
    of triple DES keys is slightly inadequate, since it comes in two versions,
    neither of which are highly useful for anything other than skciphers (and
    many drivers still use the older blkcipher interfaces).
    
    So let's add a new helper and, considering that this is a helper function
    that is only intended to be used by crypto code itself, put it in a new
    des.h header under crypto/internal.
    
    While at it, implement a similar helper for single DES, so that we can
    start replacing the pattern of calling des_ekey() into a temp buffer
    that occurs in many drivers in drivers/crypto.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    (cherry picked from commit 6ee41e5420d0afa8cddf09aa7384dabe570f8dc7)
    
    Change-Id: Ib150d48baceb4e9baf2c9b405e06a389e90aeef5
    Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>

commit 940b106580594c066d10bd195ef0f3d8a7e04c05
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Feb 8 18:23:19 2022 +0100

    Linux 4.19.228
    
    Link: https://lore.kernel.org/r/20220207103757.550973048@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9368c941a26098a199ee357f0370d49ac30b47f
Author: Ritesh Harjani <riteshh@linux.ibm.com>
Date:   Mon Jan 17 17:41:47 2022 +0530

    ext4: fix error handling in ext4_restore_inline_data()
    
    commit 897026aaa73eb2517dfea8d147f20ddb0b813044 upstream.
    
    While running "./check -I 200 generic/475" it sometimes gives below
    kernel BUG(). Ideally we should not call ext4_write_inline_data() if
    ext4_create_inline_data() has failed.
    
    <log snip>
    [73131.453234] kernel BUG at fs/ext4/inline.c:223!
    
    <code snip>
     212 static void ext4_write_inline_data(struct inode *inode, struct ext4_iloc *iloc,
     213                                    void *buffer, loff_t pos, unsigned int len)
     214 {
    <...>
     223         BUG_ON(!EXT4_I(inode)->i_inline_off);
     224         BUG_ON(pos + len > EXT4_I(inode)->i_inline_size);
    
    This patch handles the error and prints out a emergency msg saying potential
    data loss for the given inode (since we couldn't restore the original
    inline_data due to some previous error).
    
    [ 9571.070313] EXT4-fs (dm-0): error restoring inline_data for inode -- potential data loss! (inode 1703982, error -30)
    
    Reported-by: Eric Whitney <enwlinux@gmail.com>
    Signed-off-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/9f4cd7dfd54fa58ff27270881823d94ddf78dd07.1642416995.git.riteshh@linux.ibm.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c982bf490ddd9a747f5c9502ac74fd07ebfda1b
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Mon Jan 24 21:55:03 2022 +0300

    EDAC/xgene: Fix deferred probing
    
    commit dfd0dfb9a7cc04acf93435b440dd34c2ca7b4424 upstream.
    
    The driver overrides error codes returned by platform_get_irq_optional()
    to -EINVAL for some strange reason, so if it returns -EPROBE_DEFER, the
    driver will fail the probe permanently instead of the deferred probing.
    Switch to propagating the proper error codes to platform driver code
    upwards.
    
      [ bp: Massage commit message. ]
    
    Fixes: 0d4429301c4a ("EDAC: Add APM X-Gene SoC EDAC driver")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220124185503.6720-3-s.shtylyov@omp.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bcdaf4b9868321d849eb87d2a8917fab7eb4d12
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Mon Jan 24 21:55:02 2022 +0300

    EDAC/altera: Fix deferred probing
    
    commit 279eb8575fdaa92c314a54c0d583c65e26229107 upstream.
    
    The driver overrides the error codes returned by platform_get_irq() to
    -ENODEV for some strange reason, so if it returns -EPROBE_DEFER, the
    driver will fail the probe permanently instead of the deferred probing.
    Switch to propagating the proper error codes to platform driver code
    upwards.
    
      [ bp: Massage commit message. ]
    
    Fixes: 71bcada88b0f ("edac: altera: Add Altera SDRAM EDAC support")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220124185503.6720-2-s.shtylyov@omp.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bee94e261cd3f592867c770056a4ef453d831e0
Author: Riwen Lu <luriwen@kylinos.cn>
Date:   Thu Jan 6 16:46:09 2022 +0800

    rtc: cmos: Evaluate century appropriate
    
    commit ff164ae39b82ee483b24579c8e22a13a8ce5bd04 upstream.
    
    There's limiting the year to 2069. When setting the rtc year to 2070,
    reading it returns 1970. Evaluate century starting from 19 to count the
    correct year.
    
    $ sudo date -s 20700106
    Mon 06 Jan 2070 12:00:00 AM CST
    $ sudo hwclock -w
    $ sudo hwclock -r
    1970-01-06 12:00:49.604968+08:00
    
    Fixes: 2a4daadd4d3e5071 ("rtc: cmos: ignore bogus century byte")
    
    Signed-off-by: Riwen Lu <luriwen@kylinos.cn>
    Acked-by: Eric Wong <e@80x24.org>
    Reviewed-by: Mateusz Jończyk <mat.jonczyk@o2.pl>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20220106084609.1223688-1-luriwen@kylinos.cn
    Signed-off-by: Mateusz Jończyk <mat.jonczyk@o2.pl> # preparation for stable
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34fcb509dd6d938c08e3edce8cff60e3942bb5d9
Author: Muhammad Usama Anjum <usama.anjum@collabora.com>
Date:   Thu Jan 27 22:44:46 2022 +0500

    selftests: futex: Use variable MAKE instead of make
    
    commit b9199181a9ef8252e47e207be8c23e1f50662620 upstream.
    
    Recursive make commands should always use the variable MAKE, not the
    explicit command name ‘make’. This has benefits and removes the
    following warning when multiple jobs are used for the build:
    
    make[2]: warning: jobserver unavailable: using -j1.  Add '+' to parent make rule.
    
    Fixes: a8ba798bc8ec ("selftests: enable O and KBUILD_OUTPUT")
    Signed-off-by: Muhammad Usama Anjum <usama.anjum@collabora.com>
    Reviewed-by: André Almeida <andrealmeid@collabora.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62c346388c26f9cb22d319a02d97e584856bf7b8
Author: Dai Ngo <dai.ngo@oracle.com>
Date:   Wed Jan 26 13:13:38 2022 -0800

    nfsd: nfsd4_setclientid_confirm mistakenly expires confirmed client.
    
    commit ab451ea952fe9d7afefae55ddb28943a148247fe upstream.
    
    From RFC 7530 Section 16.34.5:
    
    o  The server has not recorded an unconfirmed { v, x, c, *, * } and
       has recorded a confirmed { v, x, c, *, s }.  If the principals of
       the record and of SETCLIENTID_CONFIRM do not match, the server
       returns NFS4ERR_CLID_INUSE without removing any relevant leased
       client state, and without changing recorded callback and
       callback_ident values for client { x }.
    
    The current code intends to do what the spec describes above but
    it forgot to set 'old' to NULL resulting to the confirmed client
    to be expired.
    
    Fixes: 2b63482185e6 ("nfsd: fix clid_inuse on mount with security change")
    Signed-off-by: Dai Ngo <dai.ngo@oracle.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Reviewed-by: Bruce Fields <bfields@fieldses.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 003bcee66a8f0e76157eb3af369c173151901d97
Author: John Meneghini <jmeneghi@redhat.com>
Date:   Mon Jan 24 09:51:10 2022 -0500

    scsi: bnx2fc: Make bnx2fc_recv_frame() mp safe
    
    commit 936bd03405fc83ba039d42bc93ffd4b88418f1d3 upstream.
    
    Running tests with a debug kernel shows that bnx2fc_recv_frame() is
    modifying the per_cpu lport stats counters in a non-mpsafe way.  Just boot
    a debug kernel and run the bnx2fc driver with the hardware enabled.
    
    [ 1391.699147] BUG: using smp_processor_id() in preemptible [00000000] code: bnx2fc_
    [ 1391.699160] caller is bnx2fc_recv_frame+0xbf9/0x1760 [bnx2fc]
    [ 1391.699174] CPU: 2 PID: 4355 Comm: bnx2fc_l2_threa Kdump: loaded Tainted: G    B
    [ 1391.699180] Hardware name: HP ProLiant DL120 G7, BIOS J01 07/01/2013
    [ 1391.699183] Call Trace:
    [ 1391.699188]  dump_stack_lvl+0x57/0x7d
    [ 1391.699198]  check_preemption_disabled+0xc8/0xd0
    [ 1391.699205]  bnx2fc_recv_frame+0xbf9/0x1760 [bnx2fc]
    [ 1391.699215]  ? do_raw_spin_trylock+0xb5/0x180
    [ 1391.699221]  ? bnx2fc_npiv_create_vports.isra.0+0x4e0/0x4e0 [bnx2fc]
    [ 1391.699229]  ? bnx2fc_l2_rcv_thread+0xb7/0x3a0 [bnx2fc]
    [ 1391.699240]  bnx2fc_l2_rcv_thread+0x1af/0x3a0 [bnx2fc]
    [ 1391.699250]  ? bnx2fc_ulp_init+0xc0/0xc0 [bnx2fc]
    [ 1391.699258]  kthread+0x364/0x420
    [ 1391.699263]  ? _raw_spin_unlock_irq+0x24/0x50
    [ 1391.699268]  ? set_kthread_struct+0x100/0x100
    [ 1391.699273]  ret_from_fork+0x22/0x30
    
    Restore the old get_cpu/put_cpu code with some modifications to reduce the
    size of the critical section.
    
    Link: https://lore.kernel.org/r/20220124145110.442335-1-jmeneghi@redhat.com
    Fixes: d576a5e80cd0 ("bnx2fc: Improve stats update mechanism")
    Tested-by: Guangwu Zhang <guazhang@redhat.com>
    Acked-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: John Meneghini <jmeneghi@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0f49d12547d45ea8b0f356a96632dd503941c1e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jan 19 15:31:01 2022 +0300

    ASoC: max9759: fix underflow in speaker_gain_control_put()
    
    commit 4c907bcd9dcd233da6707059d777ab389dcbd964 upstream.
    
    Check for negative values of "priv->gain" to prevent an out of bounds
    access.  The concern is that these might come from the user via:
      -> snd_ctl_elem_write_user()
        -> snd_ctl_elem_write()
          -> kctl->put()
    
    Fixes: fa8d915172b8 ("ASoC: max9759: Add Amplifier Driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20220119123101.GA9509@kili
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9da3931dd50bca6693f7148bef9bf9c54426a9eb
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Jan 11 10:50:48 2022 +0800

    ASoC: cpcap: Check for NULL pointer after calling of_get_child_by_name
    
    commit f7a6021aaf02088870559f82fc13c58cda7fea1a upstream.
    
    If the device does not exist, of_get_child_by_name() will return NULL
    pointer.
    And devm_snd_soc_register_component() does not check it.
    Also, I have noticed that cpcap_codec_driver has not been used yet.
    Therefore, it should be better to check it in order to avoid the future
    dereference of the NULL pointer.
    
    Fixes: f6cdf2d3445d ("ASoC: cpcap: new codec")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220111025048.524134-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83fd4c6b9383e8c0bd1134dc89a3edc4b66d9c89
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jan 27 13:13:34 2022 +0000

    ASoC: fsl: Add missing error handling in pcm030_fabric_probe
    
    commit fb25621da5702c104ce0a48de5b174ced09e5b4e upstream.
    
    Add the missing platform_device_put() and platform_device_del()
    before return from pcm030_fabric_probe in the error handling case.
    
    Fixes: c912fa913446 ("ASoC: fsl: register the wm9712-codec")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220127131336.30214-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1a0f34c91e719387aff293e9e692ff87c69bf22
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jan 24 15:24:09 2022 +0300

    drm/i915/overlay: Prevent divide by zero bugs in scaling
    
    commit 90a3d22ff02b196d5884e111f39271a1d4ee8e3e upstream.
    
    Smatch detected a divide by zero bug in check_overlay_scaling().
    
        drivers/gpu/drm/i915/display/intel_overlay.c:976 check_overlay_scaling()
        error: potential divide by zero bug '/ rec->dst_height'.
        drivers/gpu/drm/i915/display/intel_overlay.c:980 check_overlay_scaling()
        error: potential divide by zero bug '/ rec->dst_width'.
    
    Prevent this by ensuring that the dst height and width are non-zero.
    
    Fixes: 02e792fbaadb ("drm/i915: implement drmmode overlay support v4")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220124122409.GA31673@kili
    (cherry picked from commit cf5b64f7f10b28bebb9b7c9d25e7aee5cbe43918)
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00b4070cf444d7e36177ac0cad82318bdb268a14
Author: Yannick Vignon <yannick.vignon@nxp.com>
Date:   Thu Feb 3 17:00:25 2022 +0100

    net: stmmac: ensure PTP time register reads are consistent
    
    commit 80d4609008e6d696a279e39ae7458c916fcd44c1 upstream.
    
    Even if protected from preemption and interrupts, a small time window
    remains when the 2 register reads could return inconsistent values,
    each time the "seconds" register changes. This could lead to an about
    1-second error in the reported time.
    
    Add logic to ensure the "seconds" and "nanoseconds" values are consistent.
    
    Fixes: 92ba6888510c ("stmmac: add the support for PTP hw clock driver")
    Signed-off-by: Yannick Vignon <yannick.vignon@nxp.com>
    Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Link: https://lore.kernel.org/r/20220203160025.750632-1-yannick.vignon@oss.nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e902816ef92c278463280ad93ae22bd870749b13
Author: Lior Nahmanson <liorna@nvidia.com>
Date:   Sun Jan 30 13:37:52 2022 +0200

    net: macsec: Verify that send_sci is on when setting Tx sci explicitly
    
    commit d0cfa548dbde354de986911d3913897b5448faad upstream.
    
    When setting Tx sci explicit, the Rx side is expected to use this
    sci and not recalculate it from the packet.However, in case of Tx sci
    is explicit and send_sci is off, the receiver is wrongly recalculate
    the sci from the source MAC address which most likely be different
    than the explicit sci.
    
    Fix by preventing such configuration when macsec newlink is established
    and return EINVAL error code on such cases.
    
    Fixes: c09440f7dcb3 ("macsec: introduce IEEE 802.1AE driver")
    Signed-off-by: Lior Nahmanson <liorna@nvidia.com>
    Reviewed-by: Raed Salem <raeds@nvidia.com>
    Signed-off-by: Raed Salem <raeds@nvidia.com>
    Link: https://lore.kernel.org/r/1643542672-29403-1-git-send-email-raeds@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9816cd50750a92f4f66da23ea1108c8e0a898d6
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Jan 25 13:14:25 2022 +0100

    net: ieee802154: Return meaningful error codes from the netlink helpers
    
    commit 79c37ca73a6e9a33f7b2b7783ba6af07a448c8a9 upstream.
    
    Returning -1 does not indicate anything useful.
    
    Use a standard and meaningful error code instead.
    
    Fixes: a26c5fd7622d ("nl802154: add support for security layer")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20220125121426.848337-6-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6a44feb2f28d71a7e725f72d09c97c81561cd9a
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Jan 25 13:14:24 2022 +0100

    net: ieee802154: ca8210: Stop leaking skb's
    
    commit 621b24b09eb61c63f262da0c9c5f0e93348897e5 upstream.
    
    Upon error the ieee802154_xmit_complete() helper is not called. Only
    ieee802154_wake_queue() is called manually. We then leak the skb
    structure.
    
    Free the skb structure upon error before returning.
    
    Fixes: ded845a781a5 ("ieee802154: Add CA8210 IEEE 802.15.4 device driver")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20220125121426.848337-5-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6e9c12fc672e5edffd04f342802f6f703fb74e2
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Jan 25 13:14:22 2022 +0100

    net: ieee802154: mcr20a: Fix lifs/sifs periods
    
    commit d753c4004820a888ec007dd88b271fa9c3172c5c upstream.
    
    These periods are expressed in time units (microseconds) while 40 and 12
    are the number of symbol durations these periods will last. We need to
    multiply them both with phy->symbol_duration in order to get these
    values in microseconds.
    
    Fixes: 8c6ad9cc5157 ("ieee802154: Add NXP MCR20A IEEE 802.15.4 transceiver driver")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20220125121426.848337-3-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f14cd58ec310b2ea905ee26d70c51c184f8edea
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Tue Jan 25 13:14:21 2022 +0100

    net: ieee802154: hwsim: Ensure proper channel selection at probe time
    
    commit 1293fccc9e892712d910ec96079d3717307f1d2d upstream.
    
    Drivers are expected to set the PHY current_channel and current_page
    according to their default state. The hwsim driver is advertising being
    configured on channel 13 by default but that is not reflected in its own
    internal pib structure. In order to ensure that this driver consider the
    current channel as being 13 internally, we at least need to set the
    pib->channel field to 13.
    
    Fixes: f25da51fdc38 ("ieee802154: hwsim: add replacement for fakelb")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    [stefan@datenfreihafen.org: fixed assigment from page to channel]
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20220125121426.848337-2-miquel.raynal@bootlin.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ff2b0e024b10ea6a373192c31f6029c165d3ea5
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 26 11:04:47 2022 +0000

    spi: meson-spicc: add IRQ check in meson_spicc_probe
    
    commit e937440f7fc444a3e3f1fb75ea65292d6f433a44 upstream.
    
    This check misses checking for  platform_get_irq()'s call and may passes
    the negative error codes to devm_request_irq(), which takes unsigned IRQ #,
    causing it to fail with -EINVAL, overriding an original error code.
    Stop calling devm_request_irq() with invalid IRQ #s.
    
    Fixes: 454fa271bc4e ("spi: Add Meson SPICC driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220126110447.24549-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3395f878608779fc3e694e72bd2eec4a62637fa5
Author: Benjamin Gaignard <benjamin.gaignard@collabora.com>
Date:   Mon Jan 31 15:17:08 2022 +0100

    spi: mediatek: Avoid NULL pointer crash in interrupt
    
    commit f83a96e5f033fbbd21764705cb9c04234b96218e upstream.
    
    In some case, like after a transfer timeout, master->cur_msg pointer
    is NULL which led to a kernel crash when trying to use master->cur_msg->spi.
    mtk_spi_can_dma(), pointed by master->can_dma, doesn't use this parameter
    avoid the problem by setting NULL as second parameter.
    
    Fixes: a568231f46322 ("spi: mediatek: Add spi bus for Mediatek MT8173")
    Signed-off-by: Benjamin Gaignard <benjamin.gaignard@collabora.com>
    Link: https://lore.kernel.org/r/20220131141708.888710-1-benjamin.gaignard@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a07d4a3863e2426168c3236a37ba1c232d9cd9f
Author: Kamal Dasu <kdasu.kdev@gmail.com>
Date:   Thu Jan 27 13:53:59 2022 -0500

    spi: bcm-qspi: check for valid cs before applying chip select
    
    commit 2cbd27267ffe020af1442b95ec57f59a157ba85c upstream.
    
    Apply only valid chip select value. This change fixes case where chip
    select is set to initial value of '-1' during probe and  PM supend and
    subsequent resume can try to use the value with undefined behaviour.
    Also in case where gpio based chip select, the check in
    bcm_qspi_chip_select() shall prevent undefined behaviour on resume.
    
    Fixes: fa236a7ef240 ("spi: bcm-qspi: Add Broadcom MSPI driver")
    Signed-off-by: Kamal Dasu <kdasu.kdev@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20220127185359.27322-1-kdasu.kdev@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd2a6021b8778bf671a2f9739241543398a7c853
Author: Joerg Roedel <jroedel@suse.de>
Date:   Fri Feb 4 12:55:37 2022 +0100

    iommu/amd: Fix loop timeout issue in iommu_ga_log_enable()
    
    commit 9b45a7738eec52bf0f5d8d3d54e822962781c5f2 upstream.
    
    The polling loop for the register change in iommu_ga_log_enable() needs
    to have a udelay() in it.  Otherwise the CPU might be faster than the
    IOMMU hardware and wrongly trigger the WARN_ON() further down the code
    stream. Use a 10us for udelay(), has there is some hardware where
    activation of the GA log can take more than a 100ms.
    
    A future optimization should move the activation check of the GA log
    to the point where it gets used for the first time. But that is a
    bigger change and not suitable for a fix.
    
    Fixes: 8bda0cfbdc1a ("iommu/amd: Detect and initialize guest vAPIC log")
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Link: https://lore.kernel.org/r/20220204115537.3894-1-joro@8bytes.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a31cb1f0fb6caf46ffe88c41252b6b7a4ee062d9
Author: Guoqing Jiang <guoqing.jiang@linux.dev>
Date:   Fri Jan 28 11:10:02 2022 +0800

    iommu/vt-d: Fix potential memory leak in intel_setup_irq_remapping()
    
    commit 99e675d473eb8cf2deac1376a0f840222fc1adcf upstream.
    
    After commit e3beca48a45b ("irqdomain/treewide: Keep firmware node
    unconditionally allocated"). For tear down scenario, fn is only freed
    after fail to allocate ir_domain, though it also should be freed in case
    dmar_enable_qi returns error.
    
    Besides free fn, irq_domain and ir_msi_domain need to be removed as well
    if intel_setup_irq_remapping fails to enable queued invalidation.
    
    Improve the rewinding path by add out_free_ir_domain and out_free_fwnode
    lables per Baolu's suggestion.
    
    Fixes: e3beca48a45b ("irqdomain/treewide: Keep firmware node unconditionally allocated")
    Suggested-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Guoqing Jiang <guoqing.jiang@linux.dev>
    Link: https://lore.kernel.org/r/20220119063640.16864-1-guoqing.jiang@linux.dev
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20220128031002.2219155-3-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76d56195fe96a76211036bcafa554d20293d00c6
Author: Leon Romanovsky <leonro@nvidia.com>
Date:   Mon Jan 31 11:45:26 2022 +0200

    RDMA/mlx4: Don't continue event handler after memory allocation failure
    
    commit f3136c4ce7acf64bee43135971ca52a880572e32 upstream.
    
    The failure to allocate memory during MLX4_DEV_EVENT_PORT_MGMT_CHANGE
    event handler will cause skip the assignment logic, but
    ib_dispatch_event() will be called anyway.
    
    Fix it by calling to return instead of break after memory allocation
    failure.
    
    Fixes: 00f5ce99dc6e ("mlx4: Use port management change event instead of smp_snoop")
    Link: https://lore.kernel.org/r/12a0e83f18cfad4b5f62654f141e240d04915e10.1643622264.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Reviewed-by: Håkon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1f078b91efd72addf7f29c984b9b52f88587523
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Fri Feb 4 17:47:55 2022 -0800

    Revert "ASoC: mediatek: Check for error clk pointer"
    
    This reverts commit e4f5f2767cd2c14fcb7b2c16dac5fe21888de9c2 which is
    commit 9de2b9286a6dd16966959b3cb34fc2ddfd39213e upstream
    
    With this patch in the tree, Chromebooks running the affected hardware
    no longer boot. Bisect points to this patch, and reverting it fixes
    the problem.
    
    An analysis of the code with this patch applied shows:
    
            ret = init_clks(pdev, clk);
            if (ret)
                    return ERR_PTR(ret);
    ...
                    for (j = 0; j < MAX_CLKS && data->clk_id[j]; j++) {
                            struct clk *c = clk[data->clk_id[j]];
    
                            if (IS_ERR(c)) {
                                    dev_err(&pdev->dev, "%s: clk unavailable\n",
                                            data->name);
                                    return ERR_CAST(c);
                            }
    
                            scpd->clk[j] = c;
                    }
    
    Not all clocks in the clk_names array have to be present. Only the clocks
    in the data->clk_id array are actually needed. The code already checks if
    the required clocks are available and bails out if not. The assumption that
    all clocks have to be present is wrong, and commit 9de2b9286a6d needs to be
    reverted.
    
    Fixes: 9de2b9286a6d ("ASoC: mediatek: Check for error clk pointer")
    Cc: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: James Liao <jamesjj.liao@mediatek.com>
    Cc: Kevin Hilman <khilman@baylibre.com>
    Cc: Matthias Brugger <matthias.bgg@gmail.com
    Cc: Frank Wunderlich <frank-w@public-files.de>
    Cc: Daniel Golle <daniel@makrotopia.org>
    Link: https://lore.kernel.org/lkml/20220205014755.699603-1-linux@roeck-us.net/
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d21b6bbc78442bf490e7215ed620ec0878856a0e
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Thu Feb 3 22:42:09 2022 -0500

    block: bio-integrity: Advance seed correctly for larger interval sizes
    
    commit b13e0c71856817fca67159b11abac350e41289f5 upstream.
    
    Commit 309a62fa3a9e ("bio-integrity: bio_integrity_advance must update
    integrity seed") added code to update the integrity seed value when
    advancing a bio. However, it failed to take into account that the
    integrity interval might be larger than the 512-byte block layer
    sector size. This broke bio splitting on PI devices with 4KB logical
    blocks.
    
    The seed value should be advanced by bio_integrity_intervals() and not
    the number of sectors.
    
    Cc: Dmitry Monakhov <dmonakhov@openvz.org>
    Cc: stable@vger.kernel.org
    Fixes: 309a62fa3a9e ("bio-integrity: bio_integrity_advance must update integrity seed")
    Tested-by: Dmitry Ivanov <dmitry.ivanov2@hpe.com>
    Reported-by: Alexey Lyashkov <alexey.lyashkov@hpe.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Link: https://lore.kernel.org/r/20220204034209.4193-1-martin.petersen@oracle.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2a21669ee98aafc41c6d42ef15af4dab9e6e882
Author: Nick Lopez <github@glowingmonkey.org>
Date:   Sat Jan 22 01:19:06 2022 -0700

    drm/nouveau: fix off by one in BIOS boundary checking
    
    commit 1b777d4d9e383d2744fc9b3a09af6ec1893c8b1a upstream.
    
    Bounds checking when parsing init scripts embedded in the BIOS reject
    access to the last byte. This causes driver initialization to fail on
    Apple eMac's with GeForce 2 MX GPUs, leaving the system with no working
    console.
    
    This is probably only seen on OpenFirmware machines like PowerPC Macs
    because the BIOS image provided by OF is only the used parts of the ROM,
    not a power-of-two blocks read from PCI directly so PCs always have
    empty bytes at the end that are never accessed.
    
    Signed-off-by: Nick Lopez <github@glowingmonkey.org>
    Fixes: 4d4e9907ff572 ("drm/nouveau/bios: guard against out-of-bounds accesses to image")
    Cc: <stable@vger.kernel.org> # v4.10+
    Reviewed-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220122081906.2633061-1-github@glowingmonkey.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80315695a762be2e0ba98baa9e6e3aa4d756adf4
Author: Christian Lachner <gladiac@gmail.com>
Date:   Sat Jan 29 12:32:43 2022 +0100

    ALSA: hda/realtek: Fix silent output on Gigabyte X570 Aorus Xtreme after reboot from Windows
    
    commit ea3541961376f733373839cc90493aafa8a7f733 upstream.
    
    This commit switches the Gigabyte X570 Aorus Xtreme from using the
    ALC1220_FIXUP_CLEVO_P950 to the ALC1220_FIXUP_GB_X570 quirk. This fixes
    the no-audio after reboot from windows problem.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=205275
    Signed-off-by: Christian Lachner <gladiac@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220129113243.93068-4-gladiac@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62d0f2569e74f47dc5c327efc0939a2081ee0253
Author: Christian Lachner <gladiac@gmail.com>
Date:   Sat Jan 29 12:32:42 2022 +0100

    ALSA: hda/realtek: Fix silent output on Gigabyte X570S Aorus Master (newer chipset)
    
    commit 41a8601302ecbe704ac970552c33dc942300fc37 upstream.
    
    Newer versions of the X570 Master come with a newer revision of the
    mainboard chipset - the X570S. These boards have the same ALC1220 codec
    but seem to initialize the codec with a different parameter in Coef 0x7
    which causes the output audio to be very low. We therefore write a
    known-good value to Coef 0x7 to fix that. As the value is the exact same
    as on the other X570(non-S) boards the same quirk-function can be shared
    between both generations.
    
    This commit adds the Gigabyte X570S Aorus Master to the list of boards
    using the ALC1220_FIXUP_GB_X570 quirk. This fixes both, the silent output
    and the no-audio after reboot from windows problems.
    
    This work has been tested by the folks over at the level1techs forum here:
    https://forum.level1techs.com/t/has-anybody-gotten-audio-working-in-linux-on-aorus-x570-master/154072
    
    Signed-off-by: Christian Lachner <gladiac@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220129113243.93068-3-gladiac@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b573fc8724496e40de4dec91e66dd49096a63bc
Author: Christian Lachner <gladiac@gmail.com>
Date:   Sat Jan 29 12:32:41 2022 +0100

    ALSA: hda/realtek: Add missing fixup-model entry for Gigabyte X570 ALC1220 quirks
    
    commit 63394a16086fc2152869d7902621e2525e14bc40 upstream.
    
    The initial commit of the new Gigabyte X570 ALC1220 quirks lacked the
    fixup-model entry in alc882_fixup_models[]. It seemed not to cause any ill
    effects but for completeness sake this commit makes up for that.
    
    Signed-off-by: Christian Lachner <gladiac@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220129113243.93068-2-gladiac@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7659f25a80e6affb784b690df8994b79b4212fd4
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jan 24 15:32:53 2022 +0000

    ASoC: ops: Reject out of bounds values in snd_soc_put_xr_sx()
    
    commit 4cf28e9ae6e2e11a044be1bcbcfa1b0d8675fe4d upstream.
    
    We don't currently validate that the values being set are within the range
    we advertised to userspace as being valid, do so and reject any values
    that are out of range.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220124153253.3548853-4-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a12fcbf3c622f9bf6b110a873d62b0cba93972e
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jan 24 15:32:52 2022 +0000

    ASoC: ops: Reject out of bounds values in snd_soc_put_volsw_sx()
    
    commit 4f1e50d6a9cf9c1b8c859d449b5031cacfa8404e upstream.
    
    We don't currently validate that the values being set are within the range
    we advertised to userspace as being valid, do so and reject any values
    that are out of range.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220124153253.3548853-3-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65a61b1f56f5386486757930069fbdce94af08bf
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jan 24 15:32:51 2022 +0000

    ASoC: ops: Reject out of bounds values in snd_soc_put_volsw()
    
    commit 817f7c9335ec01e0f5e8caffc4f1dcd5e458a4c0 upstream.
    
    We don't currently validate that the values being set are within the range
    we advertised to userspace as being valid, do so and reject any values
    that are out of range.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220124153253.3548853-2-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0c142af899fae6e9e3dc9f67bc088a8803ac74c
Author: Paul Moore <paul@paul-moore.com>
Date:   Thu Jan 13 18:54:38 2022 -0500

    audit: improve audit queue handling when "audit=1" on cmdline
    
    commit f26d04331360d42dbd6b58448bd98e4edbfbe1c5 upstream.
    
    When an admin enables audit at early boot via the "audit=1" kernel
    command line the audit queue behavior is slightly different; the
    audit subsystem goes to greater lengths to avoid dropping records,
    which unfortunately can result in problems when the audit daemon is
    forcibly stopped for an extended period of time.
    
    This patch makes a number of changes designed to improve the audit
    queuing behavior so that leaving the audit daemon in a stopped state
    for an extended period does not cause a significant impact to the
    system.
    
    - kauditd_send_queue() is now limited to looping through the
      passed queue only once per call.  This not only prevents the
      function from looping indefinitely when records are returned
      to the current queue, it also allows any recovery handling in
      kauditd_thread() to take place when kauditd_send_queue()
      returns.
    
    - Transient netlink send errors seen as -EAGAIN now cause the
      record to be returned to the retry queue instead of going to
      the hold queue.  The intention of the hold queue is to store,
      perhaps for an extended period of time, the events which led
      up to the audit daemon going offline.  The retry queue remains
      a temporary queue intended to protect against transient issues
      between the kernel and the audit daemon.
    
    - The retry queue is now limited by the audit_backlog_limit
      setting, the same as the other queues.  This allows admins
      to bound the size of all of the audit queues on the system.
    
    - kauditd_rehold_skb() now returns records to the end of the
      hold queue to ensure ordering is preserved in the face of
      recent changes to kauditd_send_queue().
    
    Cc: stable@vger.kernel.org
    Fixes: 5b52330bbfe63 ("audit: fix auditd/kernel connection state tracking")
    Fixes: f4b3ee3c85551 ("audit: improve robustness of the audit queue handling")
    Reported-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Tested-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Reviewed-by: Richard Guy Briggs <rgb@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f0c712832907baef27d13721b3ca2e515d39ecf
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jan 31 18:23:58 2022 -0800

    af_packet: fix data-race in packet_setsockopt / packet_setsockopt
    
    commit e42e70ad6ae2ae511a6143d2e8da929366e58bd9 upstream.
    
    When packet_setsockopt( PACKET_FANOUT_DATA ) reads po->fanout,
    no lock is held, meaning that another thread can change po->fanout.
    
    Given that po->fanout can only be set once during the socket lifetime
    (it is only cleared from fanout_release()), we can use
    READ_ONCE()/WRITE_ONCE() to document the race.
    
    BUG: KCSAN: data-race in packet_setsockopt / packet_setsockopt
    
    write to 0xffff88813ae8e300 of 8 bytes by task 14653 on cpu 0:
     fanout_add net/packet/af_packet.c:1791 [inline]
     packet_setsockopt+0x22fe/0x24a0 net/packet/af_packet.c:3931
     __sys_setsockopt+0x209/0x2a0 net/socket.c:2180
     __do_sys_setsockopt net/socket.c:2191 [inline]
     __se_sys_setsockopt net/socket.c:2188 [inline]
     __x64_sys_setsockopt+0x62/0x70 net/socket.c:2188
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffff88813ae8e300 of 8 bytes by task 14654 on cpu 1:
     packet_setsockopt+0x691/0x24a0 net/packet/af_packet.c:3935
     __sys_setsockopt+0x209/0x2a0 net/socket.c:2180
     __do_sys_setsockopt net/socket.c:2191 [inline]
     __se_sys_setsockopt net/socket.c:2188 [inline]
     __x64_sys_setsockopt+0x62/0x70 net/socket.c:2188
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x0000000000000000 -> 0xffff888106f8c000
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 14654 Comm: syz-executor.3 Not tainted 5.16.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 47dceb8ecdc1 ("packet: add classic BPF fanout mode")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20220201022358.330621-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a01e60a1ec6bef9be471fb7182a33c6d6f124e93
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jan 31 17:21:06 2022 -0800

    rtnetlink: make sure to refresh master_dev/m_ops in __rtnl_newlink()
    
    commit c6f6f2444bdbe0079e41914a35081530d0409963 upstream.
    
    While looking at one unrelated syzbot bug, I found the replay logic
    in __rtnl_newlink() to potentially trigger use-after-free.
    
    It is better to clear master_dev and m_ops inside the loop,
    in case we have to replay it.
    
    Fixes: ba7d49b1f0f8 ("rtnetlink: provide api for getting and setting slave info")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Jiri Pirko <jiri@nvidia.com>
    Link: https://lore.kernel.org/r/20220201012106.216495-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34aeb4da20f93ac80a6291a2dbe7b9c6460e9b26
Author: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
Date:   Thu Jan 27 14:50:03 2022 +0530

    net: amd-xgbe: Fix skb data length underflow
    
    commit 5aac9108a180fc06e28d4e7fb00247ce603b72ee upstream.
    
    There will be BUG_ON() triggered in include/linux/skbuff.h leading to
    intermittent kernel panic, when the skb length underflow is detected.
    
    Fix this by dropping the packet if such length underflows are seen
    because of inconsistencies in the hardware descriptors.
    
    Fixes: 622c36f143fc ("amd-xgbe: Fix jumbo MTU processing on newer hardware")
    Suggested-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Link: https://lore.kernel.org/r/20220127092003.2812745-1-Shyam-sundar.S-k@amd.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b90b8ff90d212da14d1fd0e58d96f677ecae0fe
Author: Raju Rangoju <Raju.Rangoju@amd.com>
Date:   Thu Jan 27 11:32:22 2022 +0530

    net: amd-xgbe: ensure to reset the tx_timer_active flag
    
    commit 7674b7b559b683478c3832527c59bceb169e701d upstream.
    
    Ensure to reset the tx_timer_active flag in xgbe_stop(),
    otherwise a port restart may result in tx timeout due to
    uncleared flag.
    
    Fixes: c635eaacbf77 ("amd-xgbe: Remove Tx coalescing")
    Co-developed-by: Sudheesh Mavila <sudheesh.mavila@amd.com>
    Signed-off-by: Sudheesh Mavila <sudheesh.mavila@amd.com>
    Signed-off-by: Raju Rangoju <Raju.Rangoju@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Link: https://lore.kernel.org/r/20220127060222.453371-1-Raju.Rangoju@amd.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ea863e2c9459ce62608a9ff28f8fec1380cfb6e
Author: Georgi Valkov <gvalkov@abv.bg>
Date:   Tue Feb 1 08:16:18 2022 +0100

    ipheth: fix EOVERFLOW in ipheth_rcvbulk_callback
    
    commit 63e4b45c82ed1bde979da7052229a4229ce9cabf upstream.
    
    When rx_buf is allocated we need to account for IPHETH_IP_ALIGN,
    which reduces the usable size by 2 bytes. Otherwise we have 1512
    bytes usable instead of 1514, and if we receive more than 1512
    bytes, ipheth_rcvbulk_callback is called with status -EOVERFLOW,
    after which the driver malfunctiones and all communication stops.
    
    Resolves ipheth 2-1:4.2: ipheth_rcvbulk_callback: urb status: -75
    
    Fixes: f33d9e2b48a3 ("usbnet: ipheth: fix connectivity with iOS 14")
    Signed-off-by: Georgi Valkov <gvalkov@abv.bg>
    Tested-by: Jan Kiszka <jan.kiszka@siemens.com>
    Link: https://lore.kernel.org/all/B60B8A4B-92A0-49B3-805D-809A2433B46C@abv.bg/
    Link: https://lore.kernel.org/all/24851bd2769434a5fc24730dce8e8a984c5a4505.1643699778.git.jan.kiszka@siemens.com/
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a70f118475e037732557796accd0878a00fc25a
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jan 31 10:26:03 2022 -0800

    tcp: fix possible socket leaks in internal pacing mode
    
    This patch is addressing an issue in stable linux-4.19 only.
    
    In linux-4.20, TCP stack adopted EDT (Earliest Departure
    Time) model and this issue was incidentally fixed.
    
    Issue at hand was an extra sock_hold() from tcp_internal_pacing()
    in paths not using tcp_xmit_retransmit_queue()
    
    Jason Xing reported this leak and provided a patch stopping
    the extra sock_hold() to happen.
    
    This patch is more complete and makes sure to avoid
    unnecessary extra delays, by reprogramming the high
    resolution timer.
    
    Fixes: 73a6bab5aa2a ("tcp: switch pacing timer to softirq based hrtimer")
    Reference: https://lore.kernel.org/all/CANn89i+7-wE4xr5D9DpH+N-xkL1SB8oVghCKgz+CT5eG1ODQhA@mail.gmail.com/
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Jason Xing <kerneljasonxing@gmail.com>
    Reported-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Cc: liweishi <liweishi@kuaishou.com>
    Cc: Shujin Li <lishujin@kuaishou.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8070f13e8f938d0160ac6305364c460b8981837a
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Dec 10 17:18:46 2018 +0100

    netfilter: nat: limit port clash resolution attempts
    
    commit a504b703bb1da526a01593da0e4be2af9d9f5fa8 upstream.
    
    In case almost or all available ports are taken, clash resolution can
    take a very long time, resulting in soft lockup.
    
    This can happen when many to-be-natted hosts connect to same
    destination:port (e.g. a proxy) and all connections pass the same SNAT.
    
    Pick a random offset in the acceptable range, then try ever smaller
    number of adjacent port numbers, until either the limit is reached or a
    useable port was found.  This results in at most 248 attempts
    (128 + 64 + 32 + 16 + 8, i.e. 4 restarts with new search offset)
    instead of 64000+,
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffebec7f45128dbcc0d11ea1695fbea08f42c3f4
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Nov 15 10:22:59 2018 +0100

    netfilter: nat: remove l4 protocol port rovers
    
    commit 6ed5943f8735e2b778d92ea4d9805c0a1d89bc2b upstream.
    
    This is a leftover from days where single-cpu systems were common:
    Store last port used to resolve a clash to use it as a starting point when
    the next conflict needs to be resolved.
    
    When we have parallel attempt to connect to same address:port pair,
    its likely that both cores end up computing the same "available" port,
    as both use same starting port, and newly used ports won't become
    visible to other cores until the conntrack gets confirmed later.
    
    One of the cores then has to drop the packet at insertion time because
    the chosen new tuple turns out to be in use after all.
    
    Lets simplify this: remove port rover and use a pseudo-random starting
    point.
    
    Note that this doesn't make netfilter default to 'fully random' mode;
    the 'rover' was only used if NAT could not reuse source port as-is.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08ed3cabc07e9f6035466e33fbdfad1978e05e06
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 26 17:10:21 2022 -0800

    ipv4: tcp: send zero IPID in SYNACK messages
    
    [ Upstream commit 970a5a3ea86da637471d3cd04d513a0755aba4bf ]
    
    In commit 431280eebed9 ("ipv4: tcp: send zero IPID for RST and
    ACK sent in SYN-RECV and TIME-WAIT state") we took care of some
    ctl packets sent by TCP.
    
    It turns out we need to use a similar strategy for SYNACK packets.
    
    By default, they carry IP_DF and IPID==0, but there are ways
    to ask them to use the hashed IP ident generator and thus
    be used to build off-path attacks.
    (Ref: Off-Path TCP Exploits of the Mixed IPID Assignment)
    
    One of this way is to force (before listener is started)
    echo 1 >/proc/sys/net/ipv4/ip_no_pmtu_disc
    
    Another way is using forged ICMP ICMP_FRAG_NEEDED
    with a very small MTU (like 68) to force a false return from
    ip_dont_fragment()
    
    In this patch, ip_build_and_send_pkt() uses the following
    heuristics.
    
    1) Most SYNACK packets are smaller than IPV4_MIN_MTU and therefore
    can use IP_DF regardless of the listener or route pmtu setting.
    
    2) In case the SYNACK packet is bigger than IPV4_MIN_MTU,
    we use prandom_u32() generator instead of the IPv4 hashed ident one.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Ray Che <xijiache@gmail.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Cc: Geoff Alexander <alexandg@cs.unm.edu>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3edc526019751c551a05b3ef465d07678fd239de
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 26 16:51:16 2022 -0800

    ipv4: raw: lock the socket in raw_bind()
    
    [ Upstream commit 153a0d187e767c68733b8e9f46218eb1f41ab902 ]
    
    For some reason, raw_bind() forgot to lock the socket.
    
    BUG: KCSAN: data-race in __ip4_datagram_connect / raw_bind
    
    write to 0xffff8881170d4308 of 4 bytes by task 5466 on cpu 0:
     raw_bind+0x1b0/0x250 net/ipv4/raw.c:739
     inet_bind+0x56/0xa0 net/ipv4/af_inet.c:443
     __sys_bind+0x14b/0x1b0 net/socket.c:1697
     __do_sys_bind net/socket.c:1708 [inline]
     __se_sys_bind net/socket.c:1706 [inline]
     __x64_sys_bind+0x3d/0x50 net/socket.c:1706
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffff8881170d4308 of 4 bytes by task 5468 on cpu 1:
     __ip4_datagram_connect+0xb7/0x7b0 net/ipv4/datagram.c:39
     ip4_datagram_connect+0x2a/0x40 net/ipv4/datagram.c:89
     inet_dgram_connect+0x107/0x190 net/ipv4/af_inet.c:576
     __sys_connect_file net/socket.c:1900 [inline]
     __sys_connect+0x197/0x1b0 net/socket.c:1917
     __do_sys_connect net/socket.c:1927 [inline]
     __se_sys_connect net/socket.c:1924 [inline]
     __x64_sys_connect+0x3d/0x50 net/socket.c:1924
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x00000000 -> 0x0003007f
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 5468 Comm: syz-executor.5 Not tainted 5.17.0-rc1-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bd197ce18329e3725fe3af5bd27daa4256d3ac7
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Mon Jan 24 11:29:54 2022 +0800

    yam: fix a memory leak in yam_siocdevprivate()
    
    [ Upstream commit 29eb31542787e1019208a2e1047bb7c76c069536 ]
    
    ym needs to be free when ym->cmd != SIOCYAMSMCS.
    
    Fixes: 0781168e23a2 ("yam: fix a missing-check bug")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e966de190b93fb12a52d109cb928a3cd7472aca7
Author: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
Date:   Fri Jan 21 18:59:20 2022 -0800

    ibmvnic: don't spin in tasklet
    
    [ Upstream commit 48079e7fdd0269d66b1d7d66ae88bd03162464ad ]
    
    ibmvnic_tasklet() continuously spins waiting for responses to all
    capability requests. It does this to avoid encountering an error
    during initialization of the vnic. However if there is a bug in the
    VIOS and we do not receive a response to one or more queries the
    tasklet ends up spinning continuously leading to hard lock ups.
    
    If we fail to receive a message from the VIOS it is reasonable to
    timeout the login attempt rather than spin indefinitely in the tasklet.
    
    Fixes: 249168ad07cd ("ibmvnic: Make CRQ interrupt tasklet wait for all capabilities crqs")
    Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
    Reviewed-by: Dany Madden <drt@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 539ac94e1ebc6f9ff4051bdbb0ee5dc3855f7973
Author: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
Date:   Fri Jan 21 18:59:19 2022 -0800

    ibmvnic: init ->running_cap_crqs early
    
    [ Upstream commit 151b6a5c06b678687f64f2d9a99fd04d5cd32b72 ]
    
    We use ->running_cap_crqs to determine when the ibmvnic_tasklet() should
    send out the next protocol message type. i.e when we get back responses
    to all our QUERY_CAPABILITY CRQs we send out REQUEST_CAPABILITY crqs.
    Similiary, when we get responses to all the REQUEST_CAPABILITY crqs, we
    send out the QUERY_IP_OFFLOAD CRQ.
    
    We currently increment ->running_cap_crqs as we send out each CRQ and
    have the ibmvnic_tasklet() send out the next message type, when this
    running_cap_crqs count drops to 0.
    
    This assumes that all the CRQs of the current type were sent out before
    the count drops to 0. However it is possible that we send out say 6 CRQs,
    get preempted and receive all the 6 responses before we send out the
    remaining CRQs. This can result in ->running_cap_crqs count dropping to
    zero before all messages of the current type were sent and we end up
    sending the next protocol message too early.
    
    Instead initialize the ->running_cap_crqs upfront so the tasklet will
    only send the next protocol message after all responses are received.
    
    Use the cap_reqs local variable to also detect any discrepancy (either
    now or in future) in the number of capability requests we actually send.
    
    Currently only send_query_cap() is affected by this behavior (of sending
    next message early) since it is called from the worker thread (during
    reset) and from application thread (during ->ndo_open()) and they can be
    preempted. send_request_cap() is only called from the tasklet  which
    processes CRQ responses sequentially, is not be affected.  But to
    maintain the existing symmtery with send_query_capability() we update
    send_request_capability() also.
    
    Fixes: 249168ad07cd ("ibmvnic: Make CRQ interrupt tasklet wait for all capabilities crqs")
    Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
    Reviewed-by: Dany Madden <drt@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67d271760b037ce0806d687ee6057edc8afd4205
Author: Marek Behún <kabel@kernel.org>
Date:   Wed Jan 19 17:27:48 2022 +0100

    phylib: fix potential use-after-free
    
    [ Upstream commit cbda1b16687580d5beee38273f6241ae3725960c ]
    
    Commit bafbdd527d56 ("phylib: Add device reset GPIO support") added call
    to phy_device_reset(phydev) after the put_device() call in phy_detach().
    
    The comment before the put_device() call says that the phydev might go
    away with put_device().
    
    Fix potential use-after-free by calling phy_device_reset() before
    put_device().
    
    Fixes: bafbdd527d56 ("phylib: Add device reset GPIO support")
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20220119162748.32418-1-kabel@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b5c9de150c62f686ff274039b97fe3a2297ada6
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Dec 15 16:38:16 2021 -0500

    NFS: Ensure the server has an up to date ctime before renaming
    
    [ Upstream commit 6ff9d99bb88faebf134ca668842349d9718e5464 ]
    
    Renaming a file is required by POSIX to update the file ctime, so
    ensure that the file data is synced to disk so that we don't clobber the
    updated ctime by writing back after creating the hard link.
    
    Fixes: f2c2c552f119 ("NFS: Move delegation recall into the NFSv4 callback for rename_setup()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddeea0002d17984d66bb63f9b66b96fd604756ad
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Dec 15 16:38:15 2021 -0500

    NFS: Ensure the server has an up to date ctime before hardlinking
    
    [ Upstream commit 204975036b34f55237bc44c8a302a88468ef21b5 ]
    
    Creating a hard link is required by POSIX to update the file ctime, so
    ensure that the file data is synced to disk so that we don't clobber the
    updated ctime by writing back after creating the hard link.
    
    Fixes: 9f7682728728 ("NFS: Move the delegation return down into nfs4_proc_link()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 243e898452adcf6055c9b2632becef7c59f02874
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Jan 20 09:41:12 2022 -0800

    ipv6: annotate accesses to fn->fn_sernum
    
    commit aafc2e3285c2d7a79b7ee15221c19fbeca7b1509 upstream.
    
    struct fib6_node's fn_sernum field can be
    read while other threads change it.
    
    Add READ_ONCE()/WRITE_ONCE() annotations.
    
    Do not change existing smp barriers in fib6_get_cookie_safe()
    and __fib6_update_sernum_upto_root()
    
    syzbot reported:
    
    BUG: KCSAN: data-race in fib6_clean_node / inet6_csk_route_socket
    
    write to 0xffff88813df62e2c of 4 bytes by task 1920 on cpu 1:
     fib6_clean_node+0xc2/0x260 net/ipv6/ip6_fib.c:2178
     fib6_walk_continue+0x38e/0x430 net/ipv6/ip6_fib.c:2112
     fib6_walk net/ipv6/ip6_fib.c:2160 [inline]
     fib6_clean_tree net/ipv6/ip6_fib.c:2240 [inline]
     __fib6_clean_all+0x1a9/0x2e0 net/ipv6/ip6_fib.c:2256
     fib6_flush_trees+0x6c/0x80 net/ipv6/ip6_fib.c:2281
     rt_genid_bump_ipv6 include/net/net_namespace.h:488 [inline]
     addrconf_dad_completed+0x57f/0x870 net/ipv6/addrconf.c:4230
     addrconf_dad_work+0x908/0x1170
     process_one_work+0x3f6/0x960 kernel/workqueue.c:2307
     worker_thread+0x616/0xa70 kernel/workqueue.c:2454
     kthread+0x1bf/0x1e0 kernel/kthread.c:359
     ret_from_fork+0x1f/0x30
    
    read to 0xffff88813df62e2c of 4 bytes by task 15701 on cpu 0:
     fib6_get_cookie_safe include/net/ip6_fib.h:285 [inline]
     rt6_get_cookie include/net/ip6_fib.h:306 [inline]
     ip6_dst_store include/net/ip6_route.h:234 [inline]
     inet6_csk_route_socket+0x352/0x3c0 net/ipv6/inet6_connection_sock.c:109
     inet6_csk_xmit+0x91/0x1e0 net/ipv6/inet6_connection_sock.c:121
     __tcp_transmit_skb+0x1323/0x1840 net/ipv4/tcp_output.c:1402
     tcp_transmit_skb net/ipv4/tcp_output.c:1420 [inline]
     tcp_write_xmit+0x1450/0x4460 net/ipv4/tcp_output.c:2680
     __tcp_push_pending_frames+0x68/0x1c0 net/ipv4/tcp_output.c:2864
     tcp_push+0x2d9/0x2f0 net/ipv4/tcp.c:725
     mptcp_push_release net/mptcp/protocol.c:1491 [inline]
     __mptcp_push_pending+0x46c/0x490 net/mptcp/protocol.c:1578
     mptcp_sendmsg+0x9ec/0xa50 net/mptcp/protocol.c:1764
     inet6_sendmsg+0x5f/0x80 net/ipv6/af_inet6.c:643
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg net/socket.c:725 [inline]
     kernel_sendmsg+0x97/0xd0 net/socket.c:745
     sock_no_sendpage+0x84/0xb0 net/core/sock.c:3086
     inet_sendpage+0x9d/0xc0 net/ipv4/af_inet.c:834
     kernel_sendpage+0x187/0x200 net/socket.c:3492
     sock_sendpage+0x5a/0x70 net/socket.c:1007
     pipe_to_sendpage+0x128/0x160 fs/splice.c:364
     splice_from_pipe_feed fs/splice.c:418 [inline]
     __splice_from_pipe+0x207/0x500 fs/splice.c:562
     splice_from_pipe fs/splice.c:597 [inline]
     generic_splice_sendpage+0x94/0xd0 fs/splice.c:746
     do_splice_from fs/splice.c:767 [inline]
     direct_splice_actor+0x80/0xa0 fs/splice.c:936
     splice_direct_to_actor+0x345/0x650 fs/splice.c:891
     do_splice_direct+0x106/0x190 fs/splice.c:979
     do_sendfile+0x675/0xc40 fs/read_write.c:1245
     __do_sys_sendfile64 fs/read_write.c:1310 [inline]
     __se_sys_sendfile64 fs/read_write.c:1296 [inline]
     __x64_sys_sendfile64+0x102/0x140 fs/read_write.c:1296
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x0000026f -> 0x00000271
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 0 PID: 15701 Comm: syz-executor.2 Not tainted 5.16.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    The Fixes tag I chose is probably arbitrary, I do not think
    we need to backport this patch to older kernels.
    
    Fixes: c5cff8561d2d ("ipv6: add rcu grace period before freeing fib6_node")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20220120174112.1126644-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca63eeb70fcb53c42e1fe54e1735a54d8e7759fd
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Sun Jan 16 19:18:44 2022 +0100

    drm/msm/dsi: invalid parameter check in msm_dsi_phy_enable
    
    commit 5e761a2287234bc402ba7ef07129f5103bcd775c upstream.
    
    The function performs a check on the "phy" input parameter, however, it
    is used before the check.
    
    Initialize the "dev" variable after the sanity check to avoid a possible
    NULL pointer dereference.
    
    Fixes: 5c8290284402b ("drm/msm/dsi: Split PHY drivers to separate files")
    Addresses-Coverity-ID: 1493860 ("Null pointer dereference")
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20220116181844.7400-1-jose.exposito89@gmail.com
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5467ff8822508f5a21e644f7ecd1f06c693ea477
Author: Xianting Tian <xianting.tian@linux.alibaba.com>
Date:   Wed Jan 12 20:33:34 2022 +0800

    drm/msm: Fix wrong size calculation
    
    commit 0a727b459ee39bd4c5ced19d6024258ac87b6b2e upstream.
    
    For example, memory-region in .dts as below,
            reg = <0x0 0x50000000 0x0 0x20000000>
    
    We can get below values,
    struct resource r;
    r.start = 0x50000000;
    r.end   = 0x6fffffff;
    
    So the size should be:
    size = r.end - r.start + 1 = 0x20000000
    
    Signed-off-by: Xianting Tian <xianting.tian@linux.alibaba.com>
    Fixes: 072f1f9168ed ("drm/msm: add support for "stolen" mem")
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20220112123334.749776-1-xianting.tian@linux.alibaba.com
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4be8f4cddb5885b2fdb6ac666c18372168489183
Author: Jianguo Wu <wujianguo@chinatelecom.cn>
Date:   Fri Jan 21 17:15:31 2022 +0800

    net-procfs: show net devices bound packet types
    
    commit 1d10f8a1f40b965d449e8f2d5ed7b96a7c138b77 upstream.
    
    After commit:7866a621043f ("dev: add per net_device packet type chains"),
    we can not get packet types that are bound to a specified net device by
    /proc/net/ptype, this patch fix the regression.
    
    Run "tcpdump -i ens192 udp -nns0" Before and after apply this patch:
    
    Before:
      [root@localhost ~]# cat /proc/net/ptype
      Type Device      Function
      0800          ip_rcv
      0806          arp_rcv
      86dd          ipv6_rcv
    
    After:
      [root@localhost ~]# cat /proc/net/ptype
      Type Device      Function
      ALL  ens192   tpacket_rcv
      0800          ip_rcv
      0806          arp_rcv
      86dd          ipv6_rcv
    
    v1 -> v2:
      - fix the regression rather than adding new /proc API as
        suggested by Stephen Hemminger.
    
    Fixes: 7866a621043f ("dev: add per net_device packet type chains")
    Signed-off-by: Jianguo Wu <wujianguo@chinatelecom.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07a970dd3a176a5f4a123281dfbf14fc8035ade0
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Jan 6 18:24:03 2022 -0500

    NFSv4: nfs_atomic_open() can race when looking up a non-regular file
    
    commit 1751fc1db36f6f411709e143d5393f92d12137a9 upstream.
    
    If the file type changes back to being a regular file on the server
    between the failed OPEN and our LOOKUP, then we need to re-run the OPEN.
    
    Fixes: 0dd2b474d0b6 ("nfs: implement i_op->atomic_open()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b00b4c6faad0f21e443fb1584f7a8ea222beb0de
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Jan 6 18:24:02 2022 -0500

    NFSv4: Handle case where the lookup of a directory fails
    
    commit ac795161c93699d600db16c1a8cc23a65a1eceaf upstream.
    
    If the application sets the O_DIRECTORY flag, and tries to open a
    regular file, nfs_atomic_open() will punt to doing a regular lookup.
    If the server then returns a regular file, we will happily return a
    file descriptor with uninitialised open state.
    
    The fix is to return the expected ENOTDIR error in these cases.
    
    Reported-by: Lyu Tao <tao.lyu@epfl.ch>
    Fixes: 0dd2b474d0b6 ("nfs: implement i_op->atomic_open()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3e20f10c234a73e4423ae29b45c2e13c7802657
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Thu Jan 6 11:48:52 2022 -0800

    hwmon: (lm90) Reduce maximum conversion rate for G781
    
    [ Upstream commit a66c5ed539277b9f2363bbace0dba88b85b36c26 ]
    
    According to its datasheet, G781 supports a maximum conversion rate value
    of 8 (62.5 ms). However, chips labeled G781 and G780 were found to only
    support a maximum conversion rate value of 7 (125 ms). On the other side,
    chips labeled G781-1 and G784 were found to support a conversion rate value
    of 8. There is no known means to distinguish G780 from G781 or G784; all
    chips report the same manufacturer ID and chip revision.
    Setting the conversion rate register value to 8 on chips not supporting
    it causes unexpected behavior since the real conversion rate is set to 0
    (16 seconds) if a value of 8 is written into the conversion rate register.
    Limit the conversion rate register value to 7 for all G78x chips to avoid
    the problem.
    
    Fixes: ae544f64cc7b ("hwmon: (lm90) Add support for GMT G781")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb04c6d1ec67e30f3aa5ef82112cbfdbddfd4f65
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 26 17:10:22 2022 -0800

    ipv4: avoid using shared IP generator for connected sockets
    
    commit 23f57406b82de51809d5812afd96f210f8b627f3 upstream.
    
    ip_select_ident_segs() has been very conservative about using
    the connected socket private generator only for packets with IP_DF
    set, claiming it was needed for some VJ compression implementations.
    
    As mentioned in this referenced document, this can be abused.
    (Ref: Off-Path TCP Exploits of the Mixed IPID Assignment)
    
    Before switching to pure random IPID generation and possibly hurt
    some workloads, lets use the private inet socket generator.
    
    Not only this will remove one vulnerability, this will also
    improve performance of TCP flows using pmtudisc==IP_PMTUDISC_DONT
    
    Fixes: 73f156a6e8c1 ("inetpeer: get rid of ip_id_count")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Reported-by: Ray Che <xijiache@gmail.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a921507836877c4e28084f7bfd35ac2608321268
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Jan 22 06:40:56 2022 -0500

    ping: fix the sk_bound_dev_if match in ping_lookup
    
    commit 2afc3b5a31f9edf3ef0f374f5d70610c79c93a42 upstream.
    
    When 'ping' changes to use PING socket instead of RAW socket by:
    
       # sysctl -w net.ipv4.ping_group_range="0 100"
    
    the selftests 'router_broadcast.sh' will fail, as such command
    
      # ip vrf exec vrf-h1 ping -I veth0 198.51.100.255 -b
    
    can't receive the response skb by the PING socket. It's caused by mismatch
    of sk_bound_dev_if and dif in ping_rcv() when looking up the PING socket,
    as dif is vrf-h1 if dif's master was set to vrf-h1.
    
    This patch is to fix this regression by also checking the sk_bound_dev_if
    against sdif so that the packets can stil be received even if the socket
    is not bound to the vrf device but to the real iif.
    
    Fixes: c319b4d76b9e ("net: ipv4: add IPPROTO_ICMP socket kind")
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b67ad6170c0ea87391bb253f35d1f78857736e54
Author: Congyu Liu <liu3101@purdue.edu>
Date:   Tue Jan 18 14:20:13 2022 -0500

    net: fix information leakage in /proc/net/ptype
    
    commit 47934e06b65637c88a762d9c98329ae6e3238888 upstream.
    
    In one net namespace, after creating a packet socket without binding
    it to a device, users in other net namespaces can observe the new
    `packet_type` added by this packet socket by reading `/proc/net/ptype`
    file. This is minor information leakage as packet socket is
    namespace aware.
    
    Add a net pointer in `packet_type` to keep the net namespace of
    of corresponding packet socket. In `ptype_seq_show`, this net pointer
    must be checked when it is not NULL.
    
    Fixes: 2feb27dbe00c ("[NETNS]: Minor information leak via /proc/net/ptype file.")
    Signed-off-by: Congyu Liu <liu3101@purdue.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3e01ed702c7b5f5d306c2ef566d30b84aa57126
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Thu Jan 20 10:05:46 2022 +0200

    ipv6_tunnel: Rate limit warning messages
    
    commit 6cee105e7f2ced596373951d9ea08dacc3883c68 upstream.
    
    The warning messages can be invoked from the data path for every packet
    transmitted through an ip6gre netdev, leading to high CPU utilization.
    
    Fix that by rate limiting the messages.
    
    Fixes: 09c6bbf090ec ("[IPV6]: Do mandatory IPv6 tunnel endpoint checks in realtime")
    Reported-by: Maksym Yaremchuk <maksymy@nvidia.com>
    Tested-by: Maksym Yaremchuk <maksymy@nvidia.com>
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: Amit Cohen <amcohen@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de6336b17a1376db1c0f7a528cce8783db0881c0
Author: John Meneghini <jmeneghi@redhat.com>
Date:   Fri Jan 14 23:00:44 2022 -0500

    scsi: bnx2fc: Flush destroy_work queue before calling bnx2fc_interface_put()
    
    commit 847f9ea4c5186fdb7b84297e3eeed9e340e83fce upstream.
    
    The bnx2fc_destroy() functions are removing the interface before calling
    destroy_work. This results multiple WARNings from sysfs_remove_group() as
    the controller rport device attributes are removed too early.
    
    Replace the fcoe_port's destroy_work queue. It's not needed.
    
    The problem is easily reproducible with the following steps.
    
    Example:
    
      $ dmesg -w &
      $ systemctl enable --now fcoe
      $ fipvlan -s -c ens2f1
      $ fcoeadm -d ens2f1.802
      [  583.464488] host2: libfc: Link down on port (7500a1)
      [  583.472651] bnx2fc: 7500a1 - rport not created Yet!!
      [  583.490468] ------------[ cut here ]------------
      [  583.538725] sysfs group 'power' not found for kobject 'rport-2:0-0'
      [  583.568814] WARNING: CPU: 3 PID: 192 at fs/sysfs/group.c:279 sysfs_remove_group+0x6f/0x80
      [  583.607130] Modules linked in: dm_service_time 8021q garp mrp stp llc bnx2fc cnic uio rpcsec_gss_krb5 auth_rpcgss nfsv4 ...
      [  583.942994] CPU: 3 PID: 192 Comm: kworker/3:2 Kdump: loaded Not tainted 5.14.0-39.el9.x86_64 #1
      [  583.984105] Hardware name: HP ProLiant DL120 G7, BIOS J01 07/01/2013
      [  584.016535] Workqueue: fc_wq_2 fc_rport_final_delete [scsi_transport_fc]
      [  584.050691] RIP: 0010:sysfs_remove_group+0x6f/0x80
      [  584.074725] Code: ff 5b 48 89 ef 5d 41 5c e9 ee c0 ff ff 48 89 ef e8 f6 b8 ff ff eb d1 49 8b 14 24 48 8b 33 48 c7 c7 ...
      [  584.162586] RSP: 0018:ffffb567c15afdc0 EFLAGS: 00010282
      [  584.188225] RAX: 0000000000000000 RBX: ffffffff8eec4220 RCX: 0000000000000000
      [  584.221053] RDX: ffff8c1586ce84c0 RSI: ffff8c1586cd7cc0 RDI: ffff8c1586cd7cc0
      [  584.255089] RBP: 0000000000000000 R08: 0000000000000000 R09: ffffb567c15afc00
      [  584.287954] R10: ffffb567c15afbf8 R11: ffffffff8fbe7f28 R12: ffff8c1486326400
      [  584.322356] R13: ffff8c1486326480 R14: ffff8c1483a4a000 R15: 0000000000000004
      [  584.355379] FS:  0000000000000000(0000) GS:ffff8c1586cc0000(0000) knlGS:0000000000000000
      [  584.394419] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [  584.421123] CR2: 00007fe95a6f7840 CR3: 0000000107674002 CR4: 00000000000606e0
      [  584.454888] Call Trace:
      [  584.466108]  device_del+0xb2/0x3e0
      [  584.481701]  device_unregister+0x13/0x60
      [  584.501306]  bsg_unregister_queue+0x5b/0x80
      [  584.522029]  bsg_remove_queue+0x1c/0x40
      [  584.541884]  fc_rport_final_delete+0xf3/0x1d0 [scsi_transport_fc]
      [  584.573823]  process_one_work+0x1e3/0x3b0
      [  584.592396]  worker_thread+0x50/0x3b0
      [  584.609256]  ? rescuer_thread+0x370/0x370
      [  584.628877]  kthread+0x149/0x170
      [  584.643673]  ? set_kthread_struct+0x40/0x40
      [  584.662909]  ret_from_fork+0x22/0x30
      [  584.680002] ---[ end trace 53575ecefa942ece ]---
    
    Link: https://lore.kernel.org/r/20220115040044.1013475-1-jmeneghi@redhat.com
    Fixes: 0cbf32e1681d ("[SCSI] bnx2fc: Avoid calling bnx2fc_if_destroy with unnecessary locks")
    Tested-by: Guangwu Zhang <guazhang@redhat.com>
    Co-developed-by: Maurizio Lombardi <mlombard@redhat.com>
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Signed-off-by: John Meneghini <jmeneghi@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4305697de7b19b594b51cd9d6ceb31e298bd8c2b
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Mon Jan 10 10:47:37 2022 -0800

    rpmsg: char: Fix race between the release of rpmsg_eptdev and cdev
    
    commit 7a534ae89e34e9b51acb5a63dd0f88308178b46a upstream.
    
    struct rpmsg_eptdev contains a struct cdev. The current code frees
    the rpmsg_eptdev struct in rpmsg_eptdev_destroy(), but the cdev is
    a managed object, therefore its release is not predictable and the
    rpmsg_eptdev could be freed before the cdev is entirely released.
    
    The cdev_device_add/del() API was created to address this issue
    (see commit '233ed09d7fda ("chardev: add helper function to register
    char devs with a struct device")'), use it instead of cdev add/del().
    
    Fixes: c0cdc19f84a4 ("rpmsg: Driver for user space endpoint interface")
    Suggested-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Reviewed-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220110104706.v6.2.Idde68b05b88d4a2e6e54766c653f3a6d9e419ce6@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70cb4295ec806b663665e1d2ed15caab6159880e
Author: Sujit Kautkar <sujitka@chromium.org>
Date:   Mon Jan 10 10:47:36 2022 -0800

    rpmsg: char: Fix race between the release of rpmsg_ctrldev and cdev
    
    commit b7fb2dad571d1e21173c06cef0bced77b323990a upstream.
    
    struct rpmsg_ctrldev contains a struct cdev. The current code frees
    the rpmsg_ctrldev struct in rpmsg_ctrldev_release_device(), but the
    cdev is a managed object, therefore its release is not predictable
    and the rpmsg_ctrldev could be freed before the cdev is entirely
    released, as in the backtrace below.
    
    [   93.625603] ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0/0x7c
    [   93.636115] WARNING: CPU: 0 PID: 12 at lib/debugobjects.c:488 debug_print_object+0x13c/0x1b0
    [   93.644799] Modules linked in: veth xt_cgroup xt_MASQUERADE rfcomm algif_hash algif_skcipher af_alg uinput ip6table_nat fuse uvcvideo videobuf2_vmalloc venus_enc venus_dec videobuf2_dma_contig hci_uart btandroid btqca snd_soc_rt5682_i2c bluetooth qcom_spmi_temp_alarm snd_soc_rt5682v
    [   93.715175] CPU: 0 PID: 12 Comm: kworker/0:1 Tainted: G    B             5.4.163-lockdep #26
    [   93.723855] Hardware name: Google Lazor (rev3 - 8) with LTE (DT)
    [   93.730055] Workqueue: events kobject_delayed_cleanup
    [   93.735271] pstate: 60c00009 (nZCv daif +PAN +UAO)
    [   93.740216] pc : debug_print_object+0x13c/0x1b0
    [   93.744890] lr : debug_print_object+0x13c/0x1b0
    [   93.749555] sp : ffffffacf5bc7940
    [   93.752978] x29: ffffffacf5bc7940 x28: dfffffd000000000
    [   93.758448] x27: ffffffacdb11a800 x26: dfffffd000000000
    [   93.763916] x25: ffffffd0734f856c x24: dfffffd000000000
    [   93.769389] x23: 0000000000000000 x22: ffffffd0733c35b0
    [   93.774860] x21: ffffffd0751994a0 x20: ffffffd075ec27c0
    [   93.780338] x19: ffffffd075199100 x18: 00000000000276e0
    [   93.785814] x17: 0000000000000000 x16: dfffffd000000000
    [   93.791291] x15: ffffffffffffffff x14: 6e6968207473696c
    [   93.796768] x13: 0000000000000000 x12: ffffffd075e2b000
    [   93.802244] x11: 0000000000000001 x10: 0000000000000000
    [   93.807723] x9 : d13400dff1921900 x8 : d13400dff1921900
    [   93.813200] x7 : 0000000000000000 x6 : 0000000000000000
    [   93.818676] x5 : 0000000000000080 x4 : 0000000000000000
    [   93.824152] x3 : ffffffd0732a0fa4 x2 : 0000000000000001
    [   93.829628] x1 : ffffffacf5bc7580 x0 : 0000000000000061
    [   93.835104] Call trace:
    [   93.837644]  debug_print_object+0x13c/0x1b0
    [   93.841963]  __debug_check_no_obj_freed+0x25c/0x3c0
    [   93.846987]  debug_check_no_obj_freed+0x18/0x20
    [   93.851669]  slab_free_freelist_hook+0xbc/0x1e4
    [   93.856346]  kfree+0xfc/0x2f4
    [   93.859416]  rpmsg_ctrldev_release_device+0x78/0xb8
    [   93.864445]  device_release+0x84/0x168
    [   93.868310]  kobject_cleanup+0x12c/0x298
    [   93.872356]  kobject_delayed_cleanup+0x10/0x18
    [   93.876948]  process_one_work+0x578/0x92c
    [   93.881086]  worker_thread+0x804/0xcf8
    [   93.884963]  kthread+0x2a8/0x314
    [   93.888303]  ret_from_fork+0x10/0x18
    
    The cdev_device_add/del() API was created to address this issue (see
    commit '233ed09d7fda ("chardev: add helper function to register char
    devs with a struct device")'), use it instead of cdev add/del().
    
    Fixes: c0cdc19f84a4 ("rpmsg: Driver for user space endpoint interface")
    Signed-off-by: Sujit Kautkar <sujitka@chromium.org>
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Reviewed-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220110104706.v6.1.Iaac908f3e3149a89190ce006ba166e2d3fd247a3@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8549592f8903893c93f2466f0151d6103d830d9
Author: Joe Damato <jdamato@fastly.com>
Date:   Wed Dec 8 17:56:33 2021 -0800

    i40e: fix unsigned stat widths
    
    commit 3b8428b84539c78fdc8006c17ebd25afd4722d51 upstream.
    
    Change i40e_update_vsi_stats and struct i40e_vsi to use u64 fields to match
    the width of the stats counters in struct i40e_rx_queue_stats.
    
    Update debugfs code to use the correct format specifier for u64.
    
    Fixes: 41c445ff0f48 ("i40e: main driver core")
    Signed-off-by: Joe Damato <jdamato@fastly.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Tested-by: Gurucharan G <gurucharanx.g@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d46fa4ea9756ef6cbcf9752d0832cc66e2d7121b
Author: Sylwester Dziedziuch <sylwesterx.dziedziuch@intel.com>
Date:   Fri Nov 26 11:11:22 2021 +0100

    i40e: Fix queues reservation for XDP
    
    commit 92947844b8beee988c0ce17082b705c2f75f0742 upstream.
    
    When XDP was configured on a system with large number of CPUs
    and X722 NIC there was a call trace with NULL pointer dereference.
    
    i40e 0000:87:00.0: failed to get tracking for 256 queues for VSI 0 err -12
    i40e 0000:87:00.0: setup of MAIN VSI failed
    
    BUG: kernel NULL pointer dereference, address: 0000000000000000
    RIP: 0010:i40e_xdp+0xea/0x1b0 [i40e]
    Call Trace:
    ? i40e_reconfig_rss_queues+0x130/0x130 [i40e]
    dev_xdp_install+0x61/0xe0
    dev_xdp_attach+0x18a/0x4c0
    dev_change_xdp_fd+0x1e6/0x220
    do_setlink+0x616/0x1030
    ? ahci_port_stop+0x80/0x80
    ? ata_qc_issue+0x107/0x1e0
    ? lock_timer_base+0x61/0x80
    ? __mod_timer+0x202/0x380
    rtnl_setlink+0xe5/0x170
    ? bpf_lsm_binder_transaction+0x10/0x10
    ? security_capable+0x36/0x50
    rtnetlink_rcv_msg+0x121/0x350
    ? rtnl_calcit.isra.0+0x100/0x100
    netlink_rcv_skb+0x50/0xf0
    netlink_unicast+0x1d3/0x2a0
    netlink_sendmsg+0x22a/0x440
    sock_sendmsg+0x5e/0x60
    __sys_sendto+0xf0/0x160
    ? __sys_getsockname+0x7e/0xc0
    ? _copy_from_user+0x3c/0x80
    ? __sys_setsockopt+0xc8/0x1a0
    __x64_sys_sendto+0x20/0x30
    do_syscall_64+0x33/0x40
    entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f83fa7a39e0
    
    This was caused by PF queue pile fragmentation due to
    flow director VSI queue being placed right after main VSI.
    Because of this main VSI was not able to resize its
    queue allocation for XDP resulting in no queues allocated
    for main VSI when XDP was turned on.
    
    Fix this by always allocating last queue in PF queue pile
    for a flow director VSI.
    
    Fixes: 41c445ff0f48 ("i40e: main driver core")
    Fixes: 74608d17fe29 ("i40e: add support for XDP_TX action")
    Signed-off-by: Sylwester Dziedziuch <sylwesterx.dziedziuch@intel.com>
    Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
    Reviewed-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
    Tested-by: Kiran Bhandare <kiranx.bhandare@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8783ee715b8e049c2a8ee6b4d16f714ffb58e9ee
Author: Jedrzej Jagielski <jedrzej.jagielski@intel.com>
Date:   Fri Nov 5 11:17:00 2021 +0000

    i40e: Fix issue when maximum queues is exceeded
    
    commit d701658a50a471591094b3eb3961b4926cc8f104 upstream.
    
    Before this patch VF interface vanished when
    maximum queue number was exceeded. Driver tried
    to add next queues even if there was not enough
    space. PF sent incorrect number of queues to
    the VF when there were not enough of them.
    
    Add an additional condition introduced to check
    available space in 'qp_pile' before proceeding.
    This condition makes it impossible to add queues
    if they number is greater than the number resulting
    from available space.
    Also add the search for free space in PF queue
    pair piles.
    
    Without this patch VF interfaces are not seen
    when available space for queues has been
    exceeded and following logs appears permanently
    in dmesg:
    "Unable to get VF config (-32)".
    "VF 62 failed opcode 3, retval: -5"
    "Unable to get VF config due to PF error condition, not retrying"
    
    Fixes: 7daa6bf3294e ("i40e: driver core headers")
    Fixes: 41c445ff0f48 ("i40e: main driver core")
    Signed-off-by: Jaroslaw Gawin <jaroslawx.gawin@intel.com>
    Signed-off-by: Slawomir Laba <slawomirx.laba@intel.com>
    Signed-off-by: Jedrzej Jagielski <jedrzej.jagielski@intel.com>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 866028ed8eae2c1283bf8aeb2e1969f5c8d80aa2
Author: Jedrzej Jagielski <jedrzej.jagielski@intel.com>
Date:   Thu Oct 28 13:51:14 2021 +0000

    i40e: Increase delay to 1 s after global EMP reset
    
    commit 9b13bd53134c9ddd544a790125199fdbdb505e67 upstream.
    
    Recently simplified i40e_rebuild causes that FW sometimes
    is not ready after NVM update, the ping does not return.
    
    Increase the delay in case of EMP reset.
    Old delay of 300 ms was introduced for specific cards for 710 series.
    Now it works for all the cards and delay was increased.
    
    Fixes: 1fa51a650e1d ("i40e: Add delay after EMP reset for firmware to recover")
    Signed-off-by: Arkadiusz Kubalewski <arkadiusz.kubalewski@intel.com>
    Signed-off-by: Jedrzej Jagielski <jedrzej.jagielski@intel.com>
    Tested-by: Gurucharan G <gurucharanx.g@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49678489ffeecd55177f9fbabe536d16f2f1d390
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Wed Dec 22 13:07:31 2021 +0000

    powerpc/32: Fix boot failure with GCC latent entropy plugin
    
    commit bba496656a73fc1d1330b49c7f82843836e9feb1 upstream.
    
    Boot fails with GCC latent entropy plugin enabled.
    
    This is due to early boot functions trying to access 'latent_entropy'
    global data while the kernel is not relocated at its final
    destination yet.
    
    As there is no way to tell GCC to use PTRRELOC() to access it,
    disable latent entropy plugin in early_32.o and feature-fixups.o and
    code-patching.o
    
    Fixes: 38addce8b600 ("gcc-plugins: Add latent_entropy plugin")
    Cc: stable@vger.kernel.org # v4.9+
    Reported-by: Erhard Furtner <erhard_f@mailbox.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215217
    Link: https://lore.kernel.org/r/2bac55483b8daf5b1caa163a45fa5f9cdbe18be4.1640178426.git.christophe.leroy@csgroup.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5b894aedbf6065faa0dda0518e197ae73168257
Author: Marek Behún <kabel@kernel.org>
Date:   Wed Jan 19 17:44:55 2022 +0100

    net: sfp: ignore disabled SFP node
    
    commit 2148927e6ed43a1667baf7c2ae3e0e05a44b51a0 upstream.
    
    Commit ce0aa27ff3f6 ("sfp: add sfp-bus to bridge between network devices
    and sfp cages") added code which finds SFP bus DT node even if the node
    is disabled with status = "disabled". Because of this, when phylink is
    created, it ends with non-null .sfp_bus member, even though the SFP
    module is not probed (because the node is disabled).
    
    We need to ignore disabled SFP bus node.
    
    Fixes: ce0aa27ff3f6 ("sfp: add sfp-bus to bridge between network devices and sfp cages")
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org # 2203cbf2c8b5 ("net: sfp: move fwnode parsing into sfp-bus layer")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [ backport to 4.19 ]
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7a56e4d304d7a15525166910390cd33c339bf05
Author: Badhri Jagan Sridharan <badhri@google.com>
Date:   Fri Jan 21 17:55:19 2022 -0800

    usb: typec: tcpm: Do not disconnect while receiving VBUS off
    
    commit 90b8aa9f5b09edae6928c0561f933fec9f7a9987 upstream.
    
    With some chargers, vbus might momentarily raise above VSAFE5V and fall
    back to 0V before tcpm gets to read port->tcpc->get_vbus. This will
    will report a VBUS off event causing TCPM to transition to
    SNK_UNATTACHED where it should be waiting in either SNK_ATTACH_WAIT
    or SNK_DEBOUNCED state. This patch makes TCPM avoid vbus off events
    while in SNK_ATTACH_WAIT or SNK_DEBOUNCED state.
    
    Stub from the spec:
        "4.5.2.2.4.2 Exiting from AttachWait.SNK State
        A Sink shall transition to Unattached.SNK when the state of both
        the CC1 and CC2 pins is SNK.Open for at least tPDDebounce.
        A DRP shall transition to Unattached.SRC when the state of both
        the CC1 and CC2 pins is SNK.Open for at least tPDDebounce."
    
    [23.194131] CC1: 0 -> 0, CC2: 0 -> 5 [state SNK_UNATTACHED, polarity 0, connected]
    [23.201777] state change SNK_UNATTACHED -> SNK_ATTACH_WAIT [rev3 NONE_AMS]
    [23.209949] pending state change SNK_ATTACH_WAIT -> SNK_DEBOUNCED @ 170 ms [rev3 NONE_AMS]
    [23.300579] VBUS off
    [23.300668] state change SNK_ATTACH_WAIT -> SNK_UNATTACHED [rev3 NONE_AMS]
    [23.301014] VBUS VSAFE0V
    [23.301111] Start toggling
    
    Fixes: f0690a25a140b8 ("staging: typec: USB Type-C Port Manager (tcpm)")
    Cc: stable@vger.kernel.org
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Badhri Jagan Sridharan <badhri@google.com>
    Link: https://lore.kernel.org/r/20220122015520.332507-1-badhri@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5904dfd3ddaff3bf4a41c3baf0a8e8f31ed4599b
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Jan 24 15:23:45 2022 -0500

    USB: core: Fix hang in usb_kill_urb by adding memory barriers
    
    commit 26fbe9772b8c459687930511444ce443011f86bf upstream.
    
    The syzbot fuzzer has identified a bug in which processes hang waiting
    for usb_kill_urb() to return.  It turns out the issue is not unlinking
    the URB; that works just fine.  Rather, the problem arises when the
    wakeup notification that the URB has completed is not received.
    
    The reason is memory-access ordering on SMP systems.  In outline form,
    usb_kill_urb() and __usb_hcd_giveback_urb() operating concurrently on
    different CPUs perform the following actions:
    
    CPU 0                                   CPU 1
    ----------------------------            ---------------------------------
    usb_kill_urb():                         __usb_hcd_giveback_urb():
      ...                                     ...
      atomic_inc(&urb->reject);               atomic_dec(&urb->use_count);
      ...                                     ...
      wait_event(usb_kill_urb_queue,
            atomic_read(&urb->use_count) == 0);
                                              if (atomic_read(&urb->reject))
                                                    wake_up(&usb_kill_urb_queue);
    
    Confining your attention to urb->reject and urb->use_count, you can
    see that the overall pattern of accesses on CPU 0 is:
    
            write urb->reject, then read urb->use_count;
    
    whereas the overall pattern of accesses on CPU 1 is:
    
            write urb->use_count, then read urb->reject.
    
    This pattern is referred to in memory-model circles as SB (for "Store
    Buffering"), and it is well known that without suitable enforcement of
    the desired order of accesses -- in the form of memory barriers -- it
    is entirely possible for one or both CPUs to execute their reads ahead
    of their writes.  The end result will be that sometimes CPU 0 sees the
    old un-decremented value of urb->use_count while CPU 1 sees the old
    un-incremented value of urb->reject.  Consequently CPU 0 ends up on
    the wait queue and never gets woken up, leading to the observed hang
    in usb_kill_urb().
    
    The same pattern of accesses occurs in usb_poison_urb() and the
    failure pathway of usb_hcd_submit_urb().
    
    The problem is fixed by adding suitable memory barriers.  To provide
    proper memory-access ordering in the SB pattern, a full barrier is
    required on both CPUs.  The atomic_inc() and atomic_dec() accesses
    themselves don't provide any memory ordering, but since they are
    present, we can use the optimized smp_mb__after_atomic() memory
    barrier in the various routines to obtain the desired effect.
    
    This patch adds the necessary memory barriers.
    
    CC: <stable@vger.kernel.org>
    Reported-and-tested-by: syzbot+76629376e06e2c2ad626@syzkaller.appspotmail.com
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/Ye8K0QYee0Q0Nna2@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ad9bf965b1c85248ec4eefdf79df3e0f3a3c9a7
Author: Pavankumar Kondeti <quic_pkondeti@quicinc.com>
Date:   Sat Jan 22 08:33:22 2022 +0530

    usb: gadget: f_sourcesink: Fix isoc transfer for USB_SPEED_SUPER_PLUS
    
    commit 904edf8aeb459697129be5fde847e2a502f41fd9 upstream.
    
    Currently when gadget enumerates in super speed plus, the isoc
    endpoint request buffer size is not calculated correctly. Fix
    this by checking the gadget speed against USB_SPEED_SUPER_PLUS
    and update the request buffer size.
    
    Fixes: 90c4d05780d4 ("usb: fix various gadgets null ptr deref on 10gbps cabling.")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Pavankumar Kondeti <quic_pkondeti@quicinc.com>
    Link: https://lore.kernel.org/r/1642820602-20619-1-git-send-email-quic_pkondeti@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 901a7d44467def62b15de24117567f2e5e2070e9
Author: Jon Hunter <jonathanh@nvidia.com>
Date:   Mon Jan 17 15:00:39 2022 +0000

    usb: common: ulpi: Fix crash in ulpi_match()
    
    commit 2e3dd4a6246945bf84ea6f478365d116e661554c upstream.
    
    Commit 7495af930835 ("ARM: multi_v7_defconfig: Enable drivers for
    DragonBoard 410c") enables the CONFIG_PHY_QCOM_USB_HS for the ARM
    multi_v7_defconfig. Enabling this Kconfig is causing the kernel to crash
    on the Tegra20 Ventana platform in the ulpi_match() function.
    
    The Qualcomm USB HS PHY driver that is enabled by CONFIG_PHY_QCOM_USB_HS,
    registers a ulpi_driver but this driver does not provide an 'id_table',
    so when ulpi_match() is called on the Tegra20 Ventana platform, it
    crashes when attempting to deference the id_table pointer which is not
    valid. The Qualcomm USB HS PHY driver uses device-tree for matching the
    ULPI driver with the device and so fix this crash by using device-tree
    for matching if the id_table is not valid.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20220117150039.44058-1-jonathanh@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3093ce1f8d3acd2c7956394b493e2cd3082644d8
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Jan 24 15:14:40 2022 -0500

    usb-storage: Add unusual-devs entry for VL817 USB-SATA bridge
    
    commit 5b67b315037250a61861119683e7fcb509deea25 upstream.
    
    Two people have reported (and mentioned numerous other reports on the
    web) that VIA's VL817 USB-SATA bridge does not work with the uas
    driver.  Typical log messages are:
    
    [ 3606.232149] sd 14:0:0:0: [sdg] tag#2 uas_zap_pending 0 uas-tag 1 inflight: CMD
    [ 3606.232154] sd 14:0:0:0: [sdg] tag#2 CDB: Write(16) 8a 00 00 00 00 00 18 0c c9 80 00 00 00 80 00 00
    [ 3606.306257] usb 4-4.4: reset SuperSpeed Plus Gen 2x1 USB device number 11 using xhci_hcd
    [ 3606.328584] scsi host14: uas_eh_device_reset_handler success
    
    Surprisingly, the devices do seem to work okay for some other people.
    The cause of the differing behaviors is not known.
    
    In the hope of getting the devices to work for the most users, even at
    the possible cost of degraded performance for some, this patch adds an
    unusual_devs entry for the VL817 to block it from binding to the uas
    driver by default.  Users will be able to override this entry by means
    of a module parameter, if they want.
    
    CC: <stable@vger.kernel.org>
    Reported-by: DocMAX <mail@vacharakis.de>
    Reported-and-tested-by: Thomas Weißschuh <linux@weissschuh.net>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/Ye8IsK2sjlEv1rqU@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c50f7ed0f32038295b1a5750fb0acf3f30b8b0a
Author: Cameron Williams <cang1@live.co.uk>
Date:   Mon Jan 24 09:42:23 2022 +0000

    tty: Add support for Brainboxes UC cards.
    
    commit 152d1afa834c84530828ee031cf07a00e0fc0b8c upstream.
    
    This commit adds support for the some of the Brainboxes PCI range of
    cards, including the UC-101, UC-235/246, UC-257, UC-268, UC-275/279,
    UC-302, UC-310, UC-313, UC-320/324, UC-346, UC-357, UC-368
    and UC-420/431.
    
    Signed-off-by: Cameron Williams <cang1@live.co.uk>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/AM5PR0202MB2564688493F7DD9B9C610827C45E9@AM5PR0202MB2564.eurprd02.prod.outlook.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47bc9be8d6d94a25a598b4056078925dd6d15851
Author: daniel.starke@siemens.com <daniel.starke@siemens.com>
Date:   Thu Jan 20 02:18:57 2022 -0800

    tty: n_gsm: fix SW flow control encoding/handling
    
    commit 8838b2af23caf1ff0610caef2795d6668a013b2d upstream.
    
    n_gsm is based on the 3GPP 07.010 and its newer version is the 3GPP 27.010.
    See https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=1516
    The changes from 07.010 to 27.010 are non-functional. Therefore, I refer to
    the newer 27.010 here. Chapter 5.2.7.3 states that DC1 (XON) and DC3 (XOFF)
    are the control characters defined in ISO/IEC 646. These shall be quoted if
    seen in the data stream to avoid interpretation as flow control characters.
    
    ISO/IEC 646 refers to the set of ISO standards described as the ISO
    7-bit coded character set for information interchange. Its final version
    is also known as ITU T.50.
    See https://www.itu.int/rec/T-REC-T.50-199209-I/en
    
    To abide the standard it is needed to quote DC1 and DC3 correctly if these
    are seen as data bytes and not as control characters. The current
    implementation already tries to enforce this but fails to catch all
    defined cases. 3GPP 27.010 chapter 5.2.7.3 clearly states that the most
    significant bit shall be ignored for DC1 and DC3 handling. The current
    implementation handles only the case with the most significant bit set 0.
    Cases in which DC1 and DC3 have the most significant bit set 1 are left
    unhandled.
    
    This patch fixes this by masking the data bytes with ISO_IEC_646_MASK (only
    the 7 least significant bits set 1) before comparing them with XON
    (a.k.a. DC1) and XOFF (a.k.a. DC3) when testing which byte values need
    quotation via byte stuffing.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220120101857.2509-1-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a41398a5a1a0dde794c65ef1fa6b2323e2db68bc
Author: Valentin Caron <valentin.caron@foss.st.com>
Date:   Tue Jan 11 17:44:41 2022 +0100

    serial: stm32: fix software flow control transfer
    
    commit 037b91ec7729524107982e36ec4b40f9b174f7a2 upstream.
    
    x_char is ignored by stm32_usart_start_tx() when xmit buffer is empty.
    
    Fix start_tx condition to allow x_char to be sent.
    
    Fixes: 48a6092fb41f ("serial: stm32-usart: Add STM32 USART Driver")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Signed-off-by: Valentin Caron <valentin.caron@foss.st.com>
    Link: https://lore.kernel.org/r/20220111164441.6178-3-valentin.caron@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff6cb8fc12edee1a4cfe5f2915b06a4d6a5f9d1f
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Wed Jan 12 13:42:14 2022 -0600

    serial: 8250: of: Fix mapped region size when using reg-offset property
    
    commit d06b1cf28297e27127d3da54753a3a01a2fa2f28 upstream.
    
    8250_of supports a reg-offset property which is intended to handle
    cases where the device registers start at an offset inside the region
    of memory allocated to the device. The Xilinx 16550 UART, for which this
    support was initially added, requires this. However, the code did not
    adjust the overall size of the mapped region accordingly, causing the
    driver to request an area of memory past the end of the device's
    allocation. For example, if the UART was allocated an address of
    0xb0130000, size of 0x10000 and reg-offset of 0x1000 in the device
    tree, the region of memory reserved was b0131000-b0140fff, which caused
    the driver for the region starting at b0140000 to fail to probe.
    
    Fix this by subtracting reg-offset from the mapped region size.
    
    Fixes: b912b5e2cfb3 ([POWERPC] Xilinx: of_serial support for Xilinx uart 16550.)
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Link: https://lore.kernel.org/r/20220112194214.881844-1-robert.hancock@calian.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a622b1fdfe1c725a6e9cf34d04e92f5c36a99606
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Wed Jan 5 16:09:57 2022 +0100

    netfilter: nft_payload: do not update layer 4 checksum when mangling fragments
    
    commit 4e1860a3863707e8177329c006d10f9e37e097a8 upstream.
    
    IP fragments do not come with the transport header, hence skip bogus
    layer 4 checksum updates.
    
    Fixes: 1814096980bb ("netfilter: nft_payload: layer 4 checksum adjustment for pseudoheader fields")
    Reported-and-tested-by: Steffen Weinreich <steve@weinreich.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcec3074de7ee346e0a576349923305b9d6b46f5
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Thu Jan 6 19:10:21 2022 +0100

    drm/etnaviv: relax submit size limits
    
    commit e3d26528e083e612314d4dcd713f3d5a26143ddc upstream.
    
    While all userspace tried to limit commandstreams to 64K in size,
    a bug in the Mesa driver lead to command streams of up to 128K
    being submitted. Allow those to avoid breaking existing userspace.
    
    Fixes: 6dfa2fab8ddd ("drm/etnaviv: limit submit sizes")
    Cc: stable@vger.kernel.org
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf94a8a3ff3d7aa06742f1beb5166fa45ba72122
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 13 19:44:20 2022 +0100

    PM: wakeup: simplify the output logic of pm_show_wakelocks()
    
    commit c9d967b2ce40d71e968eb839f36c936b8a9cf1ea upstream.
    
    The buffer handling in pm_show_wakelocks() is tricky, and hopefully
    correct.  Ensure it really is correct by using sysfs_emit_at() which
    handles all of the tricky string handling logic in a PAGE_SIZE buffer
    for us automatically as this is a sysfs file being read from.
    
    Reviewed-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a23a59717f9f01a49394488f515550f9382fbada
Author: Jan Kara <jack@suse.cz>
Date:   Mon Jan 17 18:22:13 2022 +0100

    udf: Fix NULL ptr deref when converting from inline format
    
    commit 7fc3b7c2981bbd1047916ade327beccb90994eee upstream.
    
    udf_expand_file_adinicb() calls directly ->writepage to write data
    expanded into a page. This however misses to setup inode for writeback
    properly and so we can crash on inode->i_wb dereference when submitting
    page for IO like:
    
      BUG: kernel NULL pointer dereference, address: 0000000000000158
      #PF: supervisor read access in kernel mode
    ...
      <TASK>
      __folio_start_writeback+0x2ac/0x350
      __block_write_full_page+0x37d/0x490
      udf_expand_file_adinicb+0x255/0x400 [udf]
      udf_file_write_iter+0xbe/0x1b0 [udf]
      new_sync_write+0x125/0x1c0
      vfs_write+0x28e/0x400
    
    Fix the problem by marking the page dirty and going through the standard
    writeback path to write the page. Strictly speaking we would not even
    have to write the page but we want to catch e.g. ENOSPC errors early.
    
    Reported-by: butt3rflyh4ck <butterflyhuangxx@gmail.com>
    CC: stable@vger.kernel.org
    Fixes: 52ebea749aae ("writeback: make backing_dev_info host cgroup-specific bdi_writebacks")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3740d41e7363374182a42f1621e06d5029c837d5
Author: Jan Kara <jack@suse.cz>
Date:   Tue Jan 18 09:57:25 2022 +0100

    udf: Restore i_lenAlloc when inode expansion fails
    
    commit ea8569194b43f0f01f0a84c689388542c7254a1f upstream.
    
    When we fail to expand inode from inline format to a normal format, we
    restore inode to contain the original inline formatting but we forgot to
    set i_lenAlloc back. The mismatch between i_lenAlloc and i_size was then
    causing further problems such as warnings and lost data down the line.
    
    Reported-by: butt3rflyh4ck <butterflyhuangxx@gmail.com>
    CC: stable@vger.kernel.org
    Fixes: 7e49b6f2480c ("udf: Convert UDF to new truncate calling sequence")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aff4a58b5a34f3df689195c7faf1c2a8fbc21017
Author: Steffen Maier <maier@linux.ibm.com>
Date:   Tue Jan 18 17:58:03 2022 +0100

    scsi: zfcp: Fix failed recovery on gone remote port with non-NPIV FCP devices
    
    commit 8c9db6679be4348b8aae108e11d4be2f83976e30 upstream.
    
    Suppose we have an environment with a number of non-NPIV FCP devices
    (virtual HBAs / FCP devices / zfcp "adapter"s) sharing the same physical
    FCP channel (HBA port) and its I_T nexus. Plus a number of storage target
    ports zoned to such shared channel. Now one target port logs out of the
    fabric causing an RSCN. Zfcp reacts with an ADISC ELS and subsequent port
    recovery depending on the ADISC result. This happens on all such FCP
    devices (in different Linux images) concurrently as they all receive a copy
    of this RSCN. In the following we look at one of those FCP devices.
    
    Requests other than FSF_QTCB_FCP_CMND can be slow until they get a
    response.
    
    Depending on which requests are affected by slow responses, there are
    different recovery outcomes. Here we want to fix failed recoveries on port
    or adapter level by avoiding recovery requests that can be slow.
    
    We need the cached N_Port_ID for the remote port "link" test with ADISC.
    Just before sending the ADISC, we now intentionally forget the old cached
    N_Port_ID. The idea is that on receiving an RSCN for a port, we have to
    assume that any cached information about this port is stale.  This forces a
    fresh new GID_PN [FC-GS] nameserver lookup on any subsequent recovery for
    the same port. Since we typically can still communicate with the nameserver
    efficiently, we now reach steady state quicker: Either the nameserver still
    does not know about the port so we stop recovery, or the nameserver already
    knows the port potentially with a new N_Port_ID and we can successfully and
    quickly perform open port recovery.  For the one case, where ADISC returns
    successfully, we re-initialize port->d_id because that case does not
    involve any port recovery.
    
    This also solves a problem if the storage WWPN quickly logs into the fabric
    again but with a different N_Port_ID. Such as on virtual WWPN takeover
    during target NPIV failover.
    [https://www.redbooks.ibm.com/abstracts/redp5477.html] In that case the
    RSCN from the storage FDISC was ignored by zfcp and we could not
    successfully recover the failover. On some later failback on the storage,
    we could have been lucky if the virtual WWPN got the same old N_Port_ID
    from the SAN switch as we still had cached.  Then the related RSCN
    triggered a successful port reopen recovery.  However, there is no
    guarantee to get the same N_Port_ID on NPIV FDISC.
    
    Even though NPIV-enabled FCP devices are not affected by this problem, this
    code change optimizes recovery time for gone remote ports as a side effect.
    The timely drop of cached N_Port_IDs prevents unnecessary slow open port
    attempts.
    
    While the problem might have been in code before v2.6.32 commit
    799b76d09aee ("[SCSI] zfcp: Decouple gid_pn requests from erp") this fix
    depends on the gid_pn_work introduced with that commit, so we mark it as
    culprit to satisfy fix dependencies.
    
    Note: Point-to-point remote port is already handled separately and gets its
    N_Port_ID from the cached peer_d_id. So resetting port->d_id in general
    does not affect PtP.
    
    Link: https://lore.kernel.org/r/20220118165803.3667947-1-maier@linux.ibm.com
    Fixes: 799b76d09aee ("[SCSI] zfcp: Decouple gid_pn requests from erp")
    Cc: <stable@vger.kernel.org> #2.6.32+
    Suggested-by: Benjamin Block <bblock@linux.ibm.com>
    Reviewed-by: Benjamin Block <bblock@linux.ibm.com>
    Signed-off-by: Steffen Maier <maier@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9740a6bcb5e672d86a9bde754491e3f2d1563273
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Thu Jan 20 16:23:19 2022 +0100

    s390/hypfs: include z/VM guests with access control group set
    
    commit 663d34c8df98740f1e90241e78e456d00b3c6cad upstream.
    
    Currently if z/VM guest is allowed to retrieve hypervisor performance
    data globally for all guests (privilege class B) the query is formed in a
    way to include all guests but the group name is left empty. This leads to
    that z/VM guests which have access control group set not being included
    in the results (even local vm).
    
    Change the query group identifier from empty to "any" to retrieve
    information about all guests from any groups (or without a group set).
    
    Cc: stable@vger.kernel.org
    Fixes: 31cb4bd31a48 ("[S390] Hypervisor filesystem (s390_hypfs) for z/VM")
    Reviewed-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8819f93cd4a443dfe547aa622b21f723757df3fb
Author: Brian Gix <brian.gix@intel.com>
Date:   Wed Nov 24 12:16:28 2021 -0800

    Bluetooth: refactor malicious adv data check
    
    commit 899663be5e75dc0174dc8bda0b5e6826edf0b29a upstream.
    
    Check for out-of-bound read was being performed at the end of while
    num_reports loop, and would fill journal with false positives. Added
    check to beginning of loop processing so that it doesn't get checked
    after ptr has been advanced.
    
    Signed-off-by: Brian Gix <brian.gix@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: syphyr <syphyr@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f272db932d006848b88f563d19022327276e0d38
Author: Ziyuan Xu <xzy.xu@rock-chips.com>
Date:   Mon Feb 7 10:40:29 2022 +0800

    soc: rockchip: thunderboot_mmc: make sense of the *free_reserved_area*
    
    Signed-off-by: Ziyuan Xu <xzy.xu@rock-chips.com>
    Change-Id: I5470dadd845c706cae305f8f60b721b9904a7ddb

commit b73481650327d42fab656712cf60826ed1411244
Author: Ziyuan Xu <xzy.xu@rock-chips.com>
Date:   Mon Feb 7 10:43:46 2022 +0800

    mmc: free the available reserved memory of escd when CONFIG_ROCKCHIP_THUNDER_BOOT=y
    
    Signed-off-by: Ziyuan Xu <xzy.xu@rock-chips.com>
    Change-Id: I77c69d579c9121adde94ffc2e68514a9fd34e870

commit fd43d50b2ca862e9b1c84ff365142eebbe2c6a08
Author: Wang Jie <dave.wang@rock-chips.com>
Date:   Tue Feb 8 09:40:41 2022 +0800

    usb: typec: tcpm: husb311: disable i2c timeout reset function
    
    According to the description of the I2C_RESET(0x9E) register in
    the husb311 datasheet, the main configuration is enable/disable
    i2c timeout reset function(bit[7]) and i2c timeout time(bit[3:0]).
    
    If the i2c timeout reset function is enabled, the husb311 will perform
    a soft reset in some cases, such as system hibernation, and close the
    i2c bus (SCL and SDA are low at the same time). So we disable the i2c
    timeout reset function.
    
    Change-Id: Id9169f3ecf65725a959aadda9d2f8f60f20c87a3
    Signed-off-by: Wang Jie <dave.wang@rock-chips.com>

commit 69be2ccce366f9ef3eec5cd1c9b8bfb3e1c2d16d
Author: Alistair Delva <adelva@google.com>
Date:   Mon Feb 7 10:30:55 2022 -0800

    ANDROID: Increase x86 cmdline size to 4k
    
    Recently we have started adding more things to kernel command line with
    the new bootloader able to pass through crosvm built-in cmdline, and on
    4.19 this causes problems because all bootconfig keys are also passed as
    cmdline, exceeding the 2048 byte limit. This causes cmdline truncation
    which dumps the device in recovery mode. Bump it up until we can turn
    this testing down.
    
    Bug: 217879977
    Signed-off-by: Alistair Delva <adelva@google.com>
    Change-Id: If341f72394de879d43da5206675d21683495d1d0

commit a2429bd75fe959e3bf866aa5005606031b5c16be
Author: Tadeusz Struk <tadeusz.struk@linaro.org>
Date:   Wed Jan 26 13:09:39 2022 -0800

    ANDROID: incremental-fs: remove index and incomplete dir on umount
    
    Cleanup incremental-fs left overs on umount, otherwise incr-fs will
    complain as below:
    
    BUG: Dentry {i=47a,n=.incomplete} still in use [unmount of incremental-fs]
    
    This requires vfs_rmdir() of the special index dir.
    Since set_anon_super() was used in incfs_mount_fs() the incfs_kill_sb()
    should use kill_anon_super() instead of generic_shutdown_super()
    otherwise it will leak the pseudo dev_t that set_anon_super() allocates.
    
    Bug: 211066171
    
    Signed-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>
    Change-Id: I7ea54db63513fc130e1997cbf79121015ee12405

commit a0e42d1642d70466f42102966d5934a20c725952
Merge: ee259c6c2f5a f4b1bd6d9c2e
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Tue Feb 1 19:05:44 2022 +0100

    Merge 4.19.227 into android-4.19-stable
    
    Changes in 4.19.227
            drm/i915: Flush TLBs before releasing backing store
            net: bridge: clear bridge's private skb space on xmit
            select: Fix indefinitely sleeping task in poll_schedule_timeout()
            drm/vmwgfx: Fix stale file descriptors on failed usercopy
            Linux 4.19.227
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I6c614263af5682f536780b71e61b7b19710c5e6b

commit ee259c6c2f5ae3556ae8a2e79b433bc5aac9e643
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Mon Jan 31 13:09:21 2022 +0100

    Revert "ASoC: dpcm: prevent snd_soc_dpcm use after free"
    
    This reverts commit 71dc356a363a3fca914ea4b35af0668d6c83b9b2 which is
    commit a9764869779081e8bf24da07ac040e8f3efcf13a upstream.  It is needed
    for Android but in this format, it breaks the ABI.  An ABI-stable
    version will be added back to the tree in a later change.
    
    Fixes: 71dc356a363a ("ASoC: dpcm: prevent snd_soc_dpcm use after free")
    Cc: Will McVicker <willmcvicker@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: I11e394d57418cd35de0801e34ba479ffce3eb81d

commit 464464ac477367b19a3bc2a991ad0510d108f6df
Merge: b45c5eeda8de c8855e990a67
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Mon Jan 31 12:56:43 2022 +0100

    Merge 4.19.226 into android-4.19-stable
    
    Changes in 4.19.226
            Bluetooth: bfusb: fix division by zero in send path
            USB: core: Fix bug in resuming hub's handling of wakeup requests
            USB: Fix "slab-out-of-bounds Write" bug in usb_hcd_poll_rh_status
            can: bcm: switch timer to HRTIMER_MODE_SOFT and remove hrtimer_tasklet
            veth: Do not record rx queue hint in veth_xmit
            mfd: intel-lpss: Fix too early PM enablement in the ACPI ->probe()
            can: gs_usb: fix use of uninitialized variable, detach device on reception of invalid USB data
            can: gs_usb: gs_can_start_xmit(): zero-initialize hf->{flags,reserved}
            random: fix data race on crng_node_pool
            random: fix data race on crng init time
            staging: wlan-ng: Avoid bitwise vs logical OR warning in hfa384x_usb_throttlefn()
            drm/i915: Avoid bitwise vs logical OR warning in snb_wm_latency_quirk()
            kbuild: Add $(KBUILD_HOSTLDFLAGS) to 'has_libelf' test
            orangefs: Fix the size of a memory allocation in orangefs_bufmap_alloc()
            KVM: s390: Clarify SIGP orders versus STOP/RESTART
            media: uvcvideo: fix division by zero at stream start
            rtlwifi: rtl8192cu: Fix WARNING when calling local_irq_restore() with interrupts enabled
            firmware: qemu_fw_cfg: fix sysfs information leak
            firmware: qemu_fw_cfg: fix NULL-pointer deref on duplicate entries
            firmware: qemu_fw_cfg: fix kobject leak in probe error path
            ALSA: hda/realtek - Fix silent output on Gigabyte X570 Aorus Master after reboot from Windows
            HID: uhid: Fix worker destroying device without any protection
            HID: wacom: Reset expected and received contact counts at the same time
            HID: wacom: Ignore the confidence flag when a touch is removed
            HID: wacom: Avoid using stale array indicies to read contact count
            f2fs: fix to do sanity check in is_alive()
            nfc: llcp: fix NULL error pointer dereference on sendmsg() after failed bind()
            mtd: rawnand: gpmi: Remove explicit default gpmi clock setting for i.MX6
            x86/gpu: Reserve stolen memory for first integrated Intel GPU
            rtc: cmos: take rtc_lock while reading from CMOS
            media: flexcop-usb: fix control-message timeouts
            media: mceusb: fix control-message timeouts
            media: em28xx: fix control-message timeouts
            media: cpia2: fix control-message timeouts
            media: s2255: fix control-message timeouts
            media: dib0700: fix undefined behavior in tuner shutdown
            media: redrat3: fix control-message timeouts
            media: pvrusb2: fix control-message timeouts
            media: stk1160: fix control-message timeouts
            can: softing_cs: softingcs_probe(): fix memleak on registration failure
            lkdtm: Fix content of section containing lkdtm_rodata_do_nothing()
            PCI: Add function 1 DMA alias quirk for Marvell 88SE9125 SATA controller
            shmem: fix a race between shmem_unused_huge_shrink and shmem_evict_inode
            drm/panel: innolux-p079zca: Delete panel on attach() failure
            Bluetooth: cmtp: fix possible panic when cmtp_init_sockets() fails
            clk: bcm-2835: Pick the closest clock rate
            clk: bcm-2835: Remove rounding up the dividers
            wcn36xx: Indicate beacon not connection loss on MISSED_BEACON_IND
            wcn36xx: Release DMA channel descriptor allocations
            media: videobuf2: Fix the size printk format
            media: em28xx: fix memory leak in em28xx_init_dev
            arm64: dts: meson-gxbb-wetek: fix missing GPIO binding
            Bluetooth: stop proccessing malicious adv data
            tee: fix put order in teedev_close_context()
            media: dmxdev: fix UAF when dvb_register_device() fails
            crypto: qce - fix uaf on qce_ahash_register_one
            tty: serial: atmel: Check return code of dmaengine_submit()
            tty: serial: atmel: Call dma_async_issue_pending()
            media: rcar-csi2: Correct the selection of hsfreqrange
            media: si470x-i2c: fix possible memory leak in si470x_i2c_probe()
            media: mtk-vcodec: call v4l2_m2m_ctx_release first when file is released
            netfilter: bridge: add support for pppoe filtering
            arm64: dts: qcom: msm8916: fix MMC controller aliases
            drm/amdgpu: Fix a NULL pointer dereference in amdgpu_connector_lcd_native_mode()
            drm/radeon/radeon_kms: Fix a NULL pointer dereference in radeon_driver_open_kms()
            tty: serial: uartlite: allow 64 bit address
            serial: amba-pl011: do not request memory region twice
            floppy: Fix hang in watchdog when disk is ejected
            media: dib8000: Fix a memleak in dib8000_init()
            media: saa7146: mxb: Fix a NULL pointer dereference in mxb_attach()
            media: si2157: Fix "warm" tuner state detection
            sched/rt: Try to restart rt period timer when rt runtime exceeded
            xfrm: fix a small bug in xfrm_sa_len()
            crypto: stm32/cryp - fix double pm exit
            media: dw2102: Fix use after free
            media: msi001: fix possible null-ptr-deref in msi001_probe()
            media: coda/imx-vdoa: Handle dma_set_coherent_mask error codes
            drm/msm/dpu: fix safe status debugfs file
            xfrm: interface with if_id 0 should return error
            xfrm: state and policy should fail if XFRMA_IF_ID 0
            usb: ftdi-elan: fix memory leak on device disconnect
            ARM: dts: armada-38x: Add generic compatible to UART nodes
            mmc: meson-mx-sdio: add IRQ check
            x86/mce/inject: Avoid out-of-bounds write when setting flags
            pcmcia: rsrc_nonstatic: Fix a NULL pointer dereference in __nonstatic_find_io_region()
            pcmcia: rsrc_nonstatic: Fix a NULL pointer dereference in nonstatic_find_mem_region()
            netfilter: ipt_CLUSTERIP: fix refcount leak in clusterip_tg_check()
            ppp: ensure minimum packet size in ppp_write()
            staging: greybus: audio: Check null pointer
            fsl/fman: Check for null pointer after calling devm_ioremap
            Bluetooth: hci_bcm: Check for error irq
            spi: spi-meson-spifc: Add missing pm_runtime_disable() in meson_spifc_probe
            tpm: add request_locality before write TPM_INT_ENABLE
            can: softing: softing_startstop(): fix set but not used variable warning
            can: xilinx_can: xcan_probe(): check for error irq
            pcmcia: fix setting of kthread task states
            net: mcs7830: handle usb read errors properly
            ext4: avoid trim error on fs with small groups
            ALSA: jack: Add missing rwsem around snd_ctl_remove() calls
            ALSA: PCM: Add missing rwsem around snd_ctl_remove() calls
            ALSA: hda: Add missing rwsem around snd_ctl_remove() calls
            RDMA/hns: Validate the pkey index
            powerpc/prom_init: Fix improper check of prom_getprop()
            ASoC: uniphier: drop selecting non-existing SND_SOC_UNIPHIER_AIO_DMA
            ALSA: oss: fix compile error when OSS_DEBUG is enabled
            char/mwave: Adjust io port register size
            iommu/io-pgtable-arm: Fix table descriptor paddr formatting
            scsi: ufs: Fix race conditions related to driver data
            RDMA/core: Let ib_find_gid() continue search even after empty entry
            ASoC: rt5663: Handle device_property_read_u32_array error codes
            dmaengine: pxa/mmp: stop referencing config->slave_id
            iommu/iova: Fix race between FQ timeout and teardown
            ASoC: mediatek: Check for error clk pointer
            ASoC: samsung: idma: Check of ioremap return value
            misc: lattice-ecp3-config: Fix task hung when firmware load failed
            mips: lantiq: add support for clk_set_parent()
            mips: bcm63xx: add support for clk_set_parent()
            RDMA/cxgb4: Set queue pair state when being queried
            Bluetooth: Fix debugfs entry leak in hci_register_dev()
            fs: dlm: filter user dlm messages for kernel locks
            ar5523: Fix null-ptr-deref with unexpected WDCMSG_TARGET_START reply
            drm/nouveau/pmu/gm200-: avoid touching PMU outside of DEVINIT/PREOS/ACR
            usb: gadget: f_fs: Use stream_open() for endpoint files
            HID: apple: Do not reset quirks when the Fn key is not found
            media: b2c2: Add missing check in flexcop_pci_isr:
            mlxsw: pci: Add shutdown method in PCI driver
            drm/bridge: megachips: Ensure both bridges are probed before registration
            gpiolib: acpi: Do not set the IRQ type if the IRQ is already in use
            HSI: core: Fix return freed object in hsi_new_client
            mwifiex: Fix skb_over_panic in mwifiex_usb_recv()
            rsi: Fix out-of-bounds read in rsi_read_pkt()
            usb: uhci: add aspeed ast2600 uhci support
            floppy: Add max size check for user space request
            media: uvcvideo: Increase UVC_CTRL_CONTROL_TIMEOUT to 5 seconds.
            media: saa7146: hexium_orion: Fix a NULL pointer dereference in hexium_attach()
            media: m920x: don't use stack on USB reads
            iwlwifi: mvm: synchronize with FW after multicast commands
            ath10k: Fix tx hanging
            net-sysfs: update the queue counts in the unregistration path
            x86/mce: Mark mce_panic() noinstr
            x86/mce: Mark mce_end() noinstr
            x86/mce: Mark mce_read_aux() noinstr
            net: bonding: debug: avoid printing debug logs when bond is not notifying peers
            bpf: Do not WARN in bpf_warn_invalid_xdp_action()
            HID: quirks: Allow inverting the absolute X/Y values
            media: igorplugusb: receiver overflow should be reported
            media: saa7146: hexium_gemini: Fix a NULL pointer dereference in hexium_attach()
            mmc: core: Fixup storing of OCR for MMC_QUIRK_NONSTD_SDIO
            audit: ensure userspace is penalized the same as the kernel when under pressure
            arm64: tegra: Adjust length of CCPLEX cluster MMIO region
            usb: hub: Add delay for SuperSpeed hub resume to let links transit to U0
            ath9k: Fix out-of-bound memcpy in ath9k_hif_usb_rx_stream
            iwlwifi: fix leaks/bad data after failed firmware load
            iwlwifi: remove module loading failure message
            iwlwifi: mvm: Fix calculation of frame length
            um: registers: Rename function names to avoid conflicts and build problems
            jffs2: GC deadlock reading a page that is used in jffs2_write_begin()
            ACPICA: actypes.h: Expand the ACPI_ACCESS_ definitions
            ACPICA: Utilities: Avoid deleting the same object twice in a row
            ACPICA: Executer: Fix the REFCLASS_REFOF case in acpi_ex_opcode_1A_0T_1R()
            ACPICA: Hardware: Do not flush CPU cache when entering S4 and S5
            drm/amdgpu: fixup bad vram size on gmc v8
            ACPI: battery: Add the ThinkPad "Not Charging" quirk
            btrfs: remove BUG_ON() in find_parent_nodes()
            btrfs: remove BUG_ON(!eie) in find_parent_nodes
            net: mdio: Demote probed message to debug print
            mac80211: allow non-standard VHT MCS-10/11
            dm btree: add a defensive bounds check to insert_at()
            dm space map common: add bounds check to sm_ll_lookup_bitmap()
            net: phy: marvell: configure RGMII delays for 88E1118
            net: gemini: allow any RGMII interface mode
            regulator: qcom_smd: Align probe function with rpmh-regulator
            serial: pl010: Drop CR register reset on set_termios
            serial: core: Keep mctrl register state and cached copy in sync
            parisc: Avoid calling faulthandler_disabled() twice
            powerpc/6xx: add missing of_node_put
            powerpc/powernv: add missing of_node_put
            powerpc/cell: add missing of_node_put
            powerpc/btext: add missing of_node_put
            powerpc/watchdog: Fix missed watchdog reset due to memory ordering race
            i2c: i801: Don't silently correct invalid transfer size
            powerpc/smp: Move setup_profiling_timer() under CONFIG_PROFILING
            i2c: mpc: Correct I2C reset procedure
            w1: Misuse of get_user()/put_user() reported by sparse
            ALSA: seq: Set upper limit of processed events
            powerpc: handle kdump appropriately with crash_kexec_post_notifiers option
            MIPS: OCTEON: add put_device() after of_find_device_by_node()
            i2c: designware-pci: Fix to change data types of hcnt and lcnt parameters
            MIPS: Octeon: Fix build errors using clang
            scsi: sr: Don't use GFP_DMA
            ASoC: mediatek: mt8173: fix device_node leak
            power: bq25890: Enable continuous conversion for ADC at charging
            rpmsg: core: Clean up resources on announce_create failure.
            ubifs: Error path in ubifs_remount_rw() seems to wrongly free write buffers
            serial: Fix incorrect rs485 polarity on uart open
            cputime, cpuacct: Include guest time in user time in cpuacct.stat
            iwlwifi: mvm: Increase the scan timeout guard to 30 seconds
            s390/mm: fix 2KB pgtable release race
            drm/etnaviv: limit submit sizes
            ext4: make sure to reset inode lockdep class when quota enabling fails
            ext4: make sure quota gets properly shutdown on error
            ext4: set csum seed in tmp inode while migrating to extents
            ext4: Fix BUG_ON in ext4_bread when write quota data
            ext4: don't use the orphan list when migrating an inode
            crypto: stm32/crc32 - Fix kernel BUG triggered in probe()
            ASoC: dpcm: prevent snd_soc_dpcm use after free
            regulator: core: Let boot-on regulators be powered off
            drm/radeon: fix error handling in radeon_driver_open_kms
            ARM: dts: Fix vcsi regulator to be always-on for droid4 to prevent hangs
            firmware: Update Kconfig help text for Google firmware
            media: rcar-csi2: Optimize the selection PHTW register
            Documentation: refer to config RANDOMIZE_BASE for kernel address-space randomization
            RDMA/hns: Modify the mapping attribute of doorbell to device
            RDMA/rxe: Fix a typo in opcode name
            dmaengine: stm32-mdma: fix STM32_MDMA_CTBR_TSEL_MASK
            powerpc/cell: Fix clang -Wimplicit-fallthrough warning
            powerpc/fsl/dts: Enable WA for erratum A-009885 on fman3l MDIO buses
            net/fsl: xgmac_mdio: Fix incorrect iounmap when removing module
            parisc: pdc_stable: Fix memory leak in pdcs_register_pathentries
            af_unix: annote lockless accesses to unix_tot_inflight & gc_in_progress
            net: axienet: Wait for PhyRstCmplt after core reset
            net: axienet: fix number of TX ring slots for available check
            rtc: pxa: fix null pointer dereference
            netns: add schedule point in ops_exit_list()
            libcxgb: Don't accidentally set RTO_ONLINK in cxgb_find_route()
            dmaengine: at_xdmac: Don't start transactions at tx_submit level
            dmaengine: at_xdmac: Print debug message after realeasing the lock
            dmaengine: at_xdmac: Fix lld view setting
            dmaengine: at_xdmac: Fix at_xdmac_lld struct definition
            net_sched: restore "mpu xxx" handling
            bcmgenet: add WOL IRQ check
            scripts/dtc: dtx_diff: remove broken example from help text
            lib82596: Fix IRQ check in sni_82596_probe
            mtd: nand: bbt: Fix corner case in bad block table handling
            mips,s390,sh,sparc: gup: Work around the "COW can break either way" issue
            fuse: fix bad inode
            fuse: fix live lock in fuse_iget()
            Linux 4.19.226
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: Ie7599317fe668c46e0ceca652b4172ad2ce6533d

commit b45c5eeda8dea785e3d411380b486a209768f6b2
Author: Alistair Delva <adelva@google.com>
Date:   Mon Jan 31 22:49:36 2022 +0000

    Revert "ANDROID: android-4.19-stable build canary test."
    
    This reverts commit 3190607b6901d0eac5da8ac0e98c9c8967582342.
    
    Reason for revert: revert do not merge patch
    
    Change-Id: I752181ec42fd0da6fad7a342084357fbad5ad6ef

commit 3190607b6901d0eac5da8ac0e98c9c8967582342
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Wed Jun 24 10:11:34 2020 +0200

    ANDROID: android-4.19-stable build canary test.
    
    Nonsense patch to kick TH
    
    Do not merge.
    
    Bug: 123456789
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Change-Id: Ia53b9ec7b04208a511b25c936525536f4e2dafb9

commit f4b1bd6d9c2e2818ad1ef2483471c8b9a5c0a01c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Jan 29 10:19:19 2022 +0100

    Linux 4.19.227
    
    Link: https://lore.kernel.org/r/20220127180256.837257619@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0008a0c78fc33a84e2212a7c04e6b21a36ca6f4d
Author: Mathias Krause <minipli@grsecurity.net>
Date:   Thu Jan 27 18:34:19 2022 +1000

    drm/vmwgfx: Fix stale file descriptors on failed usercopy
    
    commit a0f90c8815706981c483a652a6aefca51a5e191c upstream.
    
    A failing usercopy of the fence_rep object will lead to a stale entry in
    the file descriptor table as put_unused_fd() won't release it. This
    enables userland to refer to a dangling 'file' object through that still
    valid file descriptor, leading to all kinds of use-after-free
    exploitation scenarios.
    
    Fix this by deferring the call to fd_install() until after the usercopy
    has succeeded.
    
    Fixes: c906965dee22 ("drm/vmwgfx: Add export fence to file descriptor support")
    Signed-off-by: Mathias Krause <minipli@grsecurity.net>
    Signed-off-by: Zack Rusin <zackr@vmware.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6717900f775a6129a7b4d03ba4922218d8bf1caa
Author: Jan Kara <jack@suse.cz>
Date:   Mon Jan 10 19:19:23 2022 +0100

    select: Fix indefinitely sleeping task in poll_schedule_timeout()
    
    commit 68514dacf2715d11b91ca50d88de047c086fea9c upstream.
    
    A task can end up indefinitely sleeping in do_select() ->
    poll_schedule_timeout() when the following race happens:
    
      TASK1 (thread1)             TASK2                   TASK1 (thread2)
      do_select()
        setup poll_wqueues table
        with 'fd'
                                  write data to 'fd'
                                    pollwake()
                                      table->triggered = 1
                                                          closes 'fd' thread1 is
                                                            waiting for
        poll_schedule_timeout()
          - sees table->triggered
          table->triggered = 0
          return -EINTR
        loop back in do_select()
    
    But at this point when TASK1 loops back, the fdget() in the setup of
    poll_wqueues fails.  So now so we never find 'fd' is ready for reading
    and sleep in poll_schedule_timeout() indefinitely.
    
    Treat an fd that got closed as a fd on which some event happened.  This
    makes sure cannot block indefinitely in do_select().
    
    Another option would be to return -EBADF in this case but that has a
    potential of subtly breaking applications that excercise this behavior
    and it happens to work for them.  So returning fd as active seems like a
    safer choice.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac06e167c4ae08e481c7944677856c638724643a
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Fri Jul 31 19:26:16 2020 +0300

    net: bridge: clear bridge's private skb space on xmit
    
    commit fd65e5a95d08389444e8591a20538b3edece0e15 upstream.
    
    We need to clear all of the bridge private skb variables as they can be
    stale due to the packet being recirculated through the stack and then
    transmitted through the bridge device. Similar memset is already done on
    bridge's input. We've seen cases where proxyarp_replied was 1 on routed
    multicast packets transmitted through the bridge to ports with neigh
    suppress which were getting dropped. Same thing can in theory happen with
    the port isolation bit as well.
    
    Fixes: 821f1b21cabb ("bridge: add new BR_NEIGH_SUPPRESS port flag to suppress arp and nd flood")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Huang Guobin <huangguobin4@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b188780649081782e341e52223db47c49f172712
Author: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
Date:   Tue Oct 19 13:27:10 2021 +0100

    drm/i915: Flush TLBs before releasing backing store
    
    commit 7938d61591d33394a21bdd7797a245b65428f44c upstream.
    
    We need to flush TLBs before releasing backing store otherwise userspace
    is able to encounter stale entries if a) it is not declaring access to
    certain buffers and b) it races with the backing store release from a
    such undeclared execution already executing on the GPU in parallel.
    
    The approach taken is to mark any buffer objects which were ever bound
    to the GPU and to trigger a serialized TLB flush when their backing
    store is released.
    
    Alternatively the flushing could be done on VMA unbind, at which point
    we would be able to ascertain whether there is potential a parallel GPU
    execution (which could race), but essentially it boils down to paying
    the cost of TLB flushes potentially needlessly at VMA unbind time (when
    the backing store is not known to be going away so not needed for
    safety), versus potentially needlessly at backing store relase time
    (since we at that point cannot tell whether there is anything executing
    on the GPU which uses that object).
    
    Thereforce simplicity of implementation has been chosen for now with
    scope to benchmark and refine later as required.
    
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Reported-by: Sushma Venkatesh Reddy <sushma.venkatesh.reddy@intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Acked-by: Dave Airlie <airlied@redhat.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Jon Bloomfield <jon.bloomfield@intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42e2d4c27ba5617160a896bf92af049f6d013ae3
Author: Wyon bi <bivvy.bi@rock-chips.com>
Date:   Mon Dec 27 16:11:25 2021 +0800

    drm/bridge: analogix_dp: Correct phy status in loader_protect
    
    Signed-off-by: Wyon bi <bivvy.bi@rock-chips.com>
    Change-Id: Ia0c62ae6ed411200b539e33c797bc8d0b1c7e14b

commit 9852468421c8ff5af8b14c810e7f2248036a88b0
Author: Wyon bi <bivvy.bi@rock-chips.com>
Date:   Mon Dec 27 16:25:10 2021 +0800

    phy/rockchip: naneng-edp: Check if PHY need configured during startup
    
    Signed-off-by: Wyon bi <bivvy.bi@rock-chips.com>
    Change-Id: Icf5aeb751401d0ab2c2e02443f6316b49b6b23c3

commit c8855e990a676dc5054395b63239e347ee56c85a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 27 09:04:34 2022 +0100

    Linux 4.19.226
    
    Link: https://lore.kernel.org/r/20220124183943.102762895@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a8908cb82568c71b672e83d834e8b59ccf75f8e
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Mon Jan 24 16:18:28 2022 +0100

    fuse: fix live lock in fuse_iget()
    
    commit 775c5033a0d164622d9d10dd0f0a5531639ed3ed upstream.
    
    Commit 5d069dbe8aaf ("fuse: fix bad inode") replaced make_bad_inode()
    in fuse_iget() with a private implementation fuse_make_bad().
    
    The private implementation fails to remove the bad inode from inode
    cache, so the retry loop with iget5_locked() finds the same bad inode
    and marks it bad forever.
    
    kmsg snip:
    
    [ ] rcu: INFO: rcu_sched self-detected stall on CPU
    ...
    [ ]  ? bit_wait_io+0x50/0x50
    [ ]  ? fuse_init_file_inode+0x70/0x70
    [ ]  ? find_inode.isra.32+0x60/0xb0
    [ ]  ? fuse_init_file_inode+0x70/0x70
    [ ]  ilookup5_nowait+0x65/0x90
    [ ]  ? fuse_init_file_inode+0x70/0x70
    [ ]  ilookup5.part.36+0x2e/0x80
    [ ]  ? fuse_init_file_inode+0x70/0x70
    [ ]  ? fuse_inode_eq+0x20/0x20
    [ ]  iget5_locked+0x21/0x80
    [ ]  ? fuse_inode_eq+0x20/0x20
    [ ]  fuse_iget+0x96/0x1b0
    
